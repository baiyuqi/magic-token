{
  "contractName": "MockSecurityTokenLogic",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "bytes32"
        },
        {
          "name": "_uri",
          "type": "string"
        },
        {
          "name": "_documentHash",
          "type": "bytes32"
        }
      ],
      "name": "setDocument",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "freezeTransfers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "upgradeToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_partition",
          "type": "bytes32"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperatorByPartition",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "canTransferFrom",
      "outputs": [
        {
          "name": "reasonCode",
          "type": "bytes1"
        },
        {
          "name": "appCode",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_module",
          "type": "address"
        }
      ],
      "name": "unarchiveModule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_partition",
          "type": "bytes32"
        },
        {
          "name": "_tokenHolder",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        },
        {
          "name": "_operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorRedeemByPartition",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_partition",
          "type": "bytes32"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "revokeOperatorByPartition",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "holderCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "canTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bytes1"
        },
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_granularity",
          "type": "uint256"
        }
      ],
      "name": "changeGranularity",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferWithData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenHolder",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        },
        {
          "name": "_operatorData",
          "type": "bytes"
        }
      ],
      "name": "controllerRedeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getterDelegate",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_partition",
          "type": "bytes32"
        },
        {
          "name": "_tokenHolder",
          "type": "address"
        }
      ],
      "name": "balanceOfByPartition",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unfreezeTransfers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_module",
          "type": "address"
        }
      ],
      "name": "archiveModule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "someValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isControllable",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_module",
          "type": "address"
        },
        {
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "isModule",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "changeTreasuryWallet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentCheckpointId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_module",
          "type": "address"
        },
        {
          "name": "_change",
          "type": "uint256"
        },
        {
          "name": "_increase",
          "type": "bool"
        }
      ],
      "name": "changeModuleBudget",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_partition",
          "type": "bytes32"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "redeemByPartition",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dataStore",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_partition",
          "type": "bytes32"
        },
        {
          "name": "_tokenHolder",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "issueByPartition",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "polyToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newTokenDetails",
          "type": "string"
        }
      ],
      "name": "updateTokenDetails",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenHolders",
          "type": "address[]"
        },
        {
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "issueMulti",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "disableController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "polymathRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controllerDisabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_partition",
          "type": "bytes32"
        },
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        },
        {
          "name": "_operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorTransferByPartition",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dataStore",
          "type": "address"
        }
      ],
      "name": "changeDataStore",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenHolder",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "redeemFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_partition",
          "type": "bytes32"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "canTransferByPartition",
      "outputs": [
        {
          "name": "reasonCode",
          "type": "bytes1"
        },
        {
          "name": "appStatusCode",
          "type": "bytes32"
        },
        {
          "name": "toPartition",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_module",
          "type": "address"
        }
      ],
      "name": "removeModule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_module",
          "type": "address"
        }
      ],
      "name": "upgradeModule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_moduleFactory",
          "type": "address"
        },
        {
          "name": "_data",
          "type": "bytes"
        },
        {
          "name": "_maxCost",
          "type": "uint256"
        },
        {
          "name": "_budget",
          "type": "uint256"
        },
        {
          "name": "_archived",
          "type": "bool"
        }
      ],
      "name": "addModule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "moduleRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenHolder",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "issue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "removeDocument",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityTokenRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenDetails",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "freezeIssuance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transfersFrozen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferFromWithData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        },
        {
          "name": "_operatorData",
          "type": "bytes"
        }
      ],
      "name": "controllerTransfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_partition",
          "type": "bytes32"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferByPartition",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateFromRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createCheckpoint",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_upgrade",
          "type": "uint256"
        }
      ],
      "name": "UpgradeEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_types",
          "type": "uint8[]"
        },
        {
          "indexed": true,
          "name": "_name",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "_moduleFactory",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_module",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_moduleCost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_budget",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_label",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_archived",
          "type": "bool"
        }
      ],
      "name": "ModuleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_types",
          "type": "uint8[]"
        },
        {
          "indexed": false,
          "name": "_module",
          "type": "address"
        }
      ],
      "name": "ModuleUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_oldDetails",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_newDetails",
          "type": "string"
        }
      ],
      "name": "UpdateTokenDetails",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_oldName",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "UpdateTokenName",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_oldGranularity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_newGranularity",
          "type": "uint256"
        }
      ],
      "name": "GranularityChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "FreezeIssuance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "FreezeTransfers",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_checkpointId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_investorLength",
          "type": "uint256"
        }
      ],
      "name": "CheckpointCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_oldController",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newController",
          "type": "address"
        }
      ],
      "name": "SetController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_oldTreasuryWallet",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_newTreasuryWallet",
          "type": "address"
        }
      ],
      "name": "TreasuryWalletChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DisableController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_major",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "_minor",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "_patch",
          "type": "uint8"
        }
      ],
      "name": "TokenUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_types",
          "type": "uint8[]"
        },
        {
          "indexed": false,
          "name": "_module",
          "type": "address"
        }
      ],
      "name": "ModuleArchived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_types",
          "type": "uint8[]"
        },
        {
          "indexed": false,
          "name": "_module",
          "type": "address"
        }
      ],
      "name": "ModuleUnarchived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_types",
          "type": "uint8[]"
        },
        {
          "indexed": false,
          "name": "_module",
          "type": "address"
        }
      ],
      "name": "ModuleRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_moduleTypes",
          "type": "uint8[]"
        },
        {
          "indexed": false,
          "name": "_module",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_oldBudget",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_budget",
          "type": "uint256"
        }
      ],
      "name": "ModuleBudgetChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_fromPartition",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "_operatorData",
          "type": "bytes"
        }
      ],
      "name": "TransferByPartition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "partition",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperatorByPartition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "partition",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperatorByPartition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "partition",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "IssuedByPartition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "partition",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "RedeemedByPartition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_controller",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "_operatorData",
          "type": "bytes"
        }
      ],
      "name": "ControllerTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_controller",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenHolder",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "_operatorData",
          "type": "bytes"
        }
      ],
      "name": "ControllerRedemption",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_name",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_uri",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_documentHash",
          "type": "bytes32"
        }
      ],
      "name": "DocumentRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_name",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_uri",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_documentHash",
          "type": "bytes32"
        }
      ],
      "name": "DocumentUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "Issued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_getterDelegate",
          "type": "address"
        },
        {
          "name": "_upgrade",
          "type": "uint256"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_getterDelegate",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_getterDelegate",
          "type": "address"
        },
        {
          "name": "_someValue",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_upgrade",
          "type": "uint256"
        }
      ],
      "name": "newFunction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "bytes"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "name": "addModuleWithLabel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_uri\",\"type\":\"string\"},{\"name\":\"_documentHash\",\"type\":\"bytes32\"}],\"name\":\"setDocument\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"freezeTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"upgradeToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_partition\",\"type\":\"bytes32\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"authorizeOperatorByPartition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"canTransferFrom\",\"outputs\":[{\"name\":\"reasonCode\",\"type\":\"bytes1\"},{\"name\":\"appCode\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"unarchiveModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_partition\",\"type\":\"bytes32\"},{\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorRedeemByPartition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_partition\",\"type\":\"bytes32\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"revokeOperatorByPartition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"holderCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"canTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes1\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bool\"}],\"name\":\"addModuleWithLabel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_granularity\",\"type\":\"uint256\"}],\"name\":\"changeGranularity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferWithData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_operatorData\",\"type\":\"bytes\"}],\"name\":\"controllerRedeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getterDelegate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_partition\",\"type\":\"bytes32\"},{\"name\":\"_tokenHolder\",\"type\":\"address\"}],\"name\":\"balanceOfByPartition\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unfreezeTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"archiveModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"someValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isControllable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_module\",\"type\":\"address\"},{\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"isModule\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"changeTreasuryWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentCheckpointId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_module\",\"type\":\"address\"},{\"name\":\"_change\",\"type\":\"uint256\"},{\"name\":\"_increase\",\"type\":\"bool\"}],\"name\":\"changeModuleBudget\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_partition\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"redeemByPartition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dataStore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_partition\",\"type\":\"bytes32\"},{\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"issueByPartition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"polyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newTokenDetails\",\"type\":\"string\"}],\"name\":\"updateTokenDetails\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenHolders\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"issueMulti\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"disableController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"polymathRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controllerDisabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_partition\",\"type\":\"bytes32\"},{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorTransferByPartition\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dataStore\",\"type\":\"address\"}],\"name\":\"changeDataStore\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"redeemFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_partition\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"canTransferByPartition\",\"outputs\":[{\"name\":\"reasonCode\",\"type\":\"bytes1\"},{\"name\":\"appStatusCode\",\"type\":\"bytes32\"},{\"name\":\"toPartition\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"removeModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"upgradeModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_moduleFactory\",\"type\":\"address\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_maxCost\",\"type\":\"uint256\"},{\"name\":\"_budget\",\"type\":\"uint256\"},{\"name\":\"_archived\",\"type\":\"bool\"}],\"name\":\"addModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"moduleRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"removeDocument\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_getterDelegate\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_getterDelegate\",\"type\":\"address\"},{\"name\":\"_someValue\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"securityTokenRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenDetails\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"freezeIssuance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_getterDelegate\",\"type\":\"address\"},{\"name\":\"_upgrade\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgrade\",\"type\":\"uint256\"}],\"name\":\"newFunction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferFromWithData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_operatorData\",\"type\":\"bytes\"}],\"name\":\"controllerTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_partition\",\"type\":\"bytes32\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferByPartition\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateFromRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createCheckpoint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_upgrade\",\"type\":\"uint256\"}],\"name\":\"UpgradeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_types\",\"type\":\"uint8[]\"},{\"indexed\":true,\"name\":\"_name\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_moduleFactory\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_module\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_moduleCost\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_budget\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_label\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_archived\",\"type\":\"bool\"}],\"name\":\"ModuleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_types\",\"type\":\"uint8[]\"},{\"indexed\":false,\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldDetails\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_newDetails\",\"type\":\"string\"}],\"name\":\"UpdateTokenDetails\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"UpdateTokenName\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldGranularity\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newGranularity\",\"type\":\"uint256\"}],\"name\":\"GranularityChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"FreezeIssuance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"FreezeTransfers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_checkpointId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_investorLength\",\"type\":\"uint256\"}],\"name\":\"CheckpointCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oldController\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"SetController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldTreasuryWallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newTreasuryWallet\",\"type\":\"address\"}],\"name\":\"TreasuryWalletChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DisableController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_major\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"_minor\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"_patch\",\"type\":\"uint8\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_types\",\"type\":\"uint8[]\"},{\"indexed\":false,\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleArchived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_types\",\"type\":\"uint8[]\"},{\"indexed\":false,\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleUnarchived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_types\",\"type\":\"uint8[]\"},{\"indexed\":false,\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_moduleTypes\",\"type\":\"uint8[]\"},{\"indexed\":false,\"name\":\"_module\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_oldBudget\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_budget\",\"type\":\"uint256\"}],\"name\":\"ModuleBudgetChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_fromPartition\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"_operatorData\",\"type\":\"bytes\"}],\"name\":\"TransferByPartition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"partition\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperatorByPartition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"partition\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperatorByPartition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"partition\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"IssuedByPartition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"partition\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"RedeemedByPartition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"_operatorData\",\"type\":\"bytes\"}],\"name\":\"ControllerTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"_operatorData\",\"type\":\"bytes\"}],\"name\":\"ControllerRedemption\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_name\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_uri\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_documentHash\",\"type\":\"bytes32\"}],\"name\":\"DocumentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_name\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_uri\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_documentHash\",\"type\":\"bytes32\"}],\"name\":\"DocumentUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Issued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"archiveModule(address)\":{\"params\":{\"_module\":\"address of module to archive\\r\"}},\"authorizeOperator(address)\":{\"params\":{\"_operator\":\"An address which is being authorised.\\r\"}},\"authorizeOperatorByPartition(bytes32,address)\":{\"params\":{\"_operator\":\"An address which is being authorised\\r\",\"_partition\":\"The partition to which the operator is authorised\\r\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"balanceOfByPartition(bytes32,address)\":{\"params\":{\"_partition\":\"Partition which differentiate the tokens.\\r\",\"_tokenHolder\":\"Whom balance need to queried\\r\"},\"return\":\"Amount of tokens as per the given partitions\\r\"},\"canTransfer(address,uint256,bytes)\":{\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\\r\",\"_to\":\"address The address which you want to transfer to\\r\",\"_value\":\"uint256 the amount of tokens to be transferred\\r\"},\"return\":\"byte Ethereum status code (ESC)\\rbytes32 Application specific reason code\\r\"},\"canTransferByPartition(address,address,bytes32,uint256,bytes)\":{\"params\":{\"_data\":\"Additional data attached to the transfer of tokens\\r\",\"_from\":\"The address from whom the tokens get transferred.\\r\",\"_partition\":\"The partition from which to transfer tokens\\r\",\"_to\":\"The address to which to transfer tokens to.\\r\",\"_value\":\"The amount of tokens to transfer from `_partition`\\r\"},\"return\":\"ESC (Ethereum Status Code) following the EIP-1066 standard\\rApplication specific reason codes with additional details\\rThe partition to which the transferred tokens were allocated for the _to address\\r\"},\"canTransferFrom(address,address,uint256,bytes)\":{\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\\r\",\"_from\":\"address The address which you want to send tokens from\\r\",\"_to\":\"address The address which you want to transfer to\\r\",\"_value\":\"uint256 the amount of tokens to be transferred\\r\"},\"return\":\"byte Ethereum status code (ESC)\\rbytes32 Application specific reason code\\r\"},\"changeDataStore(address)\":{\"params\":{\"_dataStore\":\"Address of the token data store\\r\"}},\"changeGranularity(uint256)\":{\"params\":{\"_granularity\":\"granularity level of the token\\r\"}},\"changeModuleBudget(address,uint256,bool)\":{\"params\":{\"_change\":\"change in allowance\\r\",\"_increase\":\"true if budget has to be increased, false if decrease\\r\",\"_module\":\"module address\\r\"}},\"changeName(string)\":{\"params\":{\"_name\":\"new name of the token\\r\"}},\"changeTreasuryWallet(address)\":{\"params\":{\"_wallet\":\"Ethereum address of the treasury wallet\\r\"}},\"controllerRedeem(address,uint256,bytes,bytes)\":{\"details\":\"This function can only be executed by the `controller` address.\\r\",\"params\":{\"_data\":\"data to validate the transfer. (It is not used in this reference implementation\\r because use of `_data` parameter is implementation specific).\\r\",\"_operatorData\":\"data attached to the transfer by controller to emit in event. (It is more like a reason string\\r for calling this function (aka force transfer) which provides the transparency on-chain).\\r\",\"_tokenHolder\":\"The account whose tokens will be redeemed.\\r\",\"_value\":\"uint256 the amount of tokens need to be redeemed.\\r\"}},\"controllerTransfer(address,address,uint256,bytes,bytes)\":{\"details\":\"This function can only be executed by the `controller` address.\\r\",\"params\":{\"_data\":\"data to validate the transfer. (It is not used in this reference implementation\\r because use of `_data` parameter is implementation specific).\\r\",\"_from\":\"Address The address which you want to send tokens from\\r\",\"_operatorData\":\"data attached to the transfer by controller to emit in event. (It is more like a reason string\\r for calling this function (aka force transfer) which provides the transparency on-chain).\\r\",\"_to\":\"Address The address which you want to transfer to\\r\",\"_value\":\"uint256 the amount of tokens to be transferred\\r\"}},\"createCheckpoint()\":{\"return\":\"uint256\\r\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"disableController(bytes)\":{\"details\":\"enabled via feature switch \\\"disableControllerAllowed\\\"\\r\"},\"freezeIssuance(bytes)\":{\"details\":\"It MUST NOT be possible to increase `totalSuppy` after this function is called.\\r\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"initialize(address)\":{\"details\":\"Expected to be called atomically with the proxy being created, by the owner of the token\\rCan only be called once\\r\"},\"initialize(address,uint256)\":{\"details\":\"Expected to be called atomically with the proxy being created, by the owner of the token\\rCan only be called once\\r\"},\"isControllable()\":{\"details\":\"If `isControllable` returns `false` then it always return `false` and\\r `controllerTransfer` / `controllerRedeem` will always revert.\\r\",\"return\":\"bool `true` when controller address is non-zero otherwise return `false`.\\r\"},\"isModule(address,uint8)\":{\"params\":{\"_module\":\"Address to check\\r\",\"_type\":\"type to check against\\r\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\\r\"},\"issue(address,uint256,bytes)\":{\"details\":\"It only be called by the token issuer or the operator defined by the issuer. ERC1594 doesn't have\\r have the any logic related to operator but its superset ERC1400 have the operator logic and this function\\r is allowed to call by the operator.\\r\",\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\\r\",\"_tokenHolder\":\"The account that will receive the created tokens (account should be whitelisted or KYCed).\\r\",\"_value\":\"The amount of tokens need to be issued\\r\"}},\"issueByPartition(bytes32,address,uint256,bytes)\":{\"params\":{\"_data\":\"Additional data attached to the minting of tokens\\r\",\"_partition\":\"The partition to allocate the increase in balance\\r\",\"_tokenHolder\":\"The token holder whose balance should be increased\\r\",\"_value\":\"The amount by which to increase the balance\\r\"}},\"issueMulti(address[],uint256[])\":{\"details\":\"Can only be called by the issuer or STO attached to the token.\\r\",\"params\":{\"_tokenHolders\":\"A list of addresses to whom the minted tokens will be dilivered\\r\",\"_values\":\"A list of number of tokens get minted and transfer to corresponding address of the investor from _tokenHolders[] list\\r\"},\"return\":\"success\\r\"},\"operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)\":{\"details\":\"This function can only be called by the authorised operator.\\r\",\"params\":{\"_data\":\"Additional data attached to the burning of tokens\\r\",\"_operatorData\":\"Additional data attached to the transfer of tokens by the operator\\r\",\"_partition\":\"The partition to allocate the decrease in balance.\\r\",\"_tokenHolder\":\"The token holder whose balance should be decreased\\r\",\"_value\":\"The amount by which to decrease the balance\\r\"}},\"operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)\":{\"params\":{\"_data\":\"Additional data attached to the transfer of tokens\\r\",\"_from\":\"The address from which to transfer tokens from\\r\",\"_operatorData\":\"Additional data attached to the transfer of tokens by the operator\\r\",\"_partition\":\"The partition from which to transfer tokens.\\r\",\"_to\":\"The address to which to transfer tokens to\\r\",\"_value\":\"The amount of tokens to transfer from `_partition`\\r\"},\"return\":\"The partition to which the transferred tokens were allocated for the _to address\\r\"},\"owner()\":{\"return\":\"the address of the owner.\\r\"},\"redeem(uint256,bytes)\":{\"params\":{\"_data\":\"The `bytes _data` it can be used in the token contract to authenticate the redemption.\\r\",\"_value\":\"The amount of tokens need to be redeemed\\r\"}},\"redeemByPartition(bytes32,uint256,bytes)\":{\"params\":{\"_data\":\"Additional data attached to the burning of tokens\\r\",\"_partition\":\"The partition to allocate the decrease in balance\\r\",\"_value\":\"The amount by which to decrease the balance\\r\"}},\"redeemFrom(address,uint256,bytes)\":{\"details\":\"It is analogy to `transferFrom`\\r\",\"params\":{\"_data\":\"The `bytes _data` it can be used in the token contract to authenticate the redemption.\\r\",\"_tokenHolder\":\"The account whose tokens gets redeemed.\\r\",\"_value\":\"The amount of tokens need to be redeemed\\r\"}},\"removeDocument(bytes32)\":{\"details\":\"Can only be executed by the owner of the contract.\\r\",\"params\":{\"_name\":\"Name of the document. It should be unique always\\r\"}},\"removeModule(address)\":{\"params\":{\"_module\":\"address of module to unarchive\\r\"}},\"revokeOperator(address)\":{\"params\":{\"_operator\":\"An address which is being de-authorised\\r\"}},\"revokeOperatorByPartition(bytes32,address)\":{\"params\":{\"_operator\":\"An address which is being de-authorised\\r\",\"_partition\":\"The partition to which the operator is de-authorised\\r\"}},\"setController(address)\":{\"params\":{\"_controller\":\"address of the controller\\r\"}},\"setDocument(bytes32,string,bytes32)\":{\"details\":\"Can only be executed by the owner of the contract.\\r\",\"params\":{\"_documentHash\":\"hash (of the contents) of the document.\\r\",\"_name\":\"Name of the document. It should be unique always\\r\",\"_uri\":\"Off-chain uri of the document from where it is accessible to investors/advisors to read.\\r\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"receiver of transfer\\r\",\"_value\":\"value of transfer\\r\"},\"return\":\"bool success\\r\"},\"transferByPartition(bytes32,address,uint256,bytes)\":{\"params\":{\"_data\":\"Additional data attached to the transfer of tokens\\r\",\"_partition\":\"The partition from which to transfer tokens\\r\",\"_to\":\"The address to which to transfer tokens to\\r\",\"_value\":\"The amount of tokens to transfer from `_partition`\\r\"},\"return\":\"The partition to which the transferred tokens were allocated for the _to address\\r\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"_from\":\"sender of transfer\\r\",\"_to\":\"receiver of transfer\\r\",\"_value\":\"value of transfer\\r\"},\"return\":\"bool success\\r\"},\"transferFromWithData(address,address,uint256,bytes)\":{\"details\":\"`msg.sender` MUST have a sufficient `allowance` set and this `allowance` must be debited by the `_value`.\\r\",\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\\r for the token contract to interpret or record. This could be signed data authorising the transfer\\r (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\\r\",\"_from\":\"address The address which you want to send tokens from\\r\",\"_to\":\"address The address which you want to transfer to\\r\",\"_value\":\"uint256 the amount of tokens to be transferred\\r\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"transferWithData(address,uint256,bytes)\":{\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\\r for the token contract to interpret or record. This could be signed data authorising the transfer\\r (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\\r\",\"_to\":\"address The address which you want to transfer to\\r\",\"_value\":\"uint256 the amount of tokens to be transferred\\r\"}},\"unarchiveModule(address)\":{\"params\":{\"_module\":\"address of module to unarchive\\r\"}},\"updateTokenDetails(string)\":{\"params\":{\"_newTokenDetails\":\"New token details\\r\"}},\"upgrade(address,uint256)\":{\"details\":\"Expected to be called atomically with the proxy being created, by the owner of the token\\rCan only be called once\\r\"},\"upgradeModule(address)\":{\"params\":{\"_module\":\"address of module to archive\\r\"}},\"withdrawERC20(address,uint256)\":{\"details\":\"Owner can transfer POLY to the ST which will be used to pay for modules that require a POLY fee.\\r\",\"params\":{\"_tokenContract\":\"Address of the ERC20Basic compliance token\\r\",\"_value\":\"amount of POLY to withdraw\\r\"}}},\"title\":\"Security Token contract (mock)\\r\"},\"userdoc\":{\"methods\":{\"addModule(address,bytes,uint256,uint256,bool)\":{\"notice\":\"addModule function will call addModuleWithLabel() with an empty label for backward compatible\\r\"},\"archiveModule(address)\":{\"notice\":\"Archives a module attached to the SecurityToken\\r\"},\"authorizeOperator(address)\":{\"notice\":\"Authorises an operator for all partitions of `msg.sender`.\\r NB - Allowing investors to authorize an investor to be an operator of all partitions\\r but it doesn't mean we operator is allowed to transfer the LOCKED partition values.\\r Logic for this restriction is written in `operatorTransferByPartition()` function.\\r\"},\"authorizeOperatorByPartition(bytes32,address)\":{\"notice\":\"Authorises an operator for a given partition of `msg.sender`\\r\"},\"balanceOfByPartition(bytes32,address)\":{\"notice\":\"Get the balance according to the provided partitions\\r\"},\"canTransfer(address,uint256,bytes)\":{\"notice\":\"Transfers of securities may fail for a number of reasons. So this function will used to understand the\\r cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped\\r with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\\r\"},\"canTransferByPartition(address,address,bytes32,uint256,bytes)\":{\"notice\":\"The standard provides an on-chain function to determine whether a transfer will succeed,\\r and return details indicating the reason if the transfer is not valid.\\r\"},\"canTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers of securities may fail for a number of reasons. So this function will used to understand the\\r cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped\\r with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\\r\"},\"changeDataStore(address)\":{\"notice\":\"Allows owner to change data store\\r\"},\"changeGranularity(uint256)\":{\"notice\":\"Allows owner to change token granularity\\r\"},\"changeModuleBudget(address,uint256,bool)\":{\"notice\":\"allows owner to increase/decrease POLY approval of one of the modules\\r\"},\"changeName(string)\":{\"notice\":\"Allows owner to change token name\\r\"},\"changeTreasuryWallet(address)\":{\"notice\":\"Allows to change the treasury wallet address\\r\"},\"controllerRedeem(address,uint256,bytes,bytes)\":{\"notice\":\"This function allows an authorised address to redeem tokens for any token holder.\\r The redemption must still respect the balances of the token holder (so the redemption must be for at most\\r `balanceOf(_tokenHolder)` tokens) and potentially also need to respect other transfer restrictions.\\r\"},\"controllerTransfer(address,address,uint256,bytes,bytes)\":{\"notice\":\"This function allows an authorised address to transfer tokens between any two token holders.\\r The transfer must still respect the balances of the token holders (so the transfer must be for at most\\r `balanceOf(_from)` tokens) and potentially also need to respect other transfer restrictions.\\r\"},\"createCheckpoint()\":{\"notice\":\"Creates a checkpoint that can be used to query historical balances / totalSuppy\\r\"},\"disableController(bytes)\":{\"notice\":\"Used by the issuer to permanently disable controller functionality\\r\"},\"freezeIssuance(bytes)\":{\"notice\":\"Permanently freeze issuance of this security token.\\r\"},\"freezeTransfers()\":{\"notice\":\"freezes transfers\\r\"},\"initialize(address)\":{\"notice\":\"Initialization function\\r\"},\"initialize(address,uint256)\":{\"notice\":\"Initialization function\\r\"},\"isControllable()\":{\"notice\":\"In order to provide transparency over whether `controllerTransfer` / `controllerRedeem` are useable\\r or not `isControllable` function will be used.\\r\"},\"isModule(address,uint8)\":{\"notice\":\"Checks if an address is a module of certain type\\r\"},\"issue(address,uint256,bytes)\":{\"notice\":\"This function must be called to increase the total supply (Corresponds to mint function of ERC20).\\r\"},\"issueByPartition(bytes32,address,uint256,bytes)\":{\"notice\":\"Increases totalSupply and the corresponding amount of the specified owners partition\\r\"},\"issueMulti(address[],uint256[])\":{\"notice\":\"issue new tokens and assigns them to the target _tokenHolder.\\r\"},\"operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)\":{\"notice\":\"Decreases totalSupply and the corresponding amount of the specified partition of tokenHolder\\r\"},\"operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)\":{\"notice\":\"Transfers the ownership of tokens from a specified partition from one address to another address\\r\"},\"redeem(uint256,bytes)\":{\"notice\":\"This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\\r using different ways that could be implemented with in the `redeem` function definition. But those implementations\\r are out of the scope of the ERC1594.\\r\"},\"redeemByPartition(bytes32,uint256,bytes)\":{\"notice\":\"Decreases totalSupply and the corresponding amount of the specified partition of msg.sender\\r\"},\"redeemFrom(address,uint256,bytes)\":{\"notice\":\"This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\\r using different ways that could be implemented with in the `redeem` function definition. But those implementations\\r are out of the scope of the ERC1594.\\r\"},\"removeDocument(bytes32)\":{\"notice\":\"Used to remove an existing document from the contract by giving the name of the document.\\r\"},\"removeModule(address)\":{\"notice\":\"Removes a module attached to the SecurityToken\\r\"},\"revokeOperator(address)\":{\"notice\":\"Revokes authorisation of an operator previously given for all partitions of `msg.sender`.\\r NB - Allowing investors to authorize an investor to be an operator of all partitions\\r but it doesn't mean we operator is allowed to transfer the LOCKED partition values.\\r Logic for this restriction is written in `operatorTransferByPartition()` function.\\r\"},\"revokeOperatorByPartition(bytes32,address)\":{\"notice\":\"Revokes authorisation of an operator previously given for a specified partition of `msg.sender`\\r\"},\"setController(address)\":{\"notice\":\"Used by the issuer to set the controller addresses\\r\"},\"setDocument(bytes32,string,bytes32)\":{\"notice\":\"Used to attach a new document to the contract, or update the URI or hash of an existing attached document\\r\"},\"transfer(address,uint256)\":{\"notice\":\"Overloaded version of the transfer function\\r\"},\"transferByPartition(bytes32,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of tokens from a specified partition from one address to another address\\r\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Overloaded version of the transferFrom function\\r\"},\"transferFromWithData(address,address,uint256,bytes)\":{\"notice\":\"Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\\r However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\\r cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\\r approving a token transfer, and authorised entity provides signed data which further validates the transfer.\\r\"},\"transferWithData(address,uint256,bytes)\":{\"notice\":\"Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\\r However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\\r cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\\r approving a token transfer, and authorised entity provides signed data which further validates the transfer.\\r\"},\"unarchiveModule(address)\":{\"notice\":\"Unarchives a module attached to the SecurityToken\\r\"},\"unfreezeTransfers()\":{\"notice\":\"Unfreeze transfers\\r\"},\"updateTokenDetails(string)\":{\"notice\":\"updates the tokenDetails associated with the token\\r\"},\"upgrade(address,uint256)\":{\"notice\":\"Initialization function\\r\"},\"upgradeModule(address)\":{\"notice\":\"Upgrades a module attached to the SecurityToken\\r\"},\"upgradeToken()\":{\"notice\":\"Upgrades security token\\r\"},\"withdrawERC20(address,uint256)\":{\"notice\":\"Allows the owner to withdraw unspent POLY stored by them on the ST or any ERC20 token.\\r\"}},\"notice\":\"SecurityToken is an ERC1400 token with added capabilities:\\r- Implements the ERC1400 Interface\\r- Transfers are restricted\\r- Modules can be attached to it to control its behaviour\\r- ST should not be deployed directly, but rather the SecurityTokenRegistry should be used\\r- ST does not inherit from ISecurityToken due to:\\r- https://github.com/ethereum/solidity/issues/4847\\r\"}},\"settings\":{\"compilationTarget\":{\"/C/mspace/polymath-core/contracts/mocks/MockSecurityTokenLogic.sol\":\"MockSecurityTokenLogic\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/mspace/polymath-core/contracts/interfaces/IDataStore.sol\":{\"keccak256\":\"0xb41b686a022dcc47c39327aa32311fab47ae958cb798bb3f08cf44792db398fe\",\"urls\":[\"bzzr://034481827f48714e62cb1f7685e72ef0533cb7b5991da0232a67106e0cb1ed5c\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModule.sol\":{\"keccak256\":\"0xbe5b025f519bd373776ae04da7c99e5baeecc51ae5cfd56e304ccf65fb743f9f\",\"urls\":[\"bzzr://6ff0aa2de2d6b1a9801a7f3baa2500326cb94702c5a30ff3adbbcae060b14413\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModuleFactory.sol\":{\"keccak256\":\"0x233b5044aafc5a57bff374d32be347b5f58e0f7b4194084f5ac812963cee108b\",\"urls\":[\"bzzr://6d78d7157910cab1a9544e09476b2b96c23ec2fedc1c8c2ae12c755e0454b99e\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModuleRegistry.sol\":{\"keccak256\":\"0x21d5fbfb49b074ed60509fc7fbe372923bddb28d812af5516f074acbb2389dfa\",\"urls\":[\"bzzr://717fca3ac9e7f785a77d192c96abd9b5ba74010bd47ec046ce2a470f96c6cab0\"]},\"/C/mspace/polymath-core/contracts/interfaces/IOracle.sol\":{\"keccak256\":\"0x23b25f1032ed5c51f37acedbf91f0a9ea2c5ab19621e90aacefaf0ad280f628f\",\"urls\":[\"bzzr://4083f9b06d3a58fad3e0e5e92f68fbe768a92ae2092cd78082b116434e9dba94\"]},\"/C/mspace/polymath-core/contracts/interfaces/IPoly.sol\":{\"keccak256\":\"0x4d356e81a772b92802a31e03f726744f91e4c8e7e7af8b8f0f514ef58d6827f4\",\"urls\":[\"bzzr://60432eaeb51bb3d60285d4226a342adc7d082609772f0ed1b1a7a7c44015456a\"]},\"/C/mspace/polymath-core/contracts/interfaces/IPolymathRegistry.sol\":{\"keccak256\":\"0x6b6fbd0f55c6f2905e308c235a10b121c5779aa8bcfa1f07ccca4d8e19de7bc9\",\"urls\":[\"bzzr://700dab32ed439b1ea8d672742947abc2759093fb0a21144e05de7abc2954ecc1\"]},\"/C/mspace/polymath-core/contracts/interfaces/ISecurityTokenRegistry.sol\":{\"keccak256\":\"0x5445c715ca6ec0df962d9c31787b73b2fb3382236dfc69e31d4e8b3f260d71aa\",\"urls\":[\"bzzr://25cdfd8fcf1bc0f28da527f08c11738b93676ace070b9b63a92a14c2f4d2e2cc\"]},\"/C/mspace/polymath-core/contracts/interfaces/ITransferManager.sol\":{\"keccak256\":\"0xe7d3b5757b8502eb3f92225db6c2268f3f6fac3bfa195bbb97ec9f4c15b46210\",\"urls\":[\"bzzr://3dbb6638be740a5db6ecebe28b318b9fbfbb1b81dd25a3bf30ee932e6e794d2a\"]},\"/C/mspace/polymath-core/contracts/interfaces/IUpgradableTokenFactory.sol\":{\"keccak256\":\"0xf4202906282556a61eacef6ffa4779a6c3eb4350b31518ac86af3cac657ef948\",\"urls\":[\"bzzr://178b0d0646689366979907d2ed95edb3fda6f5c29ea4644297216dce51427f72\"]},\"/C/mspace/polymath-core/contracts/interfaces/token/IERC1410.sol\":{\"keccak256\":\"0xc3cbb9782f55cdda8295b2d9b8aaf90b804ec8fe63e72598251d9a2ce9f983e5\",\"urls\":[\"bzzr://f293a74b45f2bafd1bb48c404a5c758ba4731a2ea6fbe3446079f092fa55a6b3\"]},\"/C/mspace/polymath-core/contracts/interfaces/token/IERC1594.sol\":{\"keccak256\":\"0x9a036e2e71b6a0d8c51b1f254059acad9da0a599d31fba8b63f4d95c3d114254\",\"urls\":[\"bzzr://9b4e0dc11a4e6cd111bf6508540f5e8a491b7d7260b6b27573fb53792c43b837\"]},\"/C/mspace/polymath-core/contracts/interfaces/token/IERC1643.sol\":{\"keccak256\":\"0x199f5fcb4f126b08d518a126cebc2358ca5ed51b00547d1f7cb309f5b5ebe7f2\",\"urls\":[\"bzzr://08aee64475326f70a7740bbcea2107a4c8c6a90874be9e4907f0509359584ef1\"]},\"/C/mspace/polymath-core/contracts/interfaces/token/IERC1644.sol\":{\"keccak256\":\"0xe0895d57c2017bc8ebea7686c605d439dc06fac34b2f3aefbf321133b9ab17a6\",\"urls\":[\"bzzr://d90659e650930d76d262a5accd8c1fcb594fe7fbda2fd4403246ef4877b9e8f2\"]},\"/C/mspace/polymath-core/contracts/libraries/DecimalMath.sol\":{\"keccak256\":\"0x1d0b76f8fe8da427cf177f243d94bdb2d61719841a721ac2563ccbcc34d66621\",\"urls\":[\"bzzr://a5d44c088f155a81ecb9742696dbebb436e0aed906ec4978bb8c4c0dc633a87b\"]},\"/C/mspace/polymath-core/contracts/libraries/StatusCodes.sol\":{\"keccak256\":\"0x285e166e92cd51c7a5670fd99fceac3a997fc1a360734464bcad89d2cc6052ff\",\"urls\":[\"bzzr://3a1c7483ca7ae51c62d1c6b9653e694fa5e6b7157daf52d14d566037ef66dca9\"]},\"/C/mspace/polymath-core/contracts/libraries/TokenLib.sol\":{\"keccak256\":\"0x3ac6fd63bff44b889d95a477fa9d79a05758388ab8231aa4854678f9b89c71ae\",\"urls\":[\"bzzr://6bdd19c519fa25f234b7410e2538ad7952350b41c2547586d1f300c2dc23e6f0\"]},\"/C/mspace/polymath-core/contracts/libraries/Util.sol\":{\"keccak256\":\"0x0641ec6587995396e7134d2910eddf3ea0f1504840f0cc1cd83273aa579ac9fc\",\"urls\":[\"bzzr://5cfdd07fa855d44dd5495c4d5e64476ab5b27da1da09cfde532088599b59b86e\"]},\"/C/mspace/polymath-core/contracts/libraries/VersionUtils.sol\":{\"keccak256\":\"0x3406ffb981fc8ef803ff1b4e397bc7a457c3ed60231070cb64137f01054f4042\",\"urls\":[\"bzzr://07e703fd8f5ff93ce888b1a388a985cdccd1c7e8bf3ba2b051c10a0898b71b9d\"]},\"/C/mspace/polymath-core/contracts/mocks/MockSecurityTokenLogic.sol\":{\"keccak256\":\"0x64ecf7fc221c166fdd44b953250286aef88423bd3763cd141460702714b72d83\",\"urls\":[\"bzzr://3c0df74a02c806ae7ea29117b48f50dea2851070050e68d476343aa4f48ea5b0\"]},\"/C/mspace/polymath-core/contracts/modules/ModuleFactory.sol\":{\"keccak256\":\"0x573d8b181146be8b8fc47449920c49f6e2cb16f4b7560e38435dd659628f2a2e\",\"urls\":[\"bzzr://a7df0056a005f9d33b358be4bc0fc98db9afc7286f556961cb1d7531df2722d0\"]},\"/C/mspace/polymath-core/contracts/modules/PermissionManager/IPermissionManager.sol\":{\"keccak256\":\"0xea92765ddf9613d58e54a34a339899af6c314172981021dc007c89801271ecb3\",\"urls\":[\"bzzr://e22b3cd9588642e1a5ff100afc9e380bceddb9ded6ffbce3f1499ae674261c85\"]},\"/C/mspace/polymath-core/contracts/modules/UpgradableModuleFactory.sol\":{\"keccak256\":\"0x9704cd486feeb4220126df7ede3eee7850413d7b93d2b7dbb1ade74fbfc2d68e\",\"urls\":[\"bzzr://e83f7efc722e0066e4846eb2f9516f7127b1f5bee3557c90bc5ab8e9b4b40959\"]},\"/C/mspace/polymath-core/contracts/proxy/OwnedUpgradeabilityProxy.sol\":{\"keccak256\":\"0x30f2ca755ec4bb6ab45450aaa110dc49ecd9d2dda1dadfbfaa187ceec56567f8\",\"urls\":[\"bzzr://f350eef96981e9d153a1f01bd77b9c41c9e49c108f37037c613124867fe459f5\"]},\"/C/mspace/polymath-core/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xd9f5cbe44a9d354154b7cf09f00acd21761bfd7f1152658d810cb27c1432897e\",\"urls\":[\"bzzr://63192e45362ec47fa547eb922501636ec393b9f3617fd3ae5fde2ba34953b743\"]},\"/C/mspace/polymath-core/contracts/proxy/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x5b42dc77069af1d968271f56f49771d0b7dfd63fa47ee575c9b6aaa82d0abce3\",\"urls\":[\"bzzr://9bd9a55021d446f61f2932266681181c8df0d3f84100ac35b65c3bd328dff80c\"]},\"/C/mspace/polymath-core/contracts/tokens/SecurityToken.sol\":{\"keccak256\":\"0x512ba35fc6559fc20361e12e7dc24c941cb888d06d6ad8bdc60a38b7a56e5725\",\"urls\":[\"bzzr://59a5147e1fd21dcff0f2063398620af1ed11a35e11e5f90b167c5e4cc1fd5c0f\"]},\"/C/mspace/polymath-core/contracts/tokens/SecurityTokenStorage.sol\":{\"keccak256\":\"0x4c05774e4ca1befea034c778482187a7387b181d1c992ac96dc4d4d4d5fcd3cf\",\"urls\":[\"bzzr://8aeecefd04a61caf84fa971f4ea67e72c5f9033cddf6cdac62eda7332d71f5e4\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411\",\"urls\":[\"bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125\",\"urls\":[\"bzzr://3bc299fd722679f1313dc1387e2efc0591dcddc3727b6a7ccc98132c6e02f323\"]}},\"version\":1}",
  "bytecode": "0x60806040526012805460ff1990811690915560148054909116600190811790915560035560058054600160a01b60ff021916740100000000000000000000000000000000000000001790556154de806100596000396000f3fe6080604052600436106104735760003560e01c806374fee0c01161024a578063c350184811610139578063e77772fe116100b6578063f3d490db1161007a578063f3d490db14611c8d578063f433262f14611d5a578063f77c479114611d6f578063fad8b32a14611d84578063ff0b9c9014611db757610473565b8063e77772fe14611a07578063e77c646d14611a1c578063ee532f3114611a9e578063f282527a14611b6f578063f2fde38b14611c5a57610473565b8063dc722e3a116100fd578063dc722e3a146118d9578063dd62ed3e14611954578063e0622b271461198f578063e45b8134146119c8578063e562e30c146119dd57610473565b8063c350184814611819578063c4d66de814611843578063cd6dc68714611876578063ce4dbdff146118af578063d6abe110146118c457610473565b80639675193c116101c7578063a457c2d71161018b578063a457c2d714611633578063a9059cbb1461166c578063a9f86e2c146116a5578063b95459e41461173e578063bb3acde91461175357610473565b80639675193c1461143b5780639945e70e146114cb578063a063246114611594578063a16c3a09146115c7578063a1db9782146115fa57610473565b80638f32d59b1161020e5780638f32d59b1461137857806392eefe9b1461138d578063942df325146113c0578063959b8c3f146113f357806395d89b411461142657610473565b806374fee0c0146111ce57806377282b70146112495780637a802c711461125e5780638c0dee9c146112735780638da5cb5b1461136357610473565b806330e82803116103665780635488cc80116102e357806367c84919116102a757806367c8491914610f445780636faa22a514610fdb57806370a0823114610ff057806373826a931461102357806374c963721461109e57610473565b80635488cc8014610e3d578063556f0dc714610e5257806362b348c314610e6757806362eb006814610ea8578063660d0d6714610f2f57610473565b80634a627e611161032a5780634a627e6114610d295780634c783bf514610d3e57806352cfe56314610d535780635353a2d814610d8f578063537c1ac714610e0a57610473565b806330e8280314610c44578063313ce56714610c7d57806331c420d414610ca85780633576857e14610cbd5780633950935114610cf057610473565b8063168ecec5116103f4578063210a8d0e116103b8578063210a8d0e14610a0057806323b872dd14610a2a5780632535f76214610a6d5780632bc6acc314610b335780632fb3b99d14610c1357610473565b8063168ecec51461082757806318160ddd146108605780631aab9a9f146108875780631badb25c1461089c5780631e6f20f81461092c57610473565b8063103ef9e11161043b578063103ef9e114610600578063122eb5751461063957806312ef7fe2146106f857806313d557bc1461072b578063158ef93e1461081257610473565b8063010648ca1461047d57806301502460146104ff57806306fdde0314610514578063095ea7b31461059e5780630c912555146105eb575b61047b611dcc565b005b34801561048957600080fd5b5061047b600480360360608110156104a057600080fd5b81359190810190604081016020820135600160201b8111156104c157600080fd5b8201836020820111156104d357600080fd5b803590602001918460018302840111600160201b831117156104f457600080fd5b919350915035611dde565b34801561050b57600080fd5b5061047b611eaa565b34801561052057600080fd5b50610529611f0c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561056357818101518382015260200161054b565b50505050905090810190601f1680156105905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105aa57600080fd5b506105d7600480360360408110156105c157600080fd5b506001600160a01b038135169060200135611f9a565b604080519115158252519081900360200190f35b3480156105f757600080fd5b5061047b611fb1565b34801561060c57600080fd5b5061047b6004803603604081101561062357600080fd5b50803590602001356001600160a01b0316612077565b34801561064557600080fd5b506106d46004803603608081101561065c57600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561069657600080fd5b8201836020820111156106a857600080fd5b803590602001918460018302840111600160201b831117156106c957600080fd5b5090925090506120e4565b604080516001600160f81b0319909316835260208301919091528051918290030190f35b34801561070457600080fd5b5061047b6004803603602081101561071b57600080fd5b50356001600160a01b031661216b565b34801561073757600080fd5b5061047b600480360360a081101561074e57600080fd5b8135916001600160a01b036020820135169160408201359190810190608081016060820135600160201b81111561078457600080fd5b82018360208201111561079657600080fd5b803590602001918460018302840111600160201b831117156107b757600080fd5b919390929091602081019035600160201b8111156107d457600080fd5b8201836020820111156107e657600080fd5b803590602001918460018302840111600160201b8311171561080757600080fd5b509092509050612204565b34801561081e57600080fd5b506105d76122d3565b34801561083357600080fd5b5061047b6004803603604081101561084a57600080fd5b50803590602001356001600160a01b03166122e3565b34801561086c57600080fd5b5061087561234d565b60408051918252519081900360200190f35b34801561089357600080fd5b50610875612354565b3480156108a857600080fd5b506106d4600480360360608110156108bf57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156108ee57600080fd5b82018360208201111561090057600080fd5b803590602001918460018302840111600160201b8311171561092157600080fd5b50909250905061235a565b34801561093857600080fd5b5061047b600480360360c081101561094f57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561097957600080fd5b82018360208201111561098b57600080fd5b803590602001918460018302840111600160201b831117156109ac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550508235935050506020810135906040810135906060013515156123ad565b348015610a0c57600080fd5b5061047b60048036036020811015610a2357600080fd5b50356123e9565b348015610a3657600080fd5b506105d760048036036060811015610a4d57600080fd5b506001600160a01b03813581169160208101359091169060400135612488565b348015610a7957600080fd5b5061047b60048036036060811015610a9057600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115610abf57600080fd5b820183602082011115610ad157600080fd5b803590602001918460018302840111600160201b83111715610af257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506124af945050505050565b348015610b3f57600080fd5b5061047b60048036036080811015610b5657600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115610b8557600080fd5b820183602082011115610b9757600080fd5b803590602001918460018302840111600160201b83111715610bb857600080fd5b919390929091602081019035600160201b811115610bd557600080fd5b820183602082011115610be757600080fd5b803590602001918460018302840111600160201b83111715610c0857600080fd5b5090925090506124c0565b348015610c1f57600080fd5b50610c286125ca565b604080516001600160a01b039092168252519081900360200190f35b348015610c5057600080fd5b5061087560048036036040811015610c6757600080fd5b50803590602001356001600160a01b03166125d9565b348015610c8957600080fd5b50610c926125ee565b6040805160ff9092168252519081900360200190f35b348015610cb457600080fd5b5061047b6125f7565b348015610cc957600080fd5b5061047b60048036036020811015610ce057600080fd5b50356001600160a01b0316612654565b348015610cfc57600080fd5b506105d760048036036040811015610d1357600080fd5b506001600160a01b0381351690602001356126c5565b348015610d3557600080fd5b50610875612706565b348015610d4a57600080fd5b506105d761270c565b348015610d5f57600080fd5b506105d760048036036040811015610d7657600080fd5b5080356001600160a01b0316906020013560ff16612716565b348015610d9b57600080fd5b5061047b60048036036020811015610db257600080fd5b810190602081018135600160201b811115610dcc57600080fd5b820183602082011115610dde57600080fd5b803590602001918460018302840111600160201b83111715610dff57600080fd5b509092509050612807565b348015610e1657600080fd5b5061047b60048036036020811015610e2d57600080fd5b50356001600160a01b0316612903565b348015610e4957600080fd5b50610875612a7a565b348015610e5e57600080fd5b50610875612a80565b348015610e7357600080fd5b5061047b60048036036060811015610e8a57600080fd5b506001600160a01b0381351690602081013590604001351515612a86565b348015610eb457600080fd5b5061047b60048036036060811015610ecb57600080fd5b813591602081013591810190606081016040820135600160201b811115610ef157600080fd5b820183602082011115610f0357600080fd5b803590602001918460018302840111600160201b83111715610f2457600080fd5b509092509050612b20565b348015610f3b57600080fd5b50610c28612b8b565b348015610f5057600080fd5b5061047b60048036036080811015610f6757600080fd5b8135916001600160a01b036020820135169160408201359190810190608081016060820135600160201b811115610f9d57600080fd5b820183602082011115610faf57600080fd5b803590602001918460018302840111600160201b83111715610fd057600080fd5b509092509050612b9a565b348015610fe757600080fd5b50610c28612c5e565b348015610ffc57600080fd5b506108756004803603602081101561101357600080fd5b50356001600160a01b0316612c6d565b34801561102f57600080fd5b5061047b6004803603602081101561104657600080fd5b810190602081018135600160201b81111561106057600080fd5b82018360208201111561107257600080fd5b803590602001918460018302840111600160201b8311171561109357600080fd5b509092509050612c88565b3480156110aa57600080fd5b5061047b600480360360408110156110c157600080fd5b810190602081018135600160201b8111156110db57600080fd5b8201836020820111156110ed57600080fd5b803590602001918460208302840111600160201b8311171561110e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561115d57600080fd5b82018360208201111561116f57600080fd5b803590602001918460208302840111600160201b8311171561119057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612d7a945050505050565b3480156111da57600080fd5b5061047b600480360360208110156111f157600080fd5b810190602081018135600160201b81111561120b57600080fd5b82018360208201111561121d57600080fd5b803590602001918460018302840111600160201b8311171561123e57600080fd5b509092509050612dee565b34801561125557600080fd5b50610c28612f20565b34801561126a57600080fd5b506105d7612f2f565b34801561127f57600080fd5b50610875600480360360c081101561129657600080fd5b8135916001600160a01b03602082013581169260408301359091169160608101359181019060a081016080820135600160201b8111156112d557600080fd5b8201836020820111156112e757600080fd5b803590602001918460018302840111600160201b8311171561130857600080fd5b919390929091602081019035600160201b81111561132557600080fd5b82018360208201111561133757600080fd5b803590602001918460018302840111600160201b8311171561135857600080fd5b509092509050612f38565b34801561136f57600080fd5b50610c28612ffc565b34801561138457600080fd5b506105d761300b565b34801561139957600080fd5b5061047b600480360360208110156113b057600080fd5b50356001600160a01b031661301c565b3480156113cc57600080fd5b5061047b600480360360208110156113e357600080fd5b50356001600160a01b031661309c565b3480156113ff57600080fd5b5061047b6004803603602081101561141657600080fd5b50356001600160a01b03166130cf565b34801561143257600080fd5b50610529613115565b34801561144757600080fd5b5061047b6004803603606081101561145e57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561148d57600080fd5b82018360208201111561149f57600080fd5b803590602001918460018302840111600160201b831117156114c057600080fd5b509092509050613170565b3480156114d757600080fd5b5061156b600480360360a08110156114ee57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b81111561152d57600080fd5b82018360208201111561153f57600080fd5b803590602001918460018302840111600160201b8311171561156057600080fd5b509092509050613251565b604080516001600160f81b03199094168452602084019290925282820152519081900360600190f35b3480156115a057600080fd5b5061047b600480360360208110156115b757600080fd5b50356001600160a01b031661332d565b3480156115d357600080fd5b5061047b600480360360208110156115ea57600080fd5b50356001600160a01b03166133a7565b34801561160657600080fd5b5061047b6004803603604081101561161d57600080fd5b506001600160a01b038135169060200135613425565b34801561163f57600080fd5b506105d76004803603604081101561165657600080fd5b506001600160a01b0381351690602001356134ca565b34801561167857600080fd5b506105d76004803603604081101561168f57600080fd5b506001600160a01b038135169060200135613506565b3480156116b157600080fd5b5061047b600480360360a08110156116c857600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156116f257600080fd5b82018360208201111561170457600080fd5b803590602001918460018302840111600160201b8311171561172557600080fd5b9193509150803590602081013590604001351515613523565b34801561174a57600080fd5b50610c2861356f565b34801561175f57600080fd5b5061047b6004803603606081101561177657600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156117a557600080fd5b8201836020820111156117b757600080fd5b803590602001918460018302840111600160201b831117156117d857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061357e945050505050565b34801561182557600080fd5b5061047b6004803603602081101561183c57600080fd5b503561359b565b34801561184f57600080fd5b5061047b6004803603602081101561186657600080fd5b50356001600160a01b031661360d565b34801561188257600080fd5b5061047b6004803603604081101561189957600080fd5b506001600160a01b0381351690602001356136e9565b3480156118bb57600080fd5b50610c286137c8565b3480156118d057600080fd5b506105296137d7565b3480156118e557600080fd5b5061047b600480360360208110156118fc57600080fd5b810190602081018135600160201b81111561191657600080fd5b82018360208201111561192857600080fd5b803590602001918460018302840111600160201b8311171561194957600080fd5b509092509050613832565b34801561196057600080fd5b506108756004803603604081101561197757600080fd5b506001600160a01b03813581169160200135166138fb565b34801561199b57600080fd5b5061047b600480360360408110156119b257600080fd5b506001600160a01b038135169060200135613926565b3480156119d457600080fd5b506105d761397e565b3480156119e957600080fd5b5061047b60048036036020811015611a0057600080fd5b503561398c565b348015611a1357600080fd5b50610c286139c2565b348015611a2857600080fd5b5061047b60048036036040811015611a3f57600080fd5b81359190810190604081016020820135600160201b811115611a6057600080fd5b820183602082011115611a7257600080fd5b803590602001918460018302840111600160201b83111715611a9357600080fd5b5090925090506139d1565b348015611aaa57600080fd5b5061047b60048036036080811015611ac157600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b811115611afb57600080fd5b820183602082011115611b0d57600080fd5b803590602001918460018302840111600160201b83111715611b2e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613a1c945050505050565b348015611b7b57600080fd5b5061047b600480360360a0811015611b9257600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b811115611bcc57600080fd5b820183602082011115611bde57600080fd5b803590602001918460018302840111600160201b83111715611bff57600080fd5b919390929091602081019035600160201b811115611c1c57600080fd5b820183602082011115611c2e57600080fd5b803590602001918460018302840111600160201b83111715611c4f57600080fd5b509092509050613a44565b348015611c6657600080fd5b5061047b60048036036020811015611c7d57600080fd5b50356001600160a01b0316613b65565b348015611c9957600080fd5b5061087560048036036080811015611cb057600080fd5b8135916001600160a01b036020820135169160408201359190810190608081016060820135600160201b811115611ce657600080fd5b820183602082011115611cf857600080fd5b803590602001918460018302840111600160201b83111715611d1957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613b79945050505050565b348015611d6657600080fd5b5061047b613ba3565b348015611d7b57600080fd5b50610c28613dd9565b348015611d9057600080fd5b5061047b60048036036020811015611da757600080fd5b50356001600160a01b0316613ded565b348015611dc357600080fd5b50610875613e32565b611ddc611dd7613f70565b613f7f565b565b611de6613fa3565b73__TokenLib______________________________63e8f20292601d6015601e888888886040518863ffffffff1660e01b815260040180888152602001878152602001868152602001858152602001806020018381526020018281038252858582818152602001925080828437600081840152601f19601f8201169050808301925050509850505050505050505060006040518083038186803b158015611e8c57600080fd5b505af4158015611ea0573d6000803e3d6000fd5b5050505050505050565b611eb2613fa3565b601254610100900460ff1615611ec757600080fd5b6012805461ff001916610100179055604080516001815290517fac199452244e92d1343195dfad0a5347b229c861e3a8f2fbf08ab519b1d55bc99181900360200190a1565b6006805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611f925780601f10611f6757610100808354040283529160200191611f92565b820191906000526020600020905b815481529060010190602001808311611f7557829003601f168201915b505050505081565b6000611fa7338484613fb4565b5060015b92915050565b611fb9613fa3565b60055460408051600160e01b63a62d3a45028152600a600482015290516001600160a01b039092169163a62d3a459160248082019260009290919082900301818387803b15801561200957600080fd5b505af115801561201d573d6000803e3d6000fd5b50506017546040805160ff80841682526101008404811660208301526201000090930490921682820152517f23af9b477abf9645be8a074be19ae4a47e11abc43bd1aa47b16de7eb856093029350908190036060019150a1565b6120808261403c565b336000818152601f6020908152604080832086845282528083206001600160a01b0386168085529252808320805460ff1916600117905551909185917f3646a897c70797ecc134b0adc32f471b07bf1d6f451133b0384badab531e3fd69190a45050565b60008061212987878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506140a192505050565b9092509050612137826142f7565b801561214b575061214887336138fb565b85115b156121615761215a6003614309565b9150600090505b9550959350505050565b612173613fa3565b600a546001600160a01b038281166000908152601960205260408082208151600160e41b63097137350281529390941660048401526024830193909352915173__TokenLib______________________________9263971373509260448082019391829003018186803b1580156121e957600080fd5b505af41580156121fd573d6000803e3d6000fd5b5050505050565b61220e6005614323565b8181600081811061221b57fe5b9050013560f81c60f81b6001600160f81b031916600060f81b141561223f57600080fd5b61224886614336565b612253878733614394565b6122ca8787873388888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a91508990819084018382808284376000920191909152506143a892505050565b50505050505050565b600554600160a01b900460ff1681565b6122ec8261403c565b336000818152601f6020908152604080832086845282528083206001600160a01b0386168085529252808320805460ff1916905551909185917f3b287c4f1bab4df949b33bceacef984f544dc5d5479930d00e4ee8c9d8dd96f29190a45050565b6002545b90565b60135481565b60008061239f33878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506140a192505050565b915091505b94509492505050565b604080516000815290517f7e54bc788db3f781250853aaf56a46415cdb0cd27c06a4ab3d144aeccfcb7b1d9181900360200190a1505050505050565b6123f1613fa3565b806124465760408051600160e51b62461bcd02815260206004820152601360248201527f496e76616c6964206772616e756c617269747900000000000000000000000000604482015290519081900360640190fd5b600f54604080519182526020820183905280517f7728e5c461dd94b32a33e149f4ef6b674a7eff704cac77b26937eaced90f00389281900390910190a1600f55565b60006124a584848460405180602001604052806000815250613a1c565b5060019392505050565b6124bb338484846144d8565b505050565b6124c86144f2565b612509868686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061451d92505050565b50856001600160a01b03167f876b7cb47aa150b3a5516188b19ed308752ad4d0ae9a702543353b78163f758933878787878760405180876001600160a01b03166001600160a01b0316815260200186815260200180602001806020018381038352878782818152602001925080828437600083820152601f01601f191690910184810383528581526020019050858580828437600083820152604051601f909101601f19169092018290039a509098505050505050505050a2505050505050565b600d546001600160a01b031681565b60006125e7838360006145f5565b9392505050565b60085460ff1681565b6125ff613fa3565b601254610100900460ff1661261357600080fd5b6012805461ff0019169055604080516000815290517fac199452244e92d1343195dfad0a5347b229c861e3a8f2fbf08ab519b1d55bc99181900360200190a1565b61265c613fa3565b6001600160a01b0381166000908152601960205260408082208151600160e01b63ad2426150281526004810191909152905173__TokenLib______________________________9263ad2426159260248082019391829003018186803b1580156121e957600080fd5b3360008181526001602090815260408083206001600160a01b03871684529091528120549091611fa7918590612701908663ffffffff61478416565b613fb4565b60205481565b60125460ff161590565b6001600160a01b0380831660008181526019602052604081206001015490921614158061276557506001600160a01b038316600090815260196020526040902060020154600160a01b900460ff165b1561277257506000611fab565b60005b6001600160a01b0384166000908152601960205260409020600301548110156127fd576001600160a01b0384166000908152601960205260409020600301805460ff85169190839081106127c557fe5b60009182526020918290209181049091015460ff601f9092166101000a90041614156127f5576001915050611fab565b600101612775565b5060009392505050565b61280f613fa3565b8061281957600080fd5b6040805181815260068054600260001961010060018416150201909116049282018390527f99b81fd13cfa16f6b748b388ac4e3059f0d9e1166c6c99b07ff0f4aa308ca43c9290918591859190819060208201906060830190879080156128c15780601f10612896576101008083540402835291602001916128c1565b820191906000526020600020905b8154815290600101906020018083116128a457829003601f168201915b50508381038252848152602001858580828437600083820152604051601f909101601f191690920182900397509095505050505050a16124bb6006838361541a565b61290b613fa3565b61291481614336565b600e5460408051600160e01b6321f8a7210281527faae8817359f3dcb67d050f44f3e49f982e0359d90ca4b5f18569926304aaece6600482015290517f419d718138b0b65d09976f881eed8b8d7075d4b6092f74af0a0ec9b3417cdd12926001600160a01b0316916321f8a721916024808301926020929190829003018186803b1580156129a157600080fd5b505afa1580156129b5573d6000803e3d6000fd5b505050506040513d60208110156129cb57600080fd5b5051604080516001600160a01b03928316815291841660208301528051918290030190a1600e5460408051600160e01b63ca446dd90281527faae8817359f3dcb67d050f44f3e49f982e0359d90ca4b5f18569926304aaece660048201526001600160a01b0384811660248301529151919092169163ca446dd991604480830192600092919082900301818387803b158015612a6657600080fd5b505af11580156121fd573d6000803e3d6000fd5b60105481565b600f5481565b612a8e613fa3565b600c5460408051600160e01b63dfb1f4110281526001600160a01b0380871660048301526024820186905284151560448301529092166064830152601960848301525173__TokenLib______________________________9163dfb1f4119160a4808301926000929190829003018186803b158015612b0c57600080fd5b505af41580156122ca573d6000803e3d6000fd5b612b2a6005614323565b612b338461403c565b612b85843385600086868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516020810190915290815292506143a8915050565b50505050565b600e546001600160a01b031681565b612ba38561403c565b612be4848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061357e92505050565b836001600160a01b0316857f6032e2468b0f94dfa63c61d6c8a84842a99c049263eae408a52b945020b6578d85858560405180848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050a35050505050565b600c546001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b612c90613fa3565b6040805181815260118054600260001961010060018416150201909116049282018390527f4f5dc3feea8c186b1481cfe57c28df8871a61e3be16f7d65c60504cfd6344067929091859185919081906020820190606083019087908015612d385780601f10612d0d57610100808354040283529160200191612d38565b820191906000526020600020905b815481529060010190602001808311612d1b57829003601f168201915b50508381038252848152602001858580828437600083820152604051601f909101601f191690920182900397509095505050505050a16124bb6011838361541a565b612d82614796565b612d8c60036147f0565b8051825114612d9a57600080fd5b60005b82518110156124bb57612de6838281518110612db557fe5b6020026020010151838381518110612dc957fe5b60200260200101516040518060200160405280600081525061481a565b600101612d9d565b612df6613fa3565b604051600160e01b635a34d4d902815260206004820190815260248201839052612ec49173__TokenLib______________________________91635a34d4d991869186918190604401848480828437600083820152604051601f909101601f191690920195506020945090925050508083038186803b158015612e7857600080fd5b505af4158015612e8c573d6000803e3d6000fd5b505050506040513d6020811015612ea257600080fd5b50516001600160a01b0316612eb5612ffc565b6001600160a01b0316146148ee565b612ecc61270c565b612ed557600080fd5b6012805460ff1916600117905560088054610100600160a81b03191690556040517ff7ec83c37617f91085fc1725f4839e41a03238811eaebd2dbc4a405354cc958e90600090a15050565b6009546001600160a01b031681565b60125460ff1681565b6000612f45898933614394565b82826000818110612f5257fe5b9050013560f81c60f81b6001600160f81b031916600060f81b1415612f7657600080fd5b612fef8888888c89898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815233935091508b908b908190840183828082843760009201919091525061494392505050565b9998505050505050505050565b6004546001600160a01b031690565b6004546001600160a01b0316331490565b613024613fa3565b61302c61270c565b61303557600080fd5b6008546040516001600160a01b0380841692610100900416907f9fdb07212c6f92fd298affc4000712177664bc3c4cae5f61098d42da6d05be1e90600090a3600880546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6130a4613fa3565b6130ad81614336565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b6130dc3382600019613fb4565b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b6007805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611f925780601f10611f6757610100808354040283529160200191611f92565b61317a6005614323565b6131c56131c08560008686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250614ae392505050565b614b33565b6131cf8484614b88565b836001600160a01b0316336001600160a01b03167fb7d0d6b60740753e9f16692a2f479472a1385aec2420fa43225b02f2ffa1afe785858560405180848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050a350505050565b6000806000600160c21b6715539313d0d2d1510287141561330d576132ae89898888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506140a192505050565b90935091506132bc836142f7565b156133085760006132db600160d21b651313d0d2d151028a60006145f5565b905060006132f6600160d21b651313d0d2d151028b8a6145f5565b905061330382828a614bd1565b925050505b613321565b6133176000614309565b9250600091508190505b96509650969350505050565b613335613fa3565b60408051600160e01b63c38890e10281526001600160a01b03831660048201526018602482015260196044820152601a6064820152905173__TokenLib______________________________9163c38890e1916084808301926000929190829003018186803b1580156121e957600080fd5b6133af613fa3565b600a546001600160a01b038281166000908152601960205260408082208151600160e11b63250114070281529390941660048401526024830193909352915173__TokenLib______________________________92634a02280e9260448082019391829003018186803b1580156121e957600080fd5b61342d613fa3565b816001600160a01b03811663a9059cbb613445612ffc565b846040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561349557600080fd5b505af11580156134a9573d6000803e3d6000fd5b505050506040513d60208110156134bf57600080fd5b50516124bb57600080fd5b3360008181526001602090815260408083206001600160a01b03871684529091528120549091611fa7918590612701908663ffffffff614c1316565b6000611fa7338484604051806020016040528060008152506144d8565b6135678686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508993508892509050866123ad565b505050505050565b600a546001600160a01b031681565b613586614796565b61359060036147f0565b6124bb83838361481a565b6135a3613fa3565b60408051600160e01b63b7e2c789028152601d600482015260156024820152601e604482015260648101839052905173__TokenLib______________________________9163b7e2c789916084808301926000929190829003018186803b1580156121e957600080fd5b600554600160a01b900460ff161561366f5760408051600160e51b62461bcd02815260206004820152601360248201527f416c726561647920696e697469616c697a656400000000000000000000000000604482015290519081900360640190fd5b600d80546001600160a01b0319166001600160a01b03831617905560408051606081018252600380825260006020830181905291909201526017805460ff191690911762ffff00191690556136c2613ba3565b5060058054600160a01b60ff02196001600160a01b0319909116331716600160a01b179055565b600554600160a01b900460ff161561374b5760408051600160e51b62461bcd02815260206004820152601360248201527f416c726561647920696e697469616c697a656400000000000000000000000000604482015290519081900360640190fd5b600d80546001600160a01b0319166001600160a01b03841617905560408051606081018252600380825260006020830181905291909201526017805460ff191690911762ffff001916905561379e613ba3565b60058054600160a01b60ff02196001600160a01b0319909116331716600160a01b17905560205550565b600b546001600160a01b031681565b6011805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611f925780601f10611f6757610100808354040283529160200191611f92565b61383a613fa3565b613842614796565b604051600160e11b633b89841f028152602060048201908152602482018390526138c49173__TokenLib______________________________91637713083e91869186918190604401848480828437600083820152604051601f909101601f191690920195506020945090925050508083038186803b158015612e7857600080fd5b6014805460ff191690556040517f9ea7d0a14bc31ddf4821c86966910e35bd82b51f74bde7d3704498e0fb92e1f190600090a15050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600d80546001600160a01b0319166001600160a01b03841617905560208181556040805183815290517f7e54bc788db3f781250853aaf56a46415cdb0cd27c06a4ab3d144aeccfcb7b1d929181900390910190a15050565b601254610100900460ff1681565b6040805182815290517f7e54bc788db3f781250853aaf56a46415cdb0cd27c06a4ab3d144aeccfcb7b1d9181900360200190a150565b6005546001600160a01b031681565b6139db6005614323565b6124bb338484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250614c2892505050565b613a30613a2b85858585614ae3565b614c36565b613a3b848484614c8b565b612b8557600080fd5b613a4c6144f2565b613a8e87878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250614ae392505050565b50613a9a878787614cd3565b856001600160a01b0316876001600160a01b03167f6bf62b4b9c7b768275122bf70d429efc398a056d669b1efdf6c3976346246d7d33888888888860405180876001600160a01b03166001600160a01b0316815260200186815260200180602001806020018381038352878782818152602001925080828437600083820152601f01601f191690910184810383528581526020019050858580828437600083820152604051601f909101601f19169092018290039a509098505050505050505050a350505050505050565b613b6d613fa3565b613b7681614d9e565b50565b6000613b9a3385858886600060405180602001604052806000815250614943565b95945050505050565b613bab613fa3565b60095460408051600160e01b63bf40fac1028152602060048201819052600e60248301527f4d6f64756c655265676973747279000000000000000000000000000000000000604483015291516001600160a01b039093169263bf40fac192606480840193919291829003018186803b158015613c2657600080fd5b505afa158015613c3a573d6000803e3d6000fd5b505050506040513d6020811015613c5057600080fd5b5051600a80546001600160a01b0319166001600160a01b0392831617905560095460408051600160e01b63bf40fac1028152602060048201819052601560248301527f5365637572697479546f6b656e5265676973747279000000000000000000000060448301529151929093169263bf40fac19260648083019392829003018186803b158015613ce057600080fd5b505afa158015613cf4573d6000803e3d6000fd5b505050506040513d6020811015613d0a57600080fd5b5051600b80546001600160a01b0319166001600160a01b039283161790556009805460408051600160e01b63bf40fac10281526020600482018190526024820194909452600160b91b682837b63caa37b5b2b70260448201529051919093169263bf40fac1926064808301939192829003018186803b158015613d8c57600080fd5b505afa158015613da0573d6000803e3d6000fd5b505050506040513d6020811015613db657600080fd5b5051600c80546001600160a01b0319166001600160a01b03909216919091179055565b60085461010090046001600160a01b031681565b613df933826000613fb4565b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b6000613e3e60046147f0565b601080546001908101909155601680549182018155600052427fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428990910155613e8461234d565b601080546000908152601b6020908152604091829020939093559054600e548251600160e11b6317e4a5d30281527fdf3a8dd24acdd05addfc6aeffef7574d2de3f844535ec91e8e0f3e45dba967316004820152925191937f624ea167e477f9d39f7f4094b9dfe2e6346eb4a7aada54338db51abd554c4b9f936001600160a01b0390921692632fc94ba6926024808201939291829003018186803b158015613f2c57600080fd5b505afa158015613f40573d6000803e3d6000fd5b505050506040513d6020811015613f5657600080fd5b505160408051918252519081900360200190a25060105490565b600d546001600160a01b031690565b3660008037600080366000845af43d6000803e808015613f9e573d6000f35b3d6000fd5b613fab61300b565b611ddc57600080fd5b6001600160a01b038216613fc757600080fd5b6001600160a01b038316613fda57600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160c21b6715539313d0d2d151028114613b765760408051600160e51b62461bcd02815260206004820152601160248201527f496e76616c696420706172746974696f6e000000000000000000000000000000604482015290519081900360640190fd5b600080600080600f5486816140b257fe5b06156140d0576140c26000614309565b9350600092506123a4915050565b73__TokenLib______________________________631658f46a60186000600260ff1660ff16815260200190815260200160002060198b8b8b8b601260019054906101000a900460ff166040518863ffffffff1660e01b815260040180888152602001878152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b031681526020018481526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b838110156141b257818101518382015260200161419a565b50505050905090810190601f1680156141df5780820380516001836020036101000a031916815260200191505b5098505050505050505050604080518083038186803b15801561420157600080fd5b505af4158015614215573d6000803e3d6000fd5b505050506040513d604081101561422b57600080fd5b5080516020909101519250905073__TokenLib______________________________632c94d97b82848a8a61425f8e612c6d565b6040805163ffffffff881660e01b8152951515600487015260248601949094526001600160a01b03909216604485015260648401526084830152805160a480840193829003018186803b1580156142b557600080fd5b505af41580156142c9573d6000803e3d6000fd5b505050506040513d60408110156142df57600080fd5b50805160209091015190999098509650505050505050565b600160f81b600f0216600160f81b1490565b600081600881111561431757fe5b60500160f81b92915050565b61432d3382612716565b613b7657600080fd5b6001600160a01b038116613b765760408051600160e51b62461bcd02815260206004820152600f60248201527f496e76616c696420616464726573730000000000000000000000000000000000604482015290519081900360640190fd5b61439d8361403c565b6124bb828285614e0d565b6143b3858584614c28565b846001600160a01b0316836001600160a01b0316877fa4f62471c9bdf88115b97203943c74c59b655913ee5ee592706d84ef53fb6be2878686604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561443357818101518382015260200161441b565b50505050905090810190601f1680156144605780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561449357818101518382015260200161447b565b50505050905090810190601f1680156144c05780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a4505050505050565b6144e7613a2b85858585614ae3565b612b85848484614cd3565b600854611ddc9061010090046001600160a01b031633148015614518575061451861270c565b614e56565b600061452c8460008585614ae3565b90506145388484614eab565b336001600160a01b031660006001600160a01b03167fb7d0d6b60740753e9f16692a2f479472a1385aec2420fa43225b02f2ffa1afe785856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156145b357818101518382015260200161459b565b50505050905090810190601f1680156145e05780820380516001836020036101000a031916815260200191505b50935050505060405180910390a39392505050565b60026000908152601860209081527f2bacf7cca723d030d12aee795132f2c5f2d14ad131f16f3f27eeba3e79d18b8c805460408051828502810185019091528181526060939092919083018282801561467757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311614659575b50505050509050600080600090505b825181101561477a5782818151811061469b57fe5b60200260200101516001600160a01b0316632829e6518888886040518463ffffffff1660e01b815260040180848152602001836001600160a01b03166001600160a01b03168152602001828152602001935050505060206040518083038186803b15801561470857600080fd5b505afa15801561471c573d6000803e3d6000fd5b505050506040513d602081101561473257600080fd5b50519150600160c21b6715539313d0d2d151028714156147665783821080614758575080155b15614761578193505b614772565b81841015614772578193505b600101614686565b5050509392505050565b6000828201838110156125e757600080fd5b60145460ff16611ddc5760408051600160e51b62461bcd02815260206004820152600f60248201527f49737375616e63652066726f7a656e0000000000000000000000000000000000604482015290519081900360640190fd5b6147f8612ffc565b6001600160a01b0316336001600160a01b031614613b765761432d3382612716565b61482a613a2b6000858585614ae3565b6148348383614f52565b826001600160a01b0316336001600160a01b03167f0e9905d62635f049c2f4e11678ebf9dc3d1f8c4a653e290759b772e47ba00d0084846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156148ae578181015183820152602001614896565b50505050905090810190601f1680156148db5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3505050565b80613b765760408051600160e51b62461bcd02815260206004820152601260248201527f4f776e657220646964206e6f74207369676e0000000000000000000000000000604482015290519081900360640190fd5b600061494e8561403c565b6000614968600160d21b651313d0d2d151028960006145f5565b9050614976898989886144d8565b6000614990600160d21b651313d0d2d151028a60006145f5565b905061499d82828a614bd1565b9250886001600160a01b03168a6001600160a01b0316887fff4e9a26af4eb73b8bacfaa4abd4fea03d9448e7b912dc5ff4019048875aa2d4888c8b8a60405180856001600160a01b03166001600160a01b031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015614a38578181015183820152602001614a20565b50505050905090810190601f168015614a655780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015614a98578181015183820152602001614a80565b50505050905090810190601f168015614ac55780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a45050979650505050505050565b6003805460010190819055600090614afc868686614ffa565b614b08868686866150d1565b9150614b1386615398565b614b1c85615398565b6003548114614b2a57600080fd5b50949350505050565b80613b765760408051600160e51b62461bcd02815260206004820152600e60248201527f496e76616c69642072656465656d000000000000000000000000000000000000604482015290519081900360640190fd5b614b928282614eab565b6001600160a01b038216600090815260016020908152604080832033808552925290912054614bcd918491612701908563ffffffff614c1316565b5050565b600081614be4848663ffffffff614c1316565b14614bfd57600160c21b6715539313d0d2d15102614c0b565b600160d21b651313d0d2d151025b949350505050565b600082821115614c2257600080fd5b50900390565b6124bb6131c084848461451d565b80613b765760408051600160e51b62461bcd02815260206004820152601060248201527f5472616e7366657220496e76616c696400000000000000000000000000000000604482015290519081900360640190fd5b6000614c98848484614cd3565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546124a5918691612701908663ffffffff614c1316565b6001600160a01b038216614ce657600080fd5b6001600160a01b038316600090815260208190526040902054614d0f908263ffffffff614c1316565b6001600160a01b038085166000908152602081905260408082209390935590841681522054614d44908263ffffffff61478416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b038116614db157600080fd5b6004546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b6124bb600019614e1d85856138fb565b148061451857506001600160a01b038085166000908152601f6020908152604080832086845282528083209387168352929052205460ff165b80613b765760408051600160e51b62461bcd02815260206004820152600e60248201527f4e6f7420417574686f7269736564000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038216614ebe57600080fd5b600254614ed1908263ffffffff614c1316565b6002556001600160a01b038216600090815260208190526040902054614efd908263ffffffff614c1316565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b038216614f6557600080fd5b600254614f78908263ffffffff61478416565b6002556001600160a01b038216600090815260208190526040902054614fa4908263ffffffff61478416565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b73__TokenLib______________________________63943aef7b60135485858561502388612c6d565b61502c8a612c6d565b600e546040805163ffffffff8a1660e01b815260048101989098526001600160a01b03968716602489015294861660448801526064870193909352608486019190915260a48501529190911660c48301525160e4808301926020929190829003018186803b15801561509d57600080fd5b505af41580156150b1573d6000803e3d6000fd5b505050506040513d60208110156150c757600080fd5b5051601355505050565b600082600f5481816150df57fe5b06156151355760408051600160e51b62461bcd02815260206004820152601360248201527f496e76616c6964206772616e756c617269747900000000000000000000000000604482015290519081900360640190fd5b601254610100900460ff1661538c576002600090815260186020527f2bacf7cca723d030d12aee795132f2c5f2d14ad131f16f3f27eeba3e79d18b8c54819081908190815b8181101561536457600260005260186020527f2bacf7cca723d030d12aee795132f2c5f2d14ad131f16f3f27eeba3e79d18b8c8054829081106151b957fe5b60009182526020808320909101546001600160a01b0316808352601990915260409091206002015490935060ff600160a01b9091041661535c576000836001600160a01b0316633d3217318e8e8e8e6040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561528a578181015183820152602001615272565b50505050905090810190601f1680156152b75780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156152d957600080fd5b505af11580156152ed573d6000803e3d6000fd5b505050506040513d602081101561530357600080fd5b50519050600081600381111561531557fe5b1415615324576001965061535a565b600281600381111561533257fe5b1415615341576001955061535a565b600381600381111561534f57fe5b141561535a57600194505b505b60010161517a565b508261537d57846153755783615378565b60005b615380565b60015b96505050505050614b2a565b50600095945050505050565b6001600160a01b0381166000908152601c6020526040902073__TokenLib______________________________906309def7ee906153d584612c6d565b6010546040518463ffffffff1660e01b815260040180848152602001838152602001828152602001935050505060006040518083038186803b1580156121e957600080fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061545b5782800160ff19823516178555615488565b82800160010185558215615488579182015b8281111561548857823582559160200191906001019061546d565b50615494929150615498565b5090565b61235191905b80821115615494576000815560010161549e56fea165627a7a7230582064ee95f1618cbd5c33febcc0dc279abf88950339058b3f8a185ea7995c1130e10029",
  "deployedBytecode": "0x6080604052600436106104735760003560e01c806374fee0c01161024a578063c350184811610139578063e77772fe116100b6578063f3d490db1161007a578063f3d490db14611c8d578063f433262f14611d5a578063f77c479114611d6f578063fad8b32a14611d84578063ff0b9c9014611db757610473565b8063e77772fe14611a07578063e77c646d14611a1c578063ee532f3114611a9e578063f282527a14611b6f578063f2fde38b14611c5a57610473565b8063dc722e3a116100fd578063dc722e3a146118d9578063dd62ed3e14611954578063e0622b271461198f578063e45b8134146119c8578063e562e30c146119dd57610473565b8063c350184814611819578063c4d66de814611843578063cd6dc68714611876578063ce4dbdff146118af578063d6abe110146118c457610473565b80639675193c116101c7578063a457c2d71161018b578063a457c2d714611633578063a9059cbb1461166c578063a9f86e2c146116a5578063b95459e41461173e578063bb3acde91461175357610473565b80639675193c1461143b5780639945e70e146114cb578063a063246114611594578063a16c3a09146115c7578063a1db9782146115fa57610473565b80638f32d59b1161020e5780638f32d59b1461137857806392eefe9b1461138d578063942df325146113c0578063959b8c3f146113f357806395d89b411461142657610473565b806374fee0c0146111ce57806377282b70146112495780637a802c711461125e5780638c0dee9c146112735780638da5cb5b1461136357610473565b806330e82803116103665780635488cc80116102e357806367c84919116102a757806367c8491914610f445780636faa22a514610fdb57806370a0823114610ff057806373826a931461102357806374c963721461109e57610473565b80635488cc8014610e3d578063556f0dc714610e5257806362b348c314610e6757806362eb006814610ea8578063660d0d6714610f2f57610473565b80634a627e611161032a5780634a627e6114610d295780634c783bf514610d3e57806352cfe56314610d535780635353a2d814610d8f578063537c1ac714610e0a57610473565b806330e8280314610c44578063313ce56714610c7d57806331c420d414610ca85780633576857e14610cbd5780633950935114610cf057610473565b8063168ecec5116103f4578063210a8d0e116103b8578063210a8d0e14610a0057806323b872dd14610a2a5780632535f76214610a6d5780632bc6acc314610b335780632fb3b99d14610c1357610473565b8063168ecec51461082757806318160ddd146108605780631aab9a9f146108875780631badb25c1461089c5780631e6f20f81461092c57610473565b8063103ef9e11161043b578063103ef9e114610600578063122eb5751461063957806312ef7fe2146106f857806313d557bc1461072b578063158ef93e1461081257610473565b8063010648ca1461047d57806301502460146104ff57806306fdde0314610514578063095ea7b31461059e5780630c912555146105eb575b61047b611dcc565b005b34801561048957600080fd5b5061047b600480360360608110156104a057600080fd5b81359190810190604081016020820135600160201b8111156104c157600080fd5b8201836020820111156104d357600080fd5b803590602001918460018302840111600160201b831117156104f457600080fd5b919350915035611dde565b34801561050b57600080fd5b5061047b611eaa565b34801561052057600080fd5b50610529611f0c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561056357818101518382015260200161054b565b50505050905090810190601f1680156105905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105aa57600080fd5b506105d7600480360360408110156105c157600080fd5b506001600160a01b038135169060200135611f9a565b604080519115158252519081900360200190f35b3480156105f757600080fd5b5061047b611fb1565b34801561060c57600080fd5b5061047b6004803603604081101561062357600080fd5b50803590602001356001600160a01b0316612077565b34801561064557600080fd5b506106d46004803603608081101561065c57600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561069657600080fd5b8201836020820111156106a857600080fd5b803590602001918460018302840111600160201b831117156106c957600080fd5b5090925090506120e4565b604080516001600160f81b0319909316835260208301919091528051918290030190f35b34801561070457600080fd5b5061047b6004803603602081101561071b57600080fd5b50356001600160a01b031661216b565b34801561073757600080fd5b5061047b600480360360a081101561074e57600080fd5b8135916001600160a01b036020820135169160408201359190810190608081016060820135600160201b81111561078457600080fd5b82018360208201111561079657600080fd5b803590602001918460018302840111600160201b831117156107b757600080fd5b919390929091602081019035600160201b8111156107d457600080fd5b8201836020820111156107e657600080fd5b803590602001918460018302840111600160201b8311171561080757600080fd5b509092509050612204565b34801561081e57600080fd5b506105d76122d3565b34801561083357600080fd5b5061047b6004803603604081101561084a57600080fd5b50803590602001356001600160a01b03166122e3565b34801561086c57600080fd5b5061087561234d565b60408051918252519081900360200190f35b34801561089357600080fd5b50610875612354565b3480156108a857600080fd5b506106d4600480360360608110156108bf57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156108ee57600080fd5b82018360208201111561090057600080fd5b803590602001918460018302840111600160201b8311171561092157600080fd5b50909250905061235a565b34801561093857600080fd5b5061047b600480360360c081101561094f57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561097957600080fd5b82018360208201111561098b57600080fd5b803590602001918460018302840111600160201b831117156109ac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550508235935050506020810135906040810135906060013515156123ad565b348015610a0c57600080fd5b5061047b60048036036020811015610a2357600080fd5b50356123e9565b348015610a3657600080fd5b506105d760048036036060811015610a4d57600080fd5b506001600160a01b03813581169160208101359091169060400135612488565b348015610a7957600080fd5b5061047b60048036036060811015610a9057600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115610abf57600080fd5b820183602082011115610ad157600080fd5b803590602001918460018302840111600160201b83111715610af257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506124af945050505050565b348015610b3f57600080fd5b5061047b60048036036080811015610b5657600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115610b8557600080fd5b820183602082011115610b9757600080fd5b803590602001918460018302840111600160201b83111715610bb857600080fd5b919390929091602081019035600160201b811115610bd557600080fd5b820183602082011115610be757600080fd5b803590602001918460018302840111600160201b83111715610c0857600080fd5b5090925090506124c0565b348015610c1f57600080fd5b50610c286125ca565b604080516001600160a01b039092168252519081900360200190f35b348015610c5057600080fd5b5061087560048036036040811015610c6757600080fd5b50803590602001356001600160a01b03166125d9565b348015610c8957600080fd5b50610c926125ee565b6040805160ff9092168252519081900360200190f35b348015610cb457600080fd5b5061047b6125f7565b348015610cc957600080fd5b5061047b60048036036020811015610ce057600080fd5b50356001600160a01b0316612654565b348015610cfc57600080fd5b506105d760048036036040811015610d1357600080fd5b506001600160a01b0381351690602001356126c5565b348015610d3557600080fd5b50610875612706565b348015610d4a57600080fd5b506105d761270c565b348015610d5f57600080fd5b506105d760048036036040811015610d7657600080fd5b5080356001600160a01b0316906020013560ff16612716565b348015610d9b57600080fd5b5061047b60048036036020811015610db257600080fd5b810190602081018135600160201b811115610dcc57600080fd5b820183602082011115610dde57600080fd5b803590602001918460018302840111600160201b83111715610dff57600080fd5b509092509050612807565b348015610e1657600080fd5b5061047b60048036036020811015610e2d57600080fd5b50356001600160a01b0316612903565b348015610e4957600080fd5b50610875612a7a565b348015610e5e57600080fd5b50610875612a80565b348015610e7357600080fd5b5061047b60048036036060811015610e8a57600080fd5b506001600160a01b0381351690602081013590604001351515612a86565b348015610eb457600080fd5b5061047b60048036036060811015610ecb57600080fd5b813591602081013591810190606081016040820135600160201b811115610ef157600080fd5b820183602082011115610f0357600080fd5b803590602001918460018302840111600160201b83111715610f2457600080fd5b509092509050612b20565b348015610f3b57600080fd5b50610c28612b8b565b348015610f5057600080fd5b5061047b60048036036080811015610f6757600080fd5b8135916001600160a01b036020820135169160408201359190810190608081016060820135600160201b811115610f9d57600080fd5b820183602082011115610faf57600080fd5b803590602001918460018302840111600160201b83111715610fd057600080fd5b509092509050612b9a565b348015610fe757600080fd5b50610c28612c5e565b348015610ffc57600080fd5b506108756004803603602081101561101357600080fd5b50356001600160a01b0316612c6d565b34801561102f57600080fd5b5061047b6004803603602081101561104657600080fd5b810190602081018135600160201b81111561106057600080fd5b82018360208201111561107257600080fd5b803590602001918460018302840111600160201b8311171561109357600080fd5b509092509050612c88565b3480156110aa57600080fd5b5061047b600480360360408110156110c157600080fd5b810190602081018135600160201b8111156110db57600080fd5b8201836020820111156110ed57600080fd5b803590602001918460208302840111600160201b8311171561110e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561115d57600080fd5b82018360208201111561116f57600080fd5b803590602001918460208302840111600160201b8311171561119057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612d7a945050505050565b3480156111da57600080fd5b5061047b600480360360208110156111f157600080fd5b810190602081018135600160201b81111561120b57600080fd5b82018360208201111561121d57600080fd5b803590602001918460018302840111600160201b8311171561123e57600080fd5b509092509050612dee565b34801561125557600080fd5b50610c28612f20565b34801561126a57600080fd5b506105d7612f2f565b34801561127f57600080fd5b50610875600480360360c081101561129657600080fd5b8135916001600160a01b03602082013581169260408301359091169160608101359181019060a081016080820135600160201b8111156112d557600080fd5b8201836020820111156112e757600080fd5b803590602001918460018302840111600160201b8311171561130857600080fd5b919390929091602081019035600160201b81111561132557600080fd5b82018360208201111561133757600080fd5b803590602001918460018302840111600160201b8311171561135857600080fd5b509092509050612f38565b34801561136f57600080fd5b50610c28612ffc565b34801561138457600080fd5b506105d761300b565b34801561139957600080fd5b5061047b600480360360208110156113b057600080fd5b50356001600160a01b031661301c565b3480156113cc57600080fd5b5061047b600480360360208110156113e357600080fd5b50356001600160a01b031661309c565b3480156113ff57600080fd5b5061047b6004803603602081101561141657600080fd5b50356001600160a01b03166130cf565b34801561143257600080fd5b50610529613115565b34801561144757600080fd5b5061047b6004803603606081101561145e57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561148d57600080fd5b82018360208201111561149f57600080fd5b803590602001918460018302840111600160201b831117156114c057600080fd5b509092509050613170565b3480156114d757600080fd5b5061156b600480360360a08110156114ee57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b81111561152d57600080fd5b82018360208201111561153f57600080fd5b803590602001918460018302840111600160201b8311171561156057600080fd5b509092509050613251565b604080516001600160f81b03199094168452602084019290925282820152519081900360600190f35b3480156115a057600080fd5b5061047b600480360360208110156115b757600080fd5b50356001600160a01b031661332d565b3480156115d357600080fd5b5061047b600480360360208110156115ea57600080fd5b50356001600160a01b03166133a7565b34801561160657600080fd5b5061047b6004803603604081101561161d57600080fd5b506001600160a01b038135169060200135613425565b34801561163f57600080fd5b506105d76004803603604081101561165657600080fd5b506001600160a01b0381351690602001356134ca565b34801561167857600080fd5b506105d76004803603604081101561168f57600080fd5b506001600160a01b038135169060200135613506565b3480156116b157600080fd5b5061047b600480360360a08110156116c857600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156116f257600080fd5b82018360208201111561170457600080fd5b803590602001918460018302840111600160201b8311171561172557600080fd5b9193509150803590602081013590604001351515613523565b34801561174a57600080fd5b50610c2861356f565b34801561175f57600080fd5b5061047b6004803603606081101561177657600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156117a557600080fd5b8201836020820111156117b757600080fd5b803590602001918460018302840111600160201b831117156117d857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061357e945050505050565b34801561182557600080fd5b5061047b6004803603602081101561183c57600080fd5b503561359b565b34801561184f57600080fd5b5061047b6004803603602081101561186657600080fd5b50356001600160a01b031661360d565b34801561188257600080fd5b5061047b6004803603604081101561189957600080fd5b506001600160a01b0381351690602001356136e9565b3480156118bb57600080fd5b50610c286137c8565b3480156118d057600080fd5b506105296137d7565b3480156118e557600080fd5b5061047b600480360360208110156118fc57600080fd5b810190602081018135600160201b81111561191657600080fd5b82018360208201111561192857600080fd5b803590602001918460018302840111600160201b8311171561194957600080fd5b509092509050613832565b34801561196057600080fd5b506108756004803603604081101561197757600080fd5b506001600160a01b03813581169160200135166138fb565b34801561199b57600080fd5b5061047b600480360360408110156119b257600080fd5b506001600160a01b038135169060200135613926565b3480156119d457600080fd5b506105d761397e565b3480156119e957600080fd5b5061047b60048036036020811015611a0057600080fd5b503561398c565b348015611a1357600080fd5b50610c286139c2565b348015611a2857600080fd5b5061047b60048036036040811015611a3f57600080fd5b81359190810190604081016020820135600160201b811115611a6057600080fd5b820183602082011115611a7257600080fd5b803590602001918460018302840111600160201b83111715611a9357600080fd5b5090925090506139d1565b348015611aaa57600080fd5b5061047b60048036036080811015611ac157600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b811115611afb57600080fd5b820183602082011115611b0d57600080fd5b803590602001918460018302840111600160201b83111715611b2e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613a1c945050505050565b348015611b7b57600080fd5b5061047b600480360360a0811015611b9257600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b811115611bcc57600080fd5b820183602082011115611bde57600080fd5b803590602001918460018302840111600160201b83111715611bff57600080fd5b919390929091602081019035600160201b811115611c1c57600080fd5b820183602082011115611c2e57600080fd5b803590602001918460018302840111600160201b83111715611c4f57600080fd5b509092509050613a44565b348015611c6657600080fd5b5061047b60048036036020811015611c7d57600080fd5b50356001600160a01b0316613b65565b348015611c9957600080fd5b5061087560048036036080811015611cb057600080fd5b8135916001600160a01b036020820135169160408201359190810190608081016060820135600160201b811115611ce657600080fd5b820183602082011115611cf857600080fd5b803590602001918460018302840111600160201b83111715611d1957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613b79945050505050565b348015611d6657600080fd5b5061047b613ba3565b348015611d7b57600080fd5b50610c28613dd9565b348015611d9057600080fd5b5061047b60048036036020811015611da757600080fd5b50356001600160a01b0316613ded565b348015611dc357600080fd5b50610875613e32565b611ddc611dd7613f70565b613f7f565b565b611de6613fa3565b73__TokenLib______________________________63e8f20292601d6015601e888888886040518863ffffffff1660e01b815260040180888152602001878152602001868152602001858152602001806020018381526020018281038252858582818152602001925080828437600081840152601f19601f8201169050808301925050509850505050505050505060006040518083038186803b158015611e8c57600080fd5b505af4158015611ea0573d6000803e3d6000fd5b5050505050505050565b611eb2613fa3565b601254610100900460ff1615611ec757600080fd5b6012805461ff001916610100179055604080516001815290517fac199452244e92d1343195dfad0a5347b229c861e3a8f2fbf08ab519b1d55bc99181900360200190a1565b6006805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611f925780601f10611f6757610100808354040283529160200191611f92565b820191906000526020600020905b815481529060010190602001808311611f7557829003601f168201915b505050505081565b6000611fa7338484613fb4565b5060015b92915050565b611fb9613fa3565b60055460408051600160e01b63a62d3a45028152600a600482015290516001600160a01b039092169163a62d3a459160248082019260009290919082900301818387803b15801561200957600080fd5b505af115801561201d573d6000803e3d6000fd5b50506017546040805160ff80841682526101008404811660208301526201000090930490921682820152517f23af9b477abf9645be8a074be19ae4a47e11abc43bd1aa47b16de7eb856093029350908190036060019150a1565b6120808261403c565b336000818152601f6020908152604080832086845282528083206001600160a01b0386168085529252808320805460ff1916600117905551909185917f3646a897c70797ecc134b0adc32f471b07bf1d6f451133b0384badab531e3fd69190a45050565b60008061212987878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506140a192505050565b9092509050612137826142f7565b801561214b575061214887336138fb565b85115b156121615761215a6003614309565b9150600090505b9550959350505050565b612173613fa3565b600a546001600160a01b038281166000908152601960205260408082208151600160e41b63097137350281529390941660048401526024830193909352915173__TokenLib______________________________9263971373509260448082019391829003018186803b1580156121e957600080fd5b505af41580156121fd573d6000803e3d6000fd5b5050505050565b61220e6005614323565b8181600081811061221b57fe5b9050013560f81c60f81b6001600160f81b031916600060f81b141561223f57600080fd5b61224886614336565b612253878733614394565b6122ca8787873388888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a91508990819084018382808284376000920191909152506143a892505050565b50505050505050565b600554600160a01b900460ff1681565b6122ec8261403c565b336000818152601f6020908152604080832086845282528083206001600160a01b0386168085529252808320805460ff1916905551909185917f3b287c4f1bab4df949b33bceacef984f544dc5d5479930d00e4ee8c9d8dd96f29190a45050565b6002545b90565b60135481565b60008061239f33878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506140a192505050565b915091505b94509492505050565b604080516000815290517f7e54bc788db3f781250853aaf56a46415cdb0cd27c06a4ab3d144aeccfcb7b1d9181900360200190a1505050505050565b6123f1613fa3565b806124465760408051600160e51b62461bcd02815260206004820152601360248201527f496e76616c6964206772616e756c617269747900000000000000000000000000604482015290519081900360640190fd5b600f54604080519182526020820183905280517f7728e5c461dd94b32a33e149f4ef6b674a7eff704cac77b26937eaced90f00389281900390910190a1600f55565b60006124a584848460405180602001604052806000815250613a1c565b5060019392505050565b6124bb338484846144d8565b505050565b6124c86144f2565b612509868686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061451d92505050565b50856001600160a01b03167f876b7cb47aa150b3a5516188b19ed308752ad4d0ae9a702543353b78163f758933878787878760405180876001600160a01b03166001600160a01b0316815260200186815260200180602001806020018381038352878782818152602001925080828437600083820152601f01601f191690910184810383528581526020019050858580828437600083820152604051601f909101601f19169092018290039a509098505050505050505050a2505050505050565b600d546001600160a01b031681565b60006125e7838360006145f5565b9392505050565b60085460ff1681565b6125ff613fa3565b601254610100900460ff1661261357600080fd5b6012805461ff0019169055604080516000815290517fac199452244e92d1343195dfad0a5347b229c861e3a8f2fbf08ab519b1d55bc99181900360200190a1565b61265c613fa3565b6001600160a01b0381166000908152601960205260408082208151600160e01b63ad2426150281526004810191909152905173__TokenLib______________________________9263ad2426159260248082019391829003018186803b1580156121e957600080fd5b3360008181526001602090815260408083206001600160a01b03871684529091528120549091611fa7918590612701908663ffffffff61478416565b613fb4565b60205481565b60125460ff161590565b6001600160a01b0380831660008181526019602052604081206001015490921614158061276557506001600160a01b038316600090815260196020526040902060020154600160a01b900460ff165b1561277257506000611fab565b60005b6001600160a01b0384166000908152601960205260409020600301548110156127fd576001600160a01b0384166000908152601960205260409020600301805460ff85169190839081106127c557fe5b60009182526020918290209181049091015460ff601f9092166101000a90041614156127f5576001915050611fab565b600101612775565b5060009392505050565b61280f613fa3565b8061281957600080fd5b6040805181815260068054600260001961010060018416150201909116049282018390527f99b81fd13cfa16f6b748b388ac4e3059f0d9e1166c6c99b07ff0f4aa308ca43c9290918591859190819060208201906060830190879080156128c15780601f10612896576101008083540402835291602001916128c1565b820191906000526020600020905b8154815290600101906020018083116128a457829003601f168201915b50508381038252848152602001858580828437600083820152604051601f909101601f191690920182900397509095505050505050a16124bb6006838361541a565b61290b613fa3565b61291481614336565b600e5460408051600160e01b6321f8a7210281527faae8817359f3dcb67d050f44f3e49f982e0359d90ca4b5f18569926304aaece6600482015290517f419d718138b0b65d09976f881eed8b8d7075d4b6092f74af0a0ec9b3417cdd12926001600160a01b0316916321f8a721916024808301926020929190829003018186803b1580156129a157600080fd5b505afa1580156129b5573d6000803e3d6000fd5b505050506040513d60208110156129cb57600080fd5b5051604080516001600160a01b03928316815291841660208301528051918290030190a1600e5460408051600160e01b63ca446dd90281527faae8817359f3dcb67d050f44f3e49f982e0359d90ca4b5f18569926304aaece660048201526001600160a01b0384811660248301529151919092169163ca446dd991604480830192600092919082900301818387803b158015612a6657600080fd5b505af11580156121fd573d6000803e3d6000fd5b60105481565b600f5481565b612a8e613fa3565b600c5460408051600160e01b63dfb1f4110281526001600160a01b0380871660048301526024820186905284151560448301529092166064830152601960848301525173__TokenLib______________________________9163dfb1f4119160a4808301926000929190829003018186803b158015612b0c57600080fd5b505af41580156122ca573d6000803e3d6000fd5b612b2a6005614323565b612b338461403c565b612b85843385600086868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516020810190915290815292506143a8915050565b50505050565b600e546001600160a01b031681565b612ba38561403c565b612be4848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061357e92505050565b836001600160a01b0316857f6032e2468b0f94dfa63c61d6c8a84842a99c049263eae408a52b945020b6578d85858560405180848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050a35050505050565b600c546001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b612c90613fa3565b6040805181815260118054600260001961010060018416150201909116049282018390527f4f5dc3feea8c186b1481cfe57c28df8871a61e3be16f7d65c60504cfd6344067929091859185919081906020820190606083019087908015612d385780601f10612d0d57610100808354040283529160200191612d38565b820191906000526020600020905b815481529060010190602001808311612d1b57829003601f168201915b50508381038252848152602001858580828437600083820152604051601f909101601f191690920182900397509095505050505050a16124bb6011838361541a565b612d82614796565b612d8c60036147f0565b8051825114612d9a57600080fd5b60005b82518110156124bb57612de6838281518110612db557fe5b6020026020010151838381518110612dc957fe5b60200260200101516040518060200160405280600081525061481a565b600101612d9d565b612df6613fa3565b604051600160e01b635a34d4d902815260206004820190815260248201839052612ec49173__TokenLib______________________________91635a34d4d991869186918190604401848480828437600083820152604051601f909101601f191690920195506020945090925050508083038186803b158015612e7857600080fd5b505af4158015612e8c573d6000803e3d6000fd5b505050506040513d6020811015612ea257600080fd5b50516001600160a01b0316612eb5612ffc565b6001600160a01b0316146148ee565b612ecc61270c565b612ed557600080fd5b6012805460ff1916600117905560088054610100600160a81b03191690556040517ff7ec83c37617f91085fc1725f4839e41a03238811eaebd2dbc4a405354cc958e90600090a15050565b6009546001600160a01b031681565b60125460ff1681565b6000612f45898933614394565b82826000818110612f5257fe5b9050013560f81c60f81b6001600160f81b031916600060f81b1415612f7657600080fd5b612fef8888888c89898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815233935091508b908b908190840183828082843760009201919091525061494392505050565b9998505050505050505050565b6004546001600160a01b031690565b6004546001600160a01b0316331490565b613024613fa3565b61302c61270c565b61303557600080fd5b6008546040516001600160a01b0380841692610100900416907f9fdb07212c6f92fd298affc4000712177664bc3c4cae5f61098d42da6d05be1e90600090a3600880546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6130a4613fa3565b6130ad81614336565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b6130dc3382600019613fb4565b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b6007805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611f925780601f10611f6757610100808354040283529160200191611f92565b61317a6005614323565b6131c56131c08560008686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250614ae392505050565b614b33565b6131cf8484614b88565b836001600160a01b0316336001600160a01b03167fb7d0d6b60740753e9f16692a2f479472a1385aec2420fa43225b02f2ffa1afe785858560405180848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050a350505050565b6000806000600160c21b6715539313d0d2d1510287141561330d576132ae89898888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506140a192505050565b90935091506132bc836142f7565b156133085760006132db600160d21b651313d0d2d151028a60006145f5565b905060006132f6600160d21b651313d0d2d151028b8a6145f5565b905061330382828a614bd1565b925050505b613321565b6133176000614309565b9250600091508190505b96509650969350505050565b613335613fa3565b60408051600160e01b63c38890e10281526001600160a01b03831660048201526018602482015260196044820152601a6064820152905173__TokenLib______________________________9163c38890e1916084808301926000929190829003018186803b1580156121e957600080fd5b6133af613fa3565b600a546001600160a01b038281166000908152601960205260408082208151600160e11b63250114070281529390941660048401526024830193909352915173__TokenLib______________________________92634a02280e9260448082019391829003018186803b1580156121e957600080fd5b61342d613fa3565b816001600160a01b03811663a9059cbb613445612ffc565b846040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561349557600080fd5b505af11580156134a9573d6000803e3d6000fd5b505050506040513d60208110156134bf57600080fd5b50516124bb57600080fd5b3360008181526001602090815260408083206001600160a01b03871684529091528120549091611fa7918590612701908663ffffffff614c1316565b6000611fa7338484604051806020016040528060008152506144d8565b6135678686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508993508892509050866123ad565b505050505050565b600a546001600160a01b031681565b613586614796565b61359060036147f0565b6124bb83838361481a565b6135a3613fa3565b60408051600160e01b63b7e2c789028152601d600482015260156024820152601e604482015260648101839052905173__TokenLib______________________________9163b7e2c789916084808301926000929190829003018186803b1580156121e957600080fd5b600554600160a01b900460ff161561366f5760408051600160e51b62461bcd02815260206004820152601360248201527f416c726561647920696e697469616c697a656400000000000000000000000000604482015290519081900360640190fd5b600d80546001600160a01b0319166001600160a01b03831617905560408051606081018252600380825260006020830181905291909201526017805460ff191690911762ffff00191690556136c2613ba3565b5060058054600160a01b60ff02196001600160a01b0319909116331716600160a01b179055565b600554600160a01b900460ff161561374b5760408051600160e51b62461bcd02815260206004820152601360248201527f416c726561647920696e697469616c697a656400000000000000000000000000604482015290519081900360640190fd5b600d80546001600160a01b0319166001600160a01b03841617905560408051606081018252600380825260006020830181905291909201526017805460ff191690911762ffff001916905561379e613ba3565b60058054600160a01b60ff02196001600160a01b0319909116331716600160a01b17905560205550565b600b546001600160a01b031681565b6011805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611f925780601f10611f6757610100808354040283529160200191611f92565b61383a613fa3565b613842614796565b604051600160e11b633b89841f028152602060048201908152602482018390526138c49173__TokenLib______________________________91637713083e91869186918190604401848480828437600083820152604051601f909101601f191690920195506020945090925050508083038186803b158015612e7857600080fd5b6014805460ff191690556040517f9ea7d0a14bc31ddf4821c86966910e35bd82b51f74bde7d3704498e0fb92e1f190600090a15050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600d80546001600160a01b0319166001600160a01b03841617905560208181556040805183815290517f7e54bc788db3f781250853aaf56a46415cdb0cd27c06a4ab3d144aeccfcb7b1d929181900390910190a15050565b601254610100900460ff1681565b6040805182815290517f7e54bc788db3f781250853aaf56a46415cdb0cd27c06a4ab3d144aeccfcb7b1d9181900360200190a150565b6005546001600160a01b031681565b6139db6005614323565b6124bb338484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250614c2892505050565b613a30613a2b85858585614ae3565b614c36565b613a3b848484614c8b565b612b8557600080fd5b613a4c6144f2565b613a8e87878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250614ae392505050565b50613a9a878787614cd3565b856001600160a01b0316876001600160a01b03167f6bf62b4b9c7b768275122bf70d429efc398a056d669b1efdf6c3976346246d7d33888888888860405180876001600160a01b03166001600160a01b0316815260200186815260200180602001806020018381038352878782818152602001925080828437600083820152601f01601f191690910184810383528581526020019050858580828437600083820152604051601f909101601f19169092018290039a509098505050505050505050a350505050505050565b613b6d613fa3565b613b7681614d9e565b50565b6000613b9a3385858886600060405180602001604052806000815250614943565b95945050505050565b613bab613fa3565b60095460408051600160e01b63bf40fac1028152602060048201819052600e60248301527f4d6f64756c655265676973747279000000000000000000000000000000000000604483015291516001600160a01b039093169263bf40fac192606480840193919291829003018186803b158015613c2657600080fd5b505afa158015613c3a573d6000803e3d6000fd5b505050506040513d6020811015613c5057600080fd5b5051600a80546001600160a01b0319166001600160a01b0392831617905560095460408051600160e01b63bf40fac1028152602060048201819052601560248301527f5365637572697479546f6b656e5265676973747279000000000000000000000060448301529151929093169263bf40fac19260648083019392829003018186803b158015613ce057600080fd5b505afa158015613cf4573d6000803e3d6000fd5b505050506040513d6020811015613d0a57600080fd5b5051600b80546001600160a01b0319166001600160a01b039283161790556009805460408051600160e01b63bf40fac10281526020600482018190526024820194909452600160b91b682837b63caa37b5b2b70260448201529051919093169263bf40fac1926064808301939192829003018186803b158015613d8c57600080fd5b505afa158015613da0573d6000803e3d6000fd5b505050506040513d6020811015613db657600080fd5b5051600c80546001600160a01b0319166001600160a01b03909216919091179055565b60085461010090046001600160a01b031681565b613df933826000613fb4565b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b6000613e3e60046147f0565b601080546001908101909155601680549182018155600052427fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428990910155613e8461234d565b601080546000908152601b6020908152604091829020939093559054600e548251600160e11b6317e4a5d30281527fdf3a8dd24acdd05addfc6aeffef7574d2de3f844535ec91e8e0f3e45dba967316004820152925191937f624ea167e477f9d39f7f4094b9dfe2e6346eb4a7aada54338db51abd554c4b9f936001600160a01b0390921692632fc94ba6926024808201939291829003018186803b158015613f2c57600080fd5b505afa158015613f40573d6000803e3d6000fd5b505050506040513d6020811015613f5657600080fd5b505160408051918252519081900360200190a25060105490565b600d546001600160a01b031690565b3660008037600080366000845af43d6000803e808015613f9e573d6000f35b3d6000fd5b613fab61300b565b611ddc57600080fd5b6001600160a01b038216613fc757600080fd5b6001600160a01b038316613fda57600080fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160c21b6715539313d0d2d151028114613b765760408051600160e51b62461bcd02815260206004820152601160248201527f496e76616c696420706172746974696f6e000000000000000000000000000000604482015290519081900360640190fd5b600080600080600f5486816140b257fe5b06156140d0576140c26000614309565b9350600092506123a4915050565b73__TokenLib______________________________631658f46a60186000600260ff1660ff16815260200190815260200160002060198b8b8b8b601260019054906101000a900460ff166040518863ffffffff1660e01b815260040180888152602001878152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b031681526020018481526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b838110156141b257818101518382015260200161419a565b50505050905090810190601f1680156141df5780820380516001836020036101000a031916815260200191505b5098505050505050505050604080518083038186803b15801561420157600080fd5b505af4158015614215573d6000803e3d6000fd5b505050506040513d604081101561422b57600080fd5b5080516020909101519250905073__TokenLib______________________________632c94d97b82848a8a61425f8e612c6d565b6040805163ffffffff881660e01b8152951515600487015260248601949094526001600160a01b03909216604485015260648401526084830152805160a480840193829003018186803b1580156142b557600080fd5b505af41580156142c9573d6000803e3d6000fd5b505050506040513d60408110156142df57600080fd5b50805160209091015190999098509650505050505050565b600160f81b600f0216600160f81b1490565b600081600881111561431757fe5b60500160f81b92915050565b61432d3382612716565b613b7657600080fd5b6001600160a01b038116613b765760408051600160e51b62461bcd02815260206004820152600f60248201527f496e76616c696420616464726573730000000000000000000000000000000000604482015290519081900360640190fd5b61439d8361403c565b6124bb828285614e0d565b6143b3858584614c28565b846001600160a01b0316836001600160a01b0316877fa4f62471c9bdf88115b97203943c74c59b655913ee5ee592706d84ef53fb6be2878686604051808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561443357818101518382015260200161441b565b50505050905090810190601f1680156144605780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561449357818101518382015260200161447b565b50505050905090810190601f1680156144c05780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a4505050505050565b6144e7613a2b85858585614ae3565b612b85848484614cd3565b600854611ddc9061010090046001600160a01b031633148015614518575061451861270c565b614e56565b600061452c8460008585614ae3565b90506145388484614eab565b336001600160a01b031660006001600160a01b03167fb7d0d6b60740753e9f16692a2f479472a1385aec2420fa43225b02f2ffa1afe785856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156145b357818101518382015260200161459b565b50505050905090810190601f1680156145e05780820380516001836020036101000a031916815260200191505b50935050505060405180910390a39392505050565b60026000908152601860209081527f2bacf7cca723d030d12aee795132f2c5f2d14ad131f16f3f27eeba3e79d18b8c805460408051828502810185019091528181526060939092919083018282801561467757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311614659575b50505050509050600080600090505b825181101561477a5782818151811061469b57fe5b60200260200101516001600160a01b0316632829e6518888886040518463ffffffff1660e01b815260040180848152602001836001600160a01b03166001600160a01b03168152602001828152602001935050505060206040518083038186803b15801561470857600080fd5b505afa15801561471c573d6000803e3d6000fd5b505050506040513d602081101561473257600080fd5b50519150600160c21b6715539313d0d2d151028714156147665783821080614758575080155b15614761578193505b614772565b81841015614772578193505b600101614686565b5050509392505050565b6000828201838110156125e757600080fd5b60145460ff16611ddc5760408051600160e51b62461bcd02815260206004820152600f60248201527f49737375616e63652066726f7a656e0000000000000000000000000000000000604482015290519081900360640190fd5b6147f8612ffc565b6001600160a01b0316336001600160a01b031614613b765761432d3382612716565b61482a613a2b6000858585614ae3565b6148348383614f52565b826001600160a01b0316336001600160a01b03167f0e9905d62635f049c2f4e11678ebf9dc3d1f8c4a653e290759b772e47ba00d0084846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156148ae578181015183820152602001614896565b50505050905090810190601f1680156148db5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3505050565b80613b765760408051600160e51b62461bcd02815260206004820152601260248201527f4f776e657220646964206e6f74207369676e0000000000000000000000000000604482015290519081900360640190fd5b600061494e8561403c565b6000614968600160d21b651313d0d2d151028960006145f5565b9050614976898989886144d8565b6000614990600160d21b651313d0d2d151028a60006145f5565b905061499d82828a614bd1565b9250886001600160a01b03168a6001600160a01b0316887fff4e9a26af4eb73b8bacfaa4abd4fea03d9448e7b912dc5ff4019048875aa2d4888c8b8a60405180856001600160a01b03166001600160a01b031681526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015614a38578181015183820152602001614a20565b50505050905090810190601f168015614a655780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015614a98578181015183820152602001614a80565b50505050905090810190601f168015614ac55780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a45050979650505050505050565b6003805460010190819055600090614afc868686614ffa565b614b08868686866150d1565b9150614b1386615398565b614b1c85615398565b6003548114614b2a57600080fd5b50949350505050565b80613b765760408051600160e51b62461bcd02815260206004820152600e60248201527f496e76616c69642072656465656d000000000000000000000000000000000000604482015290519081900360640190fd5b614b928282614eab565b6001600160a01b038216600090815260016020908152604080832033808552925290912054614bcd918491612701908563ffffffff614c1316565b5050565b600081614be4848663ffffffff614c1316565b14614bfd57600160c21b6715539313d0d2d15102614c0b565b600160d21b651313d0d2d151025b949350505050565b600082821115614c2257600080fd5b50900390565b6124bb6131c084848461451d565b80613b765760408051600160e51b62461bcd02815260206004820152601060248201527f5472616e7366657220496e76616c696400000000000000000000000000000000604482015290519081900360640190fd5b6000614c98848484614cd3565b6001600160a01b0384166000908152600160209081526040808320338085529252909120546124a5918691612701908663ffffffff614c1316565b6001600160a01b038216614ce657600080fd5b6001600160a01b038316600090815260208190526040902054614d0f908263ffffffff614c1316565b6001600160a01b038085166000908152602081905260408082209390935590841681522054614d44908263ffffffff61478416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b038116614db157600080fd5b6004546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b6124bb600019614e1d85856138fb565b148061451857506001600160a01b038085166000908152601f6020908152604080832086845282528083209387168352929052205460ff165b80613b765760408051600160e51b62461bcd02815260206004820152600e60248201527f4e6f7420417574686f7269736564000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038216614ebe57600080fd5b600254614ed1908263ffffffff614c1316565b6002556001600160a01b038216600090815260208190526040902054614efd908263ffffffff614c1316565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b038216614f6557600080fd5b600254614f78908263ffffffff61478416565b6002556001600160a01b038216600090815260208190526040902054614fa4908263ffffffff61478416565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b73__TokenLib______________________________63943aef7b60135485858561502388612c6d565b61502c8a612c6d565b600e546040805163ffffffff8a1660e01b815260048101989098526001600160a01b03968716602489015294861660448801526064870193909352608486019190915260a48501529190911660c48301525160e4808301926020929190829003018186803b15801561509d57600080fd5b505af41580156150b1573d6000803e3d6000fd5b505050506040513d60208110156150c757600080fd5b5051601355505050565b600082600f5481816150df57fe5b06156151355760408051600160e51b62461bcd02815260206004820152601360248201527f496e76616c6964206772616e756c617269747900000000000000000000000000604482015290519081900360640190fd5b601254610100900460ff1661538c576002600090815260186020527f2bacf7cca723d030d12aee795132f2c5f2d14ad131f16f3f27eeba3e79d18b8c54819081908190815b8181101561536457600260005260186020527f2bacf7cca723d030d12aee795132f2c5f2d14ad131f16f3f27eeba3e79d18b8c8054829081106151b957fe5b60009182526020808320909101546001600160a01b0316808352601990915260409091206002015490935060ff600160a01b9091041661535c576000836001600160a01b0316633d3217318e8e8e8e6040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561528a578181015183820152602001615272565b50505050905090810190601f1680156152b75780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156152d957600080fd5b505af11580156152ed573d6000803e3d6000fd5b505050506040513d602081101561530357600080fd5b50519050600081600381111561531557fe5b1415615324576001965061535a565b600281600381111561533257fe5b1415615341576001955061535a565b600381600381111561534f57fe5b141561535a57600194505b505b60010161517a565b508261537d57846153755783615378565b60005b615380565b60015b96505050505050614b2a565b50600095945050505050565b6001600160a01b0381166000908152601c6020526040902073__TokenLib______________________________906309def7ee906153d584612c6d565b6010546040518463ffffffff1660e01b815260040180848152602001838152602001828152602001935050505060006040518083038186803b1580156121e957600080fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061545b5782800160ff19823516178555615488565b82800160010185558215615488579182015b8281111561548857823582559160200191906001019061546d565b50615494929150615498565b5090565b61235191905b80821115615494576000815560010161549e56fea165627a7a7230582064ee95f1618cbd5c33febcc0dc279abf88950339058b3f8a185ea7995c1130e10029",
  "sourceMap": "572:1665:58:-;;;2918:38:165;;;-1:-1:-1;;2918:38:165;;;;;;3525:29;;;;;;2918:38;3525:29;;;;;;560:13:173;:17;3652:11:163;:18;;-1:-1:-1;;;;;;3652:18:163;;;;;572:1665:58;;;;;;",
  "deployedSourceMapi;:::-;572:1665:58;44648:216:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44648:216:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;44648:216:163;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;44648:216:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;44648:216:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;44648:216:163;;-1:-1:-1;44648:216:163;-1:-1:-1;44648:216:163;;:::i;15262:237::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15262:237:163;;;:::i;2159:18:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2159:18:165;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2159:18:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2721:145:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2721:145:170;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2721:145:170;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;10787:606:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10787:606:163;;;:::i;25018:283::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25018:283:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25018:283:163;;;;;;-1:-1:-1;;;;;25018:283:163;;:::i;41520:415::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41520:415:163;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;41520:415:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;41520:415:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;41520:415:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;41520:415:163;;-1:-1:-1;41520:415:163;-1:-1:-1;41520:415:163;:::i;:::-;;;;-1:-1:-1;;;;;;41520:415:163;;;;;;;;;;;;;;;;;;;;;11536:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11536:157:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11536:157:163;-1:-1:-1;;;;;11536:157:163;;:::i;36462:518::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36462:518:163;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;36462:518:163;;;-1:-1:-1;;;;;36462:518:163;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;36462:518:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;36462:518:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;36462:518:163;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;36462:518:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;36462:518:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;36462:518:163;;-1:-1:-1;36462:518:163;-1:-1:-1;36462:518:163;:::i;2105:23:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2105:23:165;;;:::i;25583:278:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25583:278:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25583:278:163;;;;;;-1:-1:-1;;;;;25583:278:163;;:::i;916:89:170:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;916:89:170;;;:::i;:::-;;;;;;;;;;;;;;;;3101:26:165;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3101:26:165;;;:::i;40536:180:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;40536:180:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;40536:180:163;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;40536:180:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;40536:180:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;40536:180:163;;-1:-1:-1;40536:180:163;-1:-1:-1;40536:180:163;:::i;1936:296:58:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1936:296:58;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;1936:296:58;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1936:296:58;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1936:296:58;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1936:296:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1936:296:58;;-1:-1:-1;;1936:296:58;;;-1:-1:-1;;;1936:296:58;;;;;;;;;;;;;;;;:::i;13512:247:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13512:247:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13512:247:163;;:::i;18160:172::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18160:172:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;18160:172:163;;;;;;;;;;;;;;;;;:::i;17436:150::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17436:150:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;17436:150:163;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;17436:150:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;17436:150:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;17436:150:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;17436:150:163;;-1:-1:-1;17436:150:163;;-1:-1:-1;;;;;17436:150:163:i;48164:306::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48164:306:163;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;48164:306:163;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;48164:306:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;48164:306:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;48164:306:163;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;48164:306:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;48164:306:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;48164:306:163;;-1:-1:-1;48164:306:163;-1:-1:-1;48164:306:163;:::i;2562:29:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2562:29:165;;;:::i;:::-;;;;-1:-1:-1;;;;;2562:29:165;;;;;;;;;;;;;;19960:177:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19960:177:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19960:177:163;;;;;;-1:-1:-1;;;;;19960:177:163;;:::i;2211:21:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2211:21:165;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15560:240:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15560:240:163;;;:::i;10294:137::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10294:137:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10294:137:163;-1:-1:-1;;;;;10294:137:163;;:::i;4067:200:170:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4067:200:170;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4067:200:170;;;;;;;;:::i;673:24:58:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;673:24:58;;;:::i;45726:98:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;45726:98:163;;;:::i;4442:430::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4442:430:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4442:430:163;;-1:-1:-1;;;;;4442:430:163;;;;;;;;:::i;14176:193::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14176:193:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14176:193:163;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;14176:193:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14176:193:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;14176:193:163;;-1:-1:-1;14176:193:163;-1:-1:-1;14176:193:163;:::i;14519:252::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14519:252:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14519:252:163;-1:-1:-1;;;;;14519:252:163;;:::i;2765:34:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2765:34:165;;;:::i;2694:26::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2694:26:165;;;:::i;12809:211:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12809:211:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12809:211:163;;;;;;;;;;;;;;;:::i;35225:258::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35225:258:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;35225:258:163;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;35225:258:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;35225:258:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;35225:258:163;;-1:-1:-1;35225:258:163;-1:-1:-1;35225:258:163;:::i;2658:27:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2658:27:165;;;:::i;33668:364:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33668:364:163;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;33668:364:163;;;-1:-1:-1;;;;;33668:364:163;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;33668:364:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;33668:364:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;33668:364:163;;-1:-1:-1;33668:364:163;-1:-1:-1;33668:364:163;:::i;2532:23:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2532:23:165;;;:::i;1217:104:170:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1217:104:170;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1217:104:170;-1:-1:-1;;;;;1217:104:170;;:::i;13163:210:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13163:210:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13163:210:163;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;13163:210:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;13163:210:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;13163:210:163;;-1:-1:-1;13163:210:163;-1:-1:-1;13163:210:163;:::i;32843:406::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32843:406:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;32843:406:163;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;32843:406:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;32843:406:163;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;32843:406:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;32843:406:163;;;;;;;;-1:-1:-1;32843:406:163;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;32843:406:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;32843:406:163;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;32843:406:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;32843:406:163;;-1:-1:-1;32843:406:163;;-1:-1:-1;;;;;32843:406:163:i;39485:323::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;39485:323:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;39485:323:163;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;39485:323:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;39485:323:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;39485:323:163;;-1:-1:-1;39485:323:163;-1:-1:-1;39485:323:163;:::i;2382:41:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2382:41:165;;;:::i;2918:38::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2918:38:165;;;:::i;26539:583:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26539:583:163;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;26539:583:163;;;-1:-1:-1;;;;;26539:583:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;26539:583:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;26539:583:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;26539:583:163;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;26539:583:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;26539:583:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;26539:583:163;;-1:-1:-1;26539:583:163;-1:-1:-1;26539:583:163;:::i;49019:79::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49019:79:163;;;:::i;49191:92::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49191:92:163;;;:::i;39100:209::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;39100:209:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;39100:209:163;-1:-1:-1;;;;;39100:209:163;;:::i;13890:170::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13890:170:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13890:170:163;-1:-1:-1;;;;;13890:170:163;;:::i;23977:::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23977:170:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23977:170:163;-1:-1:-1;;;;;23977:170:163;;:::i;2184:20:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2184:20:165;;;:::i;37862:380:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37862:380:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;37862:380:163;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;37862:380:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;37862:380:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;37862:380:163;;-1:-1:-1;37862:380:163;-1:-1:-1;37862:380:163;:::i;43294:894::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;43294:894:163;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;43294:894:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;43294:894:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;43294:894:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;43294:894:163;;-1:-1:-1;43294:894:163;-1:-1:-1;43294:894:163;:::i;:::-;;;;-1:-1:-1;;;;;;43294:894:163;;;;;;;;;;;;;;;;;;;;;;;;;11833:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11833:151:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11833:151:163;-1:-1:-1;;;;;11833:151:163;;:::i;10570:153::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10570:153:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10570:153:163;-1:-1:-1;;;;;10570:153:163;;:::i;12340:202::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12340:202:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12340:202:163;;;;;;;;:::i;4786:210:170:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4786:210:170;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4786:210:170;;;;;;;;:::i;16359:163:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16359:163:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;16359:163:163;;;;;;;;:::i;9936:219::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9936:219:163;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;9936:219:163;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;9936:219:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9936:219:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9936:219:163;;-1:-1:-1;9936:219:163;-1:-1:-1;9936:219:163;;;;;;;;;;;;;;:::i;2430:37:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2430:37:165;;;:::i;31693:318:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31693:318:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;31693:318:163;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;31693:318:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;31693:318:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;31693:318:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;31693:318:163;;-1:-1:-1;31693:318:163;;-1:-1:-1;;;;;31693:318:163:i;45130:156::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;45130:156:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;45130:156:163;;:::i;3883:385::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3883:385:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3883:385:163;-1:-1:-1;;;;;3883:385:163;;:::i;1357:438:58:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1357:438:58;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1357:438:58;;;;;;;;:::i;2474:51:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2474:51:165;;;:::i;2831:26::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2831:26:165;;;:::i;30666:336:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30666:336:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30666:336:163;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;30666:336:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;30666:336:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;30666:336:163;;-1:-1:-1;30666:336:163;-1:-1:-1;30666:336:163;:::i;1652:129:170:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1652:129:170;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1652:129:170;;;;;;;;;;:::i;903:249:58:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;903:249:58;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;903:249:58;;;;;;;;:::i;3015:27:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3015:27:165;;;:::i;1803:94:58:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1803:94:58;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1803:94:58;;:::i;2071:27:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2071:27:165;;;:::i;34514:148:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34514:148:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;34514:148:163;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;34514:148:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;34514:148:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;34514:148:163;;-1:-1:-1;34514:148:163;-1:-1:-1;34514:148:163;:::i;19441:238::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19441:238:163;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;19441:238:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;19441:238:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;19441:238:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;19441:238:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;19441:238:163;;-1:-1:-1;19441:238:163;;-1:-1:-1;;;;;19441:238:163:i;46855:350::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46855:350:163;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;46855:350:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;46855:350:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;46855:350:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;46855:350:163;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;46855:350:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;46855:350:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;46855:350:163;;-1:-1:-1;46855:350:163;-1:-1:-1;46855:350:163;:::i;49460:124::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49460:124:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;49460:124:163;-1:-1:-1;;;;;49460:124:163;;:::i;21556:229::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21556:229:163;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;21556:229:163;;;-1:-1:-1;;;;;21556:229:163;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;21556:229:163;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;21556:229:163;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;21556:229:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;21556:229:163;;-1:-1:-1;21556:229:163;;-1:-1:-1;;;;;21556:229:163:i;48584:340::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48584:340:163;;;:::i;2348:25:165:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2348:25:165;;;:::i;24620:157:163:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24620:157:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24620:157:163;-1:-1:-1;;;;;24620:157:163;;:::i;38388:566::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38388:566:163;;;:::i;494:77:151:-;535:28;545:17;:15;:17::i;:::-;535:9;:28::i;:::-;494:77::o;44648:216:163:-;44749:12;:10;:12::i;:::-;44772:8;:20;44793:10;44805:9;44816:11;44829:5;44836:4;;44842:13;44772:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;44772:84:163;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44772:84:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44772:84:163;;;;44648:216;;;;:::o;15262:237::-;15309:12;:10;:12::i;:::-;15341:15;;;;;;;15340:16;15332:25;;;;;;15368:15;:22;;-1:-1:-1;;15368:22:163;;;;;15470:21;;;15386:4;15470:21;;;;;;;;;;;;;15262:237::o;2159:18:165:-;;;;;;;;;;;;;;;-1:-1:-1;;2159:18:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2721:145:170:-;2786:4;2802:36;2811:10;2823:7;2832:5;2802:8;:36::i;:::-;-1:-1:-1;2855:4:170;2721:145;;;;;:::o;10787:606:163:-;10831:12;:10;:12::i;:::-;11242;;11218:54;;;-1:-1:-1;;;;;11218:54:163;;11269:2;11218:54;;;;;;-1:-1:-1;;;;;11242:12:163;;;;11218:50;;:54;;;;;11242:12;;11218:54;;;;;;;;11242:12;;11218:54;;;5:2:-1;;;;30:1;27;20:12;5:2;11218:54:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;11302:20:163;:26;11288:97;;;11302:26;;;;11288:97;;11302:26;11330;;;;11288:97;;;;11358:26;;;;;;;11288:97;;;;;;;-1:-1:-1;11288:97:163;;;;;;;-1:-1:-1;11288:97:163;10787:606::o;25018:283::-;25113:29;25131:10;25113:17;:29::i;:::-;25172:10;25153:30;;;;:18;:30;;;;;;;;:42;;;;;;;;-1:-1:-1;;;;;25153:53:163;;;;;;;;;;:60;;-1:-1:-1;;25153:60:163;25209:4;25153:60;;;25229:64;25153:53;;25184:10;;25229:64;;25153:30;25229:64;25018:283;;:::o;41520:415::-;41634:15;41651;41703:39;41716:5;41723:3;41728:6;41736:5;;41703:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;41703:12:163;;-1:-1:-1;;;41703:39:163:i;:::-;41679:63;;-1:-1:-1;41679:63:163;-1:-1:-1;41757:22:163;41679:63;41757:10;:22::i;:::-;:63;;;;;41792:28;41802:5;41809:10;41792:9;:28::i;:::-;41783:6;:37;41757:63;41753:175;;;41845:58;41862:40;41845:16;:58::i;:::-;41837:79;-1:-1:-1;41913:1:163;;-1:-1:-1;41753:175:163;41520:415;;;;;;;;:::o;11536:157::-;11598:12;:10;:12::i;:::-;11646:14;;-1:-1:-1;;;;;11662:22:163;;;11646:14;11662:22;;;:13;:22;;;;;;11621:64;;-1:-1:-1;;;;;11621:64:163;;11646:14;;;;11621:64;;;;;;;;;;;;;:8;;:24;;:64;;;;;;;;;;;:8;:64;;;5:2:-1;;;;30:1;27;20:12;5:2;11621:64:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11621:64:163;;;;11536:157;:::o;36462:518::-;36693:21;540:1:165;36693:11:163;:21::i;:::-;36733:13;;36747:1;36733:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;36733:21:163;;36753:1;36733:21;;;;36725:30;;;;;;36766:31;36784:12;36766:17;:31::i;:::-;36808:67;36838:10;36850:12;36864:10;36808:29;:67::i;:::-;36886:86;36905:10;36917:12;36931:6;36939:10;36951:5;;36886:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;36886:86:163;;;;137:4:-1;36886:86:163;;;;;;;;;;;;;;;;;;-1:-1:-1;36958:13:163;;-1:-1:-1;36958:13:163;;;;36886:86;;36958:13;;;;36886:86;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;36886:18:163;;-1:-1:-1;;;36886:86:163:i;:::-;36462:518;;;;;;;:::o;2105:23:165:-;;;-1:-1:-1;;;2105:23:165;;;;;:::o;25583:278:163:-;25675:29;25693:10;25675:17;:29::i;:::-;25734:10;25771:5;25715:30;;;:18;:30;;;;;;;;:42;;;;;;;;-1:-1:-1;;;;;25715:53:163;;;;;;;;;;:61;;-1:-1:-1;;25715:61:163;;;25792;25715:53;;25746:10;;25792:61;;25771:5;25792:61;25583:278;;:::o;916:89:170:-;986:12;;916:89;;:::o;3101:26:165:-;;;;:::o;40536:180:163:-;40631:4;40637:7;40664:44;40677:10;40689:3;40694:6;40702:5;;40664:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;40664:12:163;;-1:-1:-1;;;40664:44:163:i;:::-;40657:51;;;;40536:180;;;;;;;;:::o;1936:296:58:-;2209:15;;;2222:1;2209:15;;;;;;;;;;;;;1936:296;;;;;;:::o;13512:247:163:-;13581:12;:10;:12::i;:::-;13612:17;13604:49;;;;;-1:-1:-1;;;;;13604:49:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;13688:11;;13669:45;;;;;;;;;;;;;;;;;;;;;;;;13725:11;:26;13512:247::o;18160:172::-;18241:4;18258:44;18279:5;18286:3;18291:6;18258:44;;;;;;;;;;;;:20;:44::i;:::-;-1:-1:-1;18320:4:163;18160:172;;;;;:::o;17436:150::-;17529:49;17547:10;17559:3;17564:6;17572:5;17529:17;:49::i;:::-;17436:150;;;:::o;48164:306::-;48300:17;:15;:17::i;:::-;48328:42;48342:12;48356:6;48364:5;;48328:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;48328:13:163;;-1:-1:-1;;;48328:42:163:i;:::-;;48419:12;-1:-1:-1;;;;;48386:76:163;;48407:10;48433:6;48441:5;;48448:13;;48386:76;;;;-1:-1:-1;;;;;48386:76:163;-1:-1:-1;;;;;48386:76:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;48386:76:163;;;;;;;;;;;-1:-1:-1;48386:76:163;;;;;1:33:-1;99:1;81:16;;;74:27;48386:76:163;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;48386:76:163;;;;-1:-1:-1;48386:76:163;;-1:-1:-1;;;;;;;;;48386:76:163;48164:306;;;;;;:::o;2562:29:165:-;;;-1:-1:-1;;;;;2562:29:165;;:::o;19960:177:163:-;20052:7;20079:50;20101:10;20113:12;20127:1;20079:21;:50::i;:::-;20072:57;19960:177;-1:-1:-1;;;19960:177:163:o;2211:21:165:-;;;;;;:::o;15560:240:163:-;15609:12;:10;:12::i;:::-;15640:15;;;;;;;15632:24;;;;;;15667:15;:23;;-1:-1:-1;;15667:23:163;;;15770:22;;;15685:5;15770:22;;;;;;;;;;;;;15560:240::o;10294:137::-;10354:12;:10;:12::i;:::-;-1:-1:-1;;;;;10400:22:163;;;;;;:13;:22;;;;;;10377:46;;-1:-1:-1;;;;;10377:46:163;;;;;;;;;;;:8;;:22;;:46;;;;;;;;;;;:8;:46;;;5:2:-1;;;;30:1;27;20:12;4067:200:170;4172:10;4147:4;4193:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4193:29:170;;;;;;;;;;4147:4;;4163:76;;4184:7;;4193:45;;4227:10;4193:45;:33;:45;:::i;:::-;4163:8;:76::i;673:24:58:-;;;;:::o;45726:98:163:-;45798:18;;;;45797:19;45726:98;:::o;4442:430::-;-1:-1:-1;;;;;4531:40:163;;;4510:4;4531:22;;;:13;:22;;;;;:29;;;4510:4;;4531:29;:40;;;:77;;-1:-1:-1;;;;;;4575:22:163;;;;;;:13;:22;;;;;:33;;;-1:-1:-1;;;4575:33:163;;;;4531:77;4527:108;;;-1:-1:-1;4630:5:163;4623:12;;4527:108;4651:9;4646:196;-1:-1:-1;;;;;4670:22:163;;;;;;:13;:22;;;;;:34;;:41;4666:45;;4646:196;;;-1:-1:-1;;;;;4737:22:163;;;;;;:13;:22;;;;;:34;;:37;;:46;;;;:34;4772:1;;4737:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:46;4733:98;;;4811:4;4804:11;;;;;4733:98;4713:3;;4646:196;;;-1:-1:-1;4859:5:163;;4442:430;-1:-1:-1;;;4442:430:163:o;14176:193::-;14239:12;:10;:12::i;:::-;14270:23;14262:32;;;;;;14310:28;;;;;;14326:4;14310:28;;;-1:-1:-1;;14310:28:163;;;;;;;;;;;;;;;;;;;14326:4;;14332:5;;;;14310:28;;;;;;;;;;;14326:4;;14310:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14310:28:163;;;;;;;;;;;;;;;1:33:-1;99:1;81:16;;;74:27;14310:28:163;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;14310:28:163;;;;-1:-1:-1;14310:28:163;;-1:-1:-1;;;;;;14310:28:163;14349:12;:4;14356:5;;14349:12;:::i;14519:252::-;14586:12;:10;:12::i;:::-;14609:26;14627:7;14609:17;:26::i;:::-;14673:9;;:30;;;-1:-1:-1;;;;;14673:30:163;;832:66:165;14673:30:163;;;;;;14651:62;;-1:-1:-1;;;;;14673:9:163;;:20;;:30;;;;;;;;;;;;;;:9;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;14673:30:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14673:30:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14673:30:163;14651:62;;;-1:-1:-1;;;;;14651:62:163;;;;;;;;14673:30;14651:62;;;;;;;;;;;;14724:9;;:39;;;-1:-1:-1;;;;;14724:39:163;;832:66:165;14724:39:163;;;;-1:-1:-1;;;;;14724:39:163;;;;;;;;;:9;;;;;:20;;:39;;;;;:9;;:39;;;;;;;:9;;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;14724:39:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;2765:34:165;;;;:::o;2694:26::-;;;;:::o;12809:211:163:-;12907:12;:10;:12::i;:::-;12987:9;;12930:82;;;-1:-1:-1;;;;;12930:82:163;;-1:-1:-1;;;;;12930:82:163;;;;;;;;;;;;;;;;;;;;12987:9;;;12930:82;;;;12998:13;12930:82;;;;;:8;;:27;;:82;;;;;12987:9;;12930:82;;;;;;;:8;:82;;;5:2:-1;;;;30:1;27;20:12;5:2;12930:82:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;35225:258:163;35330:21;540:1:165;35330:11:163;:21::i;:::-;35362:29;35380:10;35362:17;:29::i;:::-;35402:73;35421:10;35433;35445:6;35461:1;35465:5;;35402:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;35402:73:163;;;;;;;;;;;;;-1:-1:-1;35402:18:163;;-1:-1:-1;;35402:73:163:i;:::-;35225:258;;;;:::o;2658:27:165:-;;;-1:-1:-1;;;;;2658:27:165;;:::o;33668:364:163:-;33794:29;33812:10;33794:17;:29::i;:::-;33916:34;33922:12;33936:6;33944:5;;33916:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;33916:5:163;;-1:-1:-1;;;33916:34:163:i;:::-;33996:12;-1:-1:-1;;;;;33966:58:163;33984:10;33966:58;34010:6;34018:5;;33966:58;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;33966:58:163;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;33966:58:163;;;;-1:-1:-1;33966:58:163;;-1:-1:-1;;;;;33966:58:163;33668:364;;;;;:::o;2532:23:165:-;;;-1:-1:-1;;;;;2532:23:165;;:::o;1217:104:170:-;-1:-1:-1;;;;;1298:16:170;1272:7;1298:16;;;;;;;;;;;;1217:104::o;13163:210:163:-;13245:12;:10;:12::i;:::-;13273:50;;;;;;13292:12;13273:50;;;-1:-1:-1;;13273:50:163;;;;;;;;;;;;;;;;;;;13292:12;;13306:16;;;;13273:50;;;;;;;;;;;13292:12;;13273:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13273:50:163;;;;;;;;;;;;;;;1:33:-1;99:1;81:16;;;74:27;13273:50:163;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;13273:50:163;;;;-1:-1:-1;13273:50:163;;-1:-1:-1;;;;;;13273:50:163;13334:31;:12;13349:16;;13334:31;:::i;32843:406::-;32939:20;:18;:20::i;:::-;32970:28;448:1:165;32970:18:163;:28::i;:::-;33098:7;:14;33074:13;:20;:38;33066:47;;;;;;33129:9;33124:118;33148:13;:20;33144:1;:24;33124:118;;;33190:40;33197:13;33211:1;33197:16;;;;;;;;;;;;;;33215:7;33223:1;33215:10;;;;;;;;;;;;;;33190:40;;;;;;;;;;;;:6;:40::i;:::-;33170:3;;33124:118;;39485:323;39559:12;:10;:12::i;:::-;39610:54;;-1:-1:-1;;;;;39610:54:163;;;;;;;;;;;;;;;39582:83;;39610:8;;:42;;39653:10;;;;39610:54;;;;39653:10;;;;39610:54;1:33:-1;99:1;81:16;;;74:27;39610:54:163;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;;-1:-1;39610:54:163;;-1:-1:-1;39610:54:163;;-1:-1:-1;;;39610:54:163;;;;;;;;5:2:-1;;;;30:1;27;20:12;5:2;39610:54:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;39610:54:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;39610:54:163;-1:-1:-1;;;;;39599:65:163;:7;:5;:7::i;:::-;-1:-1:-1;;;;;39599:65:163;;39582:16;:83::i;:::-;39684:16;:14;:16::i;:::-;39676:25;;;;;;39712:18;:25;;-1:-1:-1;;39712:25:163;39733:4;39712:25;;;39755:10;39748:17;;-1:-1:-1;;;;;;39748:17:163;;;39781:19;;;;39712:18;;39781:19;39485:323;;:::o;2382:41:165:-;;;-1:-1:-1;;;;;2382:41:165;;:::o;2918:38::-;;;;;;:::o;26539:583:163:-;26789:7;26909:60;26939:10;26951:5;26958:10;26909:29;:60::i;:::-;26988:13;;27002:1;26988:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;26988:21:163;;27008:1;26988:21;;;;26980:30;;;;;;27028:86;27049:5;27056:3;27061:6;27069:10;27081:5;;27028:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;27028:86:163;;;;137:4:-1;27028:86:163;;;;;;;;;;;;;;;;;27088:10;;-1:-1:-1;27028:86:163;-1:-1:-1;27100:13:163;;;;;;27028:86;;27100:13;;;;27028:86;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;27028:20:163;;-1:-1:-1;;;27028:86:163:i;:::-;27021:93;26539:583;-1:-1:-1;;;;;;;;;26539:583:163:o;49019:79::-;49084:6;;-1:-1:-1;;;;;49084:6:163;49019:79;:::o;49191:92::-;49269:6;;-1:-1:-1;;;;;49269:6:163;49255:10;:20;;49191:92::o;39100:209::-;39164:12;:10;:12::i;:::-;39195:16;:14;:16::i;:::-;39187:25;;;;;;39242:10;;39228:38;;-1:-1:-1;;;;;39228:38:163;;;;39242:10;;;;;39228:38;;;;;39277:10;:24;;-1:-1:-1;;;;;39277:24:163;;;;;-1:-1:-1;;;;;;39277:24:163;;;;;;;;;39100:209::o;13890:170::-;13955:12;:10;:12::i;:::-;13978:29;13996:10;13978:17;:29::i;:::-;14018:9;:34;;-1:-1:-1;;;;;;14018:34:163;-1:-1:-1;;;;;14018:34:163;;;;;;;;;;13890:170::o;23977:::-;24041:41;24050:10;24062:9;-1:-1:-1;;24041:8:163;:41::i;:::-;24098;;24128:10;;-1:-1:-1;;;;;24098:41:163;;;;;;;;23977:170;:::o;2184:20:165:-;;;;;;;;;;;;;;;-1:-1:-1;;2184:20:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37862:380:163;37962:21;540:1:165;37962:11:163;:21::i;:::-;38055:72;38070:56;38086:12;38108:1;38112:6;38120:5;;38070:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;38070:15:163;;-1:-1:-1;;;38070:56:163:i;:::-;38055:14;:72::i;:::-;38138:31;38148:12;38162:6;38138:9;:31::i;:::-;38206:12;-1:-1:-1;;;;;38185:49:163;38194:10;-1:-1:-1;;;;;38185:49:163;;38220:6;38228:5;;38185:49;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;38185:49:163;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;38185:49:163;;;;-1:-1:-1;38185:49:163;;-1:-1:-1;;;;;38185:49:163;37862:380;;;;:::o;43294:894::-;43514:15;43531:21;43554:19;-1:-1:-1;;;;;43595:10:163;:22;43591:494;;;43664:39;43677:5;43684:3;43689:6;43697:5;;43664:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;43664:12:163;;-1:-1:-1;;;43664:39:163:i;:::-;43634:69;;-1:-1:-1;43634:69:163;-1:-1:-1;43722:22:163;43634:69;43722:10;:22::i;:::-;43718:294;;;43765:21;43789:37;-1:-1:-1;;;;;43819:3:163;43824:1;43789:21;:37::i;:::-;43765:61;;43845:20;43868:42;-1:-1:-1;;;;;43898:3:163;43903:6;43868:21;:42::i;:::-;43845:65;;43943:53;43960:13;43975:12;43989:6;43943:16;:53::i;:::-;43929:67;;43718:294;;;44026:47;;43591:494;44103:52;44120:34;44103:16;:52::i;:::-;44095:85;-1:-1:-1;44165:1:163;;-1:-1:-1;44165:1:163;;-1:-1:-1;43294:894:163;;;;;;;;;;;:::o;11833:151::-;11892:12;:10;:12::i;:::-;11915:61;;;-1:-1:-1;;;;;11915:61:163;;-1:-1:-1;;;;;11915:61:163;;;;;;11946:7;11915:61;;;;11955:13;11915:61;;;;11970:5;11915:61;;;;;;:8;;:21;;:61;;;;;-1:-1:-1;;11915:61:163;;;;;;;:8;:61;;;5:2:-1;;;;30:1;27;20:12;10570:153:163;10630:12;:10;:12::i;:::-;10676:14;;-1:-1:-1;;;;;10692:22:163;;;10676:14;10692:22;;;:13;:22;;;;;;10653:62;;-1:-1:-1;;;;;10653:62:163;;10676:14;;;;10653:62;;;;;;;;;;;;;:8;;:22;;:62;;;;;;;;;;;:8;:62;;;5:2:-1;;;;30:1;27;20:12;12340:202:163;12423:12;:10;:12::i;:::-;12468:14;-1:-1:-1;;;;;12502:14:163;;;12517:7;:5;:7::i;:::-;12526:6;12502:31;;;;;;;;;;;;;-1:-1:-1;;;;;12502:31:163;-1:-1:-1;;;;;12502:31:163;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12502:31:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12502:31:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12502:31:163;12494:40;;;;;4786:210:170;4896:10;4871:4;4917:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4917:29:170;;;;;;;;;;4871:4;;4887:81;;4908:7;;4917:50;;4951:15;4917:50;:33;:50;:::i;16359:163:163:-;16421:12;16446:46;16464:10;16476:3;16481:6;16446:46;;;;;;;;;;;;:17;:46::i;9936:219::-;10072:75;10091:14;10107:5;;10072:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;10114:8:163;;-1:-1:-1;10124:7:163;;-1:-1:-1;99:1;-1:-1;10137:9:163;10072:18;:75::i;:::-;9936:219;;;;;;:::o;2430:37:165:-;;;-1:-1:-1;;;;;2430:37:165;;:::o;31693:318:163:-;31898:20;:18;:20::i;:::-;31929:28;448:1:165;31929:18:163;:28::i;:::-;31968:35;31975:12;31989:6;31997:5;31968:6;:35::i;45130:156::-;45189:12;:10;:12::i;:::-;45212:66;;;-1:-1:-1;;;;;45212:66:163;;45236:10;45212:66;;;;45248:9;45212:66;;;;45259:11;45212:66;;;;;;;;;;;;:8;;:23;;:66;;;;;-1:-1:-1;;45212:66:163;;;;;;;:8;:66;;;5:2:-1;;;;30:1;27;20:12;3883:385:163;4028:11;;-1:-1:-1;;;4028:11:163;;;;4027:12;4019:44;;;;;-1:-1:-1;;;;;4019:44:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;4074:14;:32;;-1:-1:-1;;;;;;4074:32:163;-1:-1:-1;;;;;4074:32:163;;;;;4140:24;;;;;;;;4156:1;4140:24;;;-1:-1:-1;4140:24:163;;;;;;;;;;;4117:20;:47;;-1:-1:-1;;4117:47:163;;;;-1:-1:-1;;4117:47:163;;;4175:20;:18;:20::i;:::-;-1:-1:-1;4206:12:163;:25;;-1:-1:-1;;;;;;;;;;;;4206:25:163;;;4221:10;4206:25;4242:18;-1:-1:-1;;;4242:18:163;;;3883:385::o;1357:438:58:-;1522:11;;-1:-1:-1;;;1522:11:58;;;;1521:12;1513:44;;;;;-1:-1:-1;;;;;1513:44:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:14;:32;;-1:-1:-1;;;;;;1568:32:58;-1:-1:-1;;;;;1568:32:58;;;;;1634:24;;;;;;;;1650:1;1634:24;;;-1:-1:-1;1634:24:58;;;;;;;;;;;1611:20;:47;;-1:-1:-1;;1611:47:58;;;;-1:-1:-1;;1611:47:58;;;1669:20;:18;:20::i;:::-;1700:12;:25;;-1:-1:-1;;;;;;;;;;;;1700:25:58;;;1715:10;1700:25;1736:18;-1:-1:-1;;;1736:18:58;;;1765:9;:22;-1:-1:-1;1357:438:58:o;2474:51:165:-;;;-1:-1:-1;;;;;2474:51:165;;:::o;2831:26::-;;;;;;;;;;;;;;;-1:-1:-1;;2831:26:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30666:336:163;30737:12;:10;:12::i;:::-;30760:20;:18;:20::i;:::-;30819:51;;-1:-1:-1;;;;;30819:51:163;;;;;;;;;;;;;;;30791:80;;30819:8;;:39;;30859:10;;;;30819:51;;;;30859:10;;;;30819:51;1:33:-1;99:1;81:16;;;74:27;30819:51:163;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;;-1:-1;30819:51:163;;-1:-1:-1;30819:51:163;;-1:-1:-1;;;30819:51:163;;;;;;;;5:2:-1;;;;30:1;27;20:12;30791:80:163;30882:8;:16;;-1:-1:-1;;30882:16:163;;;30978;;;;30893:5;;30978:16;30666:336;;:::o;1652:129:170:-;-1:-1:-1;;;;;1750:15:170;;;1724:7;1750:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1652:129::o;903:249:58:-;983:14;:32;;-1:-1:-1;;;;;;983:32:58;-1:-1:-1;;;;;983:32:58;;;;;1026:9;:20;;;1122:22;;;;;;;;;;;;;;;;;;;903:249;;:::o;3015:27:165:-;;;;;;;;;:::o;1803:94:58:-;1867:22;;;;;;;;;;;;;;;;;1803:94;:::o;2071:27:165:-;;;-1:-1:-1;;;;;2071:27:165;;:::o;34514:148:163:-;34588:21;540:1:165;34588:11:163;:21::i;:::-;34620:34;34628:10;34640:6;34648:5;;34620:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;34620:7:163;;-1:-1:-1;;;34620:34:163:i;19441:238::-;19553:60;19570:42;19586:5;19593:3;19598:6;19606:5;19570:15;:42::i;:::-;19553:16;:60::i;:::-;19632:38;19651:5;19658:3;19663:6;19632:18;:38::i;:::-;19624:47;;;;;46855:350;46999:17;:15;:17::i;:::-;47027:42;47043:5;47050:3;47055:6;47063:5;;47027:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;47027:15:163;;-1:-1:-1;;;47027:42:163:i;:::-;;47080:29;47090:5;47097:3;47102:6;47080:9;:29::i;:::-;47163:3;-1:-1:-1;;;;;47125:72:163;47156:5;-1:-1:-1;;;;;47125:72:163;;47144:10;47168:6;47176:5;;47183:13;;47125:72;;;;-1:-1:-1;;;;;47125:72:163;-1:-1:-1;;;;;47125:72:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;47125:72:163;;;;;;;;;;;-1:-1:-1;47125:72:163;;;;;1:33:-1;99:1;81:16;;;74:27;47125:72:163;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;47125:72:163;;;;-1:-1:-1;47125:72:163;;-1:-1:-1;;;;;;;;;47125:72:163;46855:350;;;;;;;:::o;49460:124::-;49525:12;:10;:12::i;:::-;49548:28;49567:8;49548:18;:28::i;:::-;49460:124;:::o;21556:229::-;21670:7;21697:80;21718:10;21730:3;21735:6;21743:10;21755:5;21770:1;21697:80;;;;;;;;;;;;:20;:80::i;:::-;21690:87;21556:229;-1:-1:-1;;;;;21556:229:163:o;48584:340::-;48632:12;:10;:12::i;:::-;48688:16;;:45;;;-1:-1:-1;;;;;48688:45:163;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;48688:16:163;;;;:27;;:45;;;;;;;;;;;;;:16;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;48688:45:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48688:45:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;48688:45:163;48655:14;:79;;-1:-1:-1;;;;;;48655:79:163;-1:-1:-1;;;;;48655:79:163;;;;;;48792:16;;:52;;;-1:-1:-1;;;;;48792:52:163;;48688:45;48792:52;;;;;;;;;;;;;;;;;;:16;;;;;:27;;:52;;;;;48688:45;48792:52;;;;;:16;:52;;;5:2:-1;;;;30:1;27;20:12;5:2;48792:52:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48792:52:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;48792:52:163;48745:21;:100;;-1:-1:-1;;;;;;48745:100:163;-1:-1:-1;;;;;48745:100:163;;;;;;48875:16;;;:40;;;-1:-1:-1;;;;;48875:40:163;;48792:52;48875:40;;;;;;;;;;;;;-1:-1:-1;;;;;48875:40:163;;;;;;:16;;;;;:27;;:40;;;;;48792:52;;48875:40;;;;;:16;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;48875:40:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48875:40:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;48875:40:163;48856:9;:60;;-1:-1:-1;;;;;;48856:60:163;-1:-1:-1;;;;;48856:60:163;;;;;;;;;48584:340::o;2348:25:165:-;;;;;;-1:-1:-1;;;;;2348:25:165;;:::o;24620:157:163:-;24681:34;24690:10;24702:9;24713:1;24681:8;:34::i;:::-;24731:38;;24758:10;;-1:-1:-1;;;;;24731:38:163;;;;;;;;24620:157;:::o;38388:566::-;38433:7;38453:34;497:1:165;38453:18:163;:34::i;:::-;38616:19;;;38638:1;38616:23;;;38594:45;;;38714:15;27:10:-1;;23:18;;;45:23;;-1:-1;38714:25:163;38735:3;38714:25;;;;;38795:13;:11;:13::i;:::-;38772:19;;;38750:42;;;;:21;:42;;;;;;;;;:58;;;;38842:19;;38863:9;;:45;;-1:-1:-1;;;;;38863:45:163;;679:66:165;38863:45:163;;;;;;38842:19;;38824:85;;-1:-1:-1;;;;;38863:9:163;;;;:31;;:45;;;;;38750:42;38863:45;;;;;;:9;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;38863:45:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38863:45:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38863:45:163;38824:85;;;;;;;;;;;38863:45;38824:85;;;-1:-1:-1;38927:19:163;;38388:566;:::o;48478:98::-;48554:14;;-1:-1:-1;;;;;48554:14:163;48478:98;:::o;764:898:151:-;1165:12;1162:1;1159;1146:32;1375:1;1372;1358:12;1355:1;1339:14;1334:3;1321:56;1452:14;1449:1;1446;1431:36;1488:6;1557:36;;;;1627:14;1624:1;1617:25;1557:36;1576:14;1573:1;1566:25;6601:73:163;6656:9;:7;:9::i;:::-;6648:18;;;;;6831:248:170;-1:-1:-1;;;;;6923:21:170;;6915:30;;;;;;-1:-1:-1;;;;;6963:19:170;;6955:28;;;;;;-1:-1:-1;;;;;6994:15:170;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7041:31;;;;;;;;;;;;;;;;;6831:248;;;:::o;5123:132:163:-;-1:-1:-1;;;;;5203:10:163;:22;5195:52;;;;;-1:-1:-1;;;;;5195:52:163;;;;;;;;;;;;;;;;;;;;;;;;;;;41943:546;42052:4;42058:7;42078:15;42104:12;42140:11;;42131:6;:20;;;;;;:25;42127:131;;42181:52;42198:34;42181:16;:52::i;:::-;42173:73;-1:-1:-1;42243:1:163;;-1:-1:-1;42173:73:163;;-1:-1:-1;;42173:73:163;42127:131;42289:8;:23;42313:7;:21;405:1:165;42313:21:163;;;;;;;;;;;;;;;42336:13;42351:5;42358:3;42363:6;42371:5;42378:15;;;;;;;;;;;42289:105;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;42289:105:163;-1:-1:-1;;;;;42289:105:163;;;;;;-1:-1:-1;;;;;42289:105:163;-1:-1:-1;;;;;42289:105:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;42289:105:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;42289:105:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;42289:105:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;42289:105:163;;;;;;;;-1:-1:-1;42289:105:163;-1:-1:-1;42412:8:163;:20;42289:105;;42451:3;42456:6;42464:16;42474:5;42464:9;:16::i;:::-;42412:69;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;42412:69:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:2:-1;;;;30:1;27;20:12;5:2;42412:69:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;42412:69:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;42412:69:163;;;;;;;;;;;-1:-1:-1;41943:546:163;-1:-1:-1;;;;;;;41943:546:163:o;50147:122::-;-1:-1:-1;;;;;50239:13:163;-1:-1:-1;;;50238:23:163;;50147:122::o;370:121:38:-;423:4;473:7;467:14;;;;;;;;458:4;452:30;447:36;;;370:121;-1:-1:-1;;370:121:38:o;6764:103:163:-;6831:27;6840:10;6852:5;6831:8;:27::i;:::-;6823:36;;;;;5514:126;-1:-1:-1;;;;;5591:21:163;;5583:49;;;;;-1:-1:-1;;;;;5583:49:163;;;;;;;;;;;;;;;;;;;;;;;;;;;27130:212;27248:29;27266:10;27248:17;:29::i;:::-;27288:46;27305:5;27312:9;27323:10;27288:16;:46::i;35491:373::-;35732:29;35740:5;35747:6;35755:5;35732:7;:29::i;:::-;35820:5;-1:-1:-1;;;;;35777:79:163;35809:9;-1:-1:-1;;;;;35777:79:163;35797:10;35777:79;35827:6;35835:5;35842:13;35777:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;35777:79:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35777:79:163;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;35777:79:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35491:373;;;;;;:::o;17594:327::-;17705:60;17722:42;17738:5;17745:3;17750:6;17758:5;17722:15;:42::i;17705:60::-;17884:29;17894:5;17901:3;17906:6;17884:9;:29::i;6186:119::-;6266:10;;6238:59;;6266:10;;;-1:-1:-1;;;;;6266:10:163;6252;:24;:44;;;;;6280:16;:14;:16::i;:::-;6238:13;:59::i;36988:279::-;37079:13;37116:49;37132:5;37147:1;37151:6;37159:5;37116:15;:49::i;:::-;37105:60;;37176:20;37182:5;37189:6;37176:5;:20::i;:::-;37233:10;-1:-1:-1;;;;;37212:47:163;37229:1;-1:-1:-1;;;;;37212:47:163;;37245:6;37253:5;37212:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;37212:47:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36988:279;;;;;:::o;20145:898::-;405:1:165;20268:24:163;20328:21;;;:7;:21;;;;;20305:44;;20328:21;20305:44;;;;;;;;;;;;;;;:20;;:44;;20328:21;20305:44;;;20328:21;20305:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20305:44:163;;;;;;;;;;;;;;;;;;;;;;;20360:14;20390:9;20402:1;20390:13;;20385:651;20409:3;:10;20405:1;:14;20385:651;;;20467:3;20471:1;20467:6;;;;;;;;;;;;;;-1:-1:-1;;;;;20450:45:163;;20496:10;20508:12;20522:18;20450:91;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20450:91:163;-1:-1:-1;;;;;20450:91:163;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20450:91:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20450:91:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20450:91:163;;-1:-1:-1;;;;;;20656:22:163;;20652:373;;;20712:16;20703:6;:25;:35;;;-1:-1:-1;20732:6:163;;20703:35;20699:87;;;20780:6;20761:25;;20699:87;20652:373;;;20955:6;20936:16;:25;20932:77;;;21003:6;20984:25;;20932:77;20421:3;;20385:651;;;;20145:898;;;;;;;:::o;1439:145:168:-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;6009:99:163;6072:8;;;;6064:36;;;;;-1:-1:-1;;;;;6064:36:163;;;;;;;;;;;;;;;;;;;;;;;;;;;4965:150;5049:7;:5;:7::i;:::-;-1:-1:-1;;;;;5035:21:163;:10;-1:-1:-1;;;;;5035:21:163;;5031:76;;5079:27;5088:10;5100:5;5079:8;:27::i;32019:386::-;32222:74;32239:56;32263:1;32267:12;32281:6;32289:5;32239:15;:56::i;32222:74::-;32307:27;32313:12;32327:6;32307:5;:27::i;:::-;32369:12;-1:-1:-1;;;;;32350:47:163;32357:10;-1:-1:-1;;;;;32350:47:163;;32383:6;32391:5;32350:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;32350:47:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32019:386;;;:::o;5890:111::-;5963:7;5955:38;;;;;-1:-1:-1;;;;;5955:38:163;;;;;;;;;;;;;;;;;;;;;;;;;;;21793:1217;22059:19;22096:29;22114:10;22096:17;:29::i;:::-;22466:35;22504:37;-1:-1:-1;;;;;22534:3:163;22539:1;22504:21;:37::i;:::-;22466:75;;22552:44;22570:5;22577:3;22582:6;22590:5;22552:17;:44::i;:::-;22721:34;22758:37;-1:-1:-1;;;;;22788:3:163;22793:1;22758:21;:37::i;:::-;22721:74;;22821:81;22838:27;22867:26;22895:6;22821:16;:81::i;:::-;22806:96;;22968:3;-1:-1:-1;;;;;22918:84:163;22961:5;-1:-1:-1;;;;;22918:84:163;22938:10;22918:84;22950:9;22973:6;22981:5;22988:13;22918:84;;;;-1:-1:-1;;;;;22918:84:163;-1:-1:-1;;;;;22918:84:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;22918:84:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22918:84:163;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;22918:84:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21793:1217;;;;;;;;;;;:::o;27636:1044::-;993:13:173;:18;;1010:1;993:18;;;;;27755:13:163;;28483:40;28504:5;28511:3;28516:6;28483:20;:40::i;:::-;28545:43;28562:5;28569:3;28574:6;28582:5;28545:16;:43::i;:::-;28534:54;;28599:32;28625:5;28599:25;:32::i;:::-;28642:30;28668:3;28642:25;:30::i;:::-;1102:13:173;;1086:12;:29;1078:38;;;;;;27636:1044:163;;;;;;;:::o;5773:109::-;5846:9;5838:36;;;;;-1:-1:-1;;;;;5838:36:163;;;;;;;;;;;;;;;;;;;;;;;;;;;7468:179:170;7538:21;7544:7;7553:5;7538;:21::i;:::-;-1:-1:-1;;;;;7599:17:170;;;;;;:8;:17;;;;;;;;7587:10;7599:29;;;;;;;;;7569:71;;7578:7;;7599:40;;7633:5;7599:40;:33;:40;:::i;7569:71::-;7468:179;;:::o;23018:430:163:-;23129:19;23373:6;23336:33;:13;23354:14;23336:33;:17;:33;:::i;:::-;:43;:63;;-1:-1:-1;;;;;23336:63:163;;;-1:-1:-1;;;;;23336:63:163;23322:77;23018:430;-1:-1:-1;;;;23018:430:163:o;1211:145:168:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:168;;;1211:145::o;34670:208:163:-;34819:51;34834:35;34848:5;34855:6;34863:5;34834:13;:35::i;5648:117::-;5725:11;5717:40;;;;;-1:-1:-1;;;;;5717:40:163;;;;;;;;;;;;;;;;;;;;;;;;;;;3329:224:170;3408:4;3424:26;3434:4;3440:2;3444:5;3424:9;:26::i;:::-;-1:-1:-1;;;;;3487:14:170;;;;;;:8;:14;;;;;;;;3475:10;3487:26;;;;;;;;;3460:65;;3469:4;;3487:37;;3518:5;3487:37;:30;:37;:::i;5215:256::-;-1:-1:-1;;;;;5302:16:170;;5294:25;;;;;;-1:-1:-1;;;;;5348:15:170;;:9;:15;;;;;;;;;;;:26;;5368:5;5348:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5330:15:170;;;:9;:15;;;;;;;;;;;:44;;;;5400:13;;;;;;;:24;;5418:5;5400:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5384:13:170;;;:9;:13;;;;;;;;;;;;:40;;;;5439:25;;;;;;;5384:13;;5439:25;;;;;;;;;;;;;5215:256;;;:::o;49734:187:163:-;-1:-1:-1;;;;;49808:22:163;;49800:31;;;;;;49868:6;;49847:38;;-1:-1:-1;;;;;49847:38:163;;;;49868:6;;49847:38;;49868:6;;49847:38;49896:6;:17;;-1:-1:-1;;;;;;49896:17:163;-1:-1:-1;;;;;49896:17:163;;;;;;;;;;49734:187::o;5263:243::-;5368:130;-1:-1:-1;;5396:27:163;5406:5;5413:9;5396;:27::i;:::-;:39;:91;;;-1:-1:-1;;;;;;5439:25:163;;;;;;;:18;:25;;;;;;;;:37;;;;;;;;:48;;;;;;;;;;;;6313:112;6387:11;6379:38;;;;;-1:-1:-1;;;;;6379:38:163;;;;;;;;;;;;;;;;;;;;;;;;;;;6303:263:170;-1:-1:-1;;;;;6377:21:170;;6369:30;;;;;;6425:12;;:23;;6442:5;6425:23;:16;:23;:::i;:::-;6410:12;:38;-1:-1:-1;;;;;6479:18:170;;:9;:18;;;;;;;;;;;:29;;6502:5;6479:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6458:18:170;;:9;:18;;;;;;;;;;;:50;;;;6523:36;;;;;;;6458:9;;6523:36;;;;;;;;;;;6303:263;;:::o;5814:::-;-1:-1:-1;;;;;5888:21:170;;5880:30;;;;;;5936:12;;:23;;5953:5;5936:23;:16;:23;:::i;:::-;5921:12;:38;-1:-1:-1;;;;;5990:18:170;;:9;:18;;;;;;;;;;;:29;;6013:5;5990:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;5969:18:170;;:9;:18;;;;;;;;;;;:50;;;;6034:36;;;;;;;5969:18;;:9;;6034:36;;;;;;;;;;5814:263;;:::o;14980:222:163:-;15088:8;:28;15117:11;;15130:5;15137:3;15142:6;15150:14;15160:3;15150:9;:14::i;:::-;15166:16;15176:5;15166:9;:16::i;:::-;15184:9;;15088:106;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15088:106:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15184:9;;;;15088:106;;;;;;;;;;;;;;;;;;;;;;;5:2:-1;;;;30:1;27;20:12;5:2;15088:106:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15088:106:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15088:106:163;15074:11;:120;-1:-1:-1;;;14980:222:163:o;29065:1414::-;29267:4;29242:6;6945:11;;6936:6;:20;;;;;;:25;6928:57;;;;;-1:-1:-1;;;;;6928:57:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;29294:15;;;;;;;29289:1160;;405:1:165;29326:14:163;29462:21;;;:7;:21;;;:28;29326:14;;;;;;;29505:860;29529:8;29525:1;:12;29505:860;;;405:1:165;29572:21:163;;:7;:21;;;:24;;29594:1;;29572:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29572:24:163;29620:21;;;:13;:21;;;;;;;:32;;;29572:24;;-1:-1:-1;29620:32:163;-1:-1:-1;;;29620:32:163;;;;29615:735;;29855:29;29904:6;-1:-1:-1;;;;;29887:40:163;;29928:5;29935:3;29940:6;29948:5;29887:67;;;;;;;;;;;;;-1:-1:-1;;;;;29887:67:163;-1:-1:-1;;;;;29887:67:163;;;;;;-1:-1:-1;;;;;29887:67:163;-1:-1:-1;;;;;29887:67:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;29887:67:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29887:67:163;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29887:67:163;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;29887:67:163;;-1:-1:-1;29990:31:163;29981:5;:40;;;;;;;;;29977:354;;;30062:4;30050:16;;29977:354;;;30109:29;30100:5;:38;;;;;;;;;30096:235;;;30177:4;30167:14;;30096:235;;;30224:35;30215:5;:44;;;;;;;;;30211:120;;;30303:4;30288:19;;30211:120;29615:735;;29539:3;;29505:860;;;;30386:12;:51;;30409:9;:27;;30429:7;30409:27;;;30421:5;30409:27;30386:51;;;30401:4;30386:51;30379:58;;;;;;;;;29289:1160;-1:-1:-1;30466:5:163;;29065:1414;-1:-1:-1;;;;;29065:1414:163:o;15982:182::-;-1:-1:-1;;;;;16083:29:163;;;;;;:18;:29;;;;;16056:8;;:26;;16114:20;16102:9;16114;:20::i;:::-;16136:19;;16056:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;572:1665:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;572:1665:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;572:1665:58;;;-1:-1:-1;572:1665:58;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.8;\r\n\r\nimport \"../tokens/SecurityToken.sol\";\r\n\r\n/**\r\n * @title Security Token contract (mock)\r\n * @notice SecurityToken is an ERC1400 token with added capabilities:\r\n * @notice - Implements the ERC1400 Interface\r\n * @notice - Transfers are restricted\r\n * @notice - Modules can be attached to it to control its behaviour\r\n * @notice - ST should not be deployed directly, but rather the SecurityTokenRegistry should be used\r\n * @notice - ST does not inherit from ISecurityToken due to:\r\n * @notice - https://github.com/ethereum/solidity/issues/4847\r\n */\r\ncontract MockSecurityTokenLogic is SecurityToken {\r\n\r\n    event UpgradeEvent(uint256 _upgrade);\r\n    uint256 public someValue;\r\n\r\n    /**\r\n     * @notice Initialization function\r\n     * @dev Expected to be called atomically with the proxy being created, by the owner of the token\r\n     * @dev Can only be called once\r\n     */\r\n    function upgrade(address _getterDelegate, uint256 _upgrade) external {\r\n        getterDelegate = _getterDelegate;\r\n        someValue = _upgrade;\r\n        //securityTokenVersion = SemanticVersion(3, 1, 0);\r\n        emit UpgradeEvent(_upgrade);\r\n    }\r\n\r\n    /**\r\n     * @notice Initialization function\r\n     * @dev Expected to be called atomically with the proxy being created, by the owner of the token\r\n     * @dev Can only be called once\r\n     */\r\n    function initialize(address _getterDelegate, uint256 _someValue) public {\r\n        //Expected to be called atomically with the proxy being created\r\n        require(!initialized, \"Already initialized\");\r\n        getterDelegate = _getterDelegate;\r\n        securityTokenVersion = SemanticVersion(3, 0, 0);\r\n        updateFromRegistry();\r\n        tokenFactory = msg.sender;\r\n        initialized = true;\r\n        someValue = _someValue;\r\n    }\r\n\r\n    function newFunction(uint256 _upgrade) external {\r\n        emit UpgradeEvent(_upgrade);\r\n    }\r\n\r\n    //To reduce bytecode size\r\n    function addModuleWithLabel(\r\n        address /* _moduleFactory */,\r\n        bytes memory /* _data */,\r\n        uint256 /* _maxCost */,\r\n        uint256 /* _budget */,\r\n        bytes32 /* _label */,\r\n        bool /* _archived */\r\n    )\r\n        public\r\n    {\r\n        emit UpgradeEvent(0);\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:/mspace/polymath-core/contracts/mocks/MockSecurityTokenLogic.sol",
  "ast": {
    "absolutePath": "/C/mspace/polymath-core/contracts/mocks/MockSecurityTokenLogic.sol",
    "exportedSymbols": {
      "MockSecurityTokenLogic": [
        22236
      ]
    },
    "id": 22237,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22134,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:58"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/tokens/SecurityToken.sol",
        "file": "../tokens/SecurityToken.sol",
        "id": 22135,
        "nodeType": "ImportDirective",
        "scope": 22237,
        "sourceUnit": 57573,
        "src": "26:37:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22136,
              "name": "SecurityToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 57572,
              "src": "607:13:58",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityToken_$57572",
                "typeString": "contract SecurityToken"
              }
            },
            "id": 22137,
            "nodeType": "InheritanceSpecifier",
            "src": "607:13:58"
          }
        ],
        "contractDependencies": [
          16338,
          16434,
          16467,
          16525,
          52666,
          57572,
          57808,
          58578,
          58647,
          58697
        ],
        "contractKind": "contract",
        "documentation": "@title Security Token contract (mock)\r\n@notice SecurityToken is an ERC1400 token with added capabilities:\r\n@notice - Implements the ERC1400 Interface\r\n@notice - Transfers are restricted\r\n@notice - Modules can be attached to it to control its behaviour\r\n@notice - ST should not be deployed directly, but rather the SecurityTokenRegistry should be used\r\n@notice - ST does not inherit from ISecurityToken due to:\r\n@notice - https://github.com/ethereum/solidity/issues/4847\r",
        "fullyImplemented": true,
        "id": 22236,
        "linearizedBaseContracts": [
          22236,
          57572,
          52666,
          16338,
          16525,
          16467,
          16434,
          57808,
          58697,
          58578,
          58647
        ],
        "name": "MockSecurityTokenLogic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 22141,
            "name": "UpgradeEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22139,
                  "indexed": false,
                  "name": "_upgrade",
                  "nodeType": "VariableDeclaration",
                  "scope": 22141,
                  "src": "649:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "648:18:58"
            },
            "src": "630:37:58"
          },
          {
            "constant": false,
            "id": 22143,
            "name": "someValue",
            "nodeType": "VariableDeclaration",
            "scope": 22236,
            "src": "673:24:58",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22142,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "673:7:58",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22162,
              "nodeType": "Block",
              "src": "972:180:58",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22150,
                      "name": "getterDelegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57742,
                      "src": "983:14:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 22151,
                      "name": "_getterDelegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22145,
                      "src": "1000:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "983:32:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 22153,
                  "nodeType": "ExpressionStatement",
                  "src": "983:32:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22154,
                      "name": "someValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22143,
                      "src": "1026:9:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 22155,
                      "name": "_upgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22147,
                      "src": "1038:8:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1026:20:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22157,
                  "nodeType": "ExpressionStatement",
                  "src": "1026:20:58"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22159,
                        "name": "_upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22147,
                        "src": "1135:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22158,
                      "name": "UpgradeEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22141,
                      "src": "1122:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 22160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1122:22:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22161,
                  "nodeType": "EmitStatement",
                  "src": "1117:27:58"
                }
              ]
            },
            "documentation": "@notice Initialization function\r\n@dev Expected to be called atomically with the proxy being created, by the owner of the token\r\n@dev Can only be called once\r",
            "id": 22163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upgrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22145,
                  "name": "_getterDelegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 22163,
                  "src": "920:23:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22147,
                  "name": "_upgrade",
                  "nodeType": "VariableDeclaration",
                  "scope": 22163,
                  "src": "945:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:43:58"
            },
            "returnParameters": {
              "id": 22149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "972:0:58"
            },
            "scope": 22236,
            "src": "903:249:58",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22204,
              "nodeType": "Block",
              "src": "1429:366:58",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1521:12:58",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 22171,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57724,
                          "src": "1522:11:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 22173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1535:21:58",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "id": 22170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "1513:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1513:44:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22175,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:44:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22176,
                      "name": "getterDelegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57742,
                      "src": "1568:14:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 22177,
                      "name": "_getterDelegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22165,
                      "src": "1585:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1568:32:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 22179,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:32:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22180,
                      "name": "securityTokenVersion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57768,
                      "src": "1611:20:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SemanticVersion_$57694_storage",
                        "typeString": "struct SecurityTokenStorage.SemanticVersion storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 22182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1650:1:58",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 22183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1653:1:58",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 22184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1656:1:58",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 22181,
                        "name": "SemanticVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57694,
                        "src": "1634:15:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SemanticVersion_$57694_storage_ptr_$",
                          "typeString": "type(struct SecurityTokenStorage.SemanticVersion storage pointer)"
                        }
                      },
                      "id": 22185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1634:24:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SemanticVersion_$57694_memory",
                        "typeString": "struct SecurityTokenStorage.SemanticVersion memory"
                      }
                    },
                    "src": "1611:47:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SemanticVersion_$57694_storage",
                      "typeString": "struct SecurityTokenStorage.SemanticVersion storage ref"
                    }
                  },
                  "id": 22187,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:47:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22188,
                      "name": "updateFromRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57501,
                      "src": "1669:18:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 22189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:20:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22190,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:20:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22191,
                      "name": "tokenFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57722,
                      "src": "1700:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 22192,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58712,
                        "src": "1715:3:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 22193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1715:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1700:25:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 22195,
                  "nodeType": "ExpressionStatement",
                  "src": "1700:25:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22196,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57724,
                      "src": "1736:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 22197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1750:4:58",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1736:18:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22199,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:18:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22200,
                      "name": "someValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22143,
                      "src": "1765:9:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 22201,
                      "name": "_someValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22167,
                      "src": "1777:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1765:22:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22203,
                  "nodeType": "ExpressionStatement",
                  "src": "1765:22:58"
                }
              ]
            },
            "documentation": "@notice Initialization function\r\n@dev Expected to be called atomically with the proxy being created, by the owner of the token\r\n@dev Can only be called once\r",
            "id": 22205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22165,
                  "name": "_getterDelegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 22205,
                  "src": "1377:23:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22167,
                  "name": "_someValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 22205,
                  "src": "1402:18:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1376:45:58"
            },
            "returnParameters": {
              "id": 22169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1429:0:58"
            },
            "scope": 22236,
            "src": "1357:438:58",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22214,
              "nodeType": "Block",
              "src": "1851:46:58",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22211,
                        "name": "_upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22207,
                        "src": "1880:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22210,
                      "name": "UpgradeEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22141,
                      "src": "1867:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 22212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:22:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22213,
                  "nodeType": "EmitStatement",
                  "src": "1862:27:58"
                }
              ]
            },
            "documentation": null,
            "id": 22215,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newFunction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22207,
                  "name": "_upgrade",
                  "nodeType": "VariableDeclaration",
                  "scope": 22215,
                  "src": "1824:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1824:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1823:18:58"
            },
            "returnParameters": {
              "id": 22209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1851:0:58"
            },
            "scope": 22236,
            "src": "1803:94:58",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22234,
              "nodeType": "Block",
              "src": "2193:39:58",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 22231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2222:1:58",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 22230,
                      "name": "UpgradeEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22141,
                      "src": "2209:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 22232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2209:15:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22233,
                  "nodeType": "EmitStatement",
                  "src": "2204:20:58"
                }
              ]
            },
            "documentation": null,
            "id": 22235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addModuleWithLabel",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22217,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22235,
                  "src": "1974:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22219,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22235,
                  "src": "2013:12:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22218,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22221,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22235,
                  "src": "2048:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2048:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22223,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22235,
                  "src": "2081:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2081:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22225,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22235,
                  "src": "2113:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22224,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2113:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22227,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22235,
                  "src": "2144:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22226,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2144:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1963:208:58"
            },
            "returnParameters": {
              "id": 22229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2193:0:58"
            },
            "scope": 22236,
            "src": "1936:296:58",
            "stateMutability": "nonpayable",
            "superFunction": 55504,
            "visibility": "public"
          }
        ],
        "scope": 22237,
        "src": "572:1665:58"
      }
    ],
    "src": "0:2239:58"
  },
  "legacyAST": {
    "absolutePath": "/C/mspace/polymath-core/contracts/mocks/MockSecurityTokenLogic.sol",
    "exportedSymbols": {
      "MockSecurityTokenLogic": [
        22236
      ]
    },
    "id": 22237,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22134,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:58"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/tokens/SecurityToken.sol",
        "file": "../tokens/SecurityToken.sol",
        "id": 22135,
        "nodeType": "ImportDirective",
        "scope": 22237,
        "sourceUnit": 57573,
        "src": "26:37:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22136,
              "name": "SecurityToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 57572,
              "src": "607:13:58",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityToken_$57572",
                "typeString": "contract SecurityToken"
              }
            },
            "id": 22137,
            "nodeType": "InheritanceSpecifier",
            "src": "607:13:58"
          }
        ],
        "contractDependencies": [
          16338,
          16434,
          16467,
          16525,
          52666,
          57572,
          57808,
          58578,
          58647,
          58697
        ],
        "contractKind": "contract",
        "documentation": "@title Security Token contract (mock)\r\n@notice SecurityToken is an ERC1400 token with added capabilities:\r\n@notice - Implements the ERC1400 Interface\r\n@notice - Transfers are restricted\r\n@notice - Modules can be attached to it to control its behaviour\r\n@notice - ST should not be deployed directly, but rather the SecurityTokenRegistry should be used\r\n@notice - ST does not inherit from ISecurityToken due to:\r\n@notice - https://github.com/ethereum/solidity/issues/4847\r",
        "fullyImplemented": true,
        "id": 22236,
        "linearizedBaseContracts": [
          22236,
          57572,
          52666,
          16338,
          16525,
          16467,
          16434,
          57808,
          58697,
          58578,
          58647
        ],
        "name": "MockSecurityTokenLogic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 22141,
            "name": "UpgradeEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22139,
                  "indexed": false,
                  "name": "_upgrade",
                  "nodeType": "VariableDeclaration",
                  "scope": 22141,
                  "src": "649:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "648:18:58"
            },
            "src": "630:37:58"
          },
          {
            "constant": false,
            "id": 22143,
            "name": "someValue",
            "nodeType": "VariableDeclaration",
            "scope": 22236,
            "src": "673:24:58",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22142,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "673:7:58",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22162,
              "nodeType": "Block",
              "src": "972:180:58",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22150,
                      "name": "getterDelegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57742,
                      "src": "983:14:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 22151,
                      "name": "_getterDelegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22145,
                      "src": "1000:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "983:32:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 22153,
                  "nodeType": "ExpressionStatement",
                  "src": "983:32:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22154,
                      "name": "someValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22143,
                      "src": "1026:9:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 22155,
                      "name": "_upgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22147,
                      "src": "1038:8:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1026:20:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22157,
                  "nodeType": "ExpressionStatement",
                  "src": "1026:20:58"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22159,
                        "name": "_upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22147,
                        "src": "1135:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22158,
                      "name": "UpgradeEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22141,
                      "src": "1122:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 22160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1122:22:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22161,
                  "nodeType": "EmitStatement",
                  "src": "1117:27:58"
                }
              ]
            },
            "documentation": "@notice Initialization function\r\n@dev Expected to be called atomically with the proxy being created, by the owner of the token\r\n@dev Can only be called once\r",
            "id": 22163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upgrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22145,
                  "name": "_getterDelegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 22163,
                  "src": "920:23:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22147,
                  "name": "_upgrade",
                  "nodeType": "VariableDeclaration",
                  "scope": 22163,
                  "src": "945:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:43:58"
            },
            "returnParameters": {
              "id": 22149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "972:0:58"
            },
            "scope": 22236,
            "src": "903:249:58",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22204,
              "nodeType": "Block",
              "src": "1429:366:58",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1521:12:58",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 22171,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57724,
                          "src": "1522:11:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 22173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1535:21:58",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "id": 22170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "1513:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1513:44:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22175,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:44:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22176,
                      "name": "getterDelegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57742,
                      "src": "1568:14:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 22177,
                      "name": "_getterDelegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22165,
                      "src": "1585:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1568:32:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 22179,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:32:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22180,
                      "name": "securityTokenVersion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57768,
                      "src": "1611:20:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SemanticVersion_$57694_storage",
                        "typeString": "struct SecurityTokenStorage.SemanticVersion storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 22182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1650:1:58",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 22183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1653:1:58",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 22184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1656:1:58",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 22181,
                        "name": "SemanticVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57694,
                        "src": "1634:15:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SemanticVersion_$57694_storage_ptr_$",
                          "typeString": "type(struct SecurityTokenStorage.SemanticVersion storage pointer)"
                        }
                      },
                      "id": 22185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1634:24:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SemanticVersion_$57694_memory",
                        "typeString": "struct SecurityTokenStorage.SemanticVersion memory"
                      }
                    },
                    "src": "1611:47:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SemanticVersion_$57694_storage",
                      "typeString": "struct SecurityTokenStorage.SemanticVersion storage ref"
                    }
                  },
                  "id": 22187,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:47:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22188,
                      "name": "updateFromRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57501,
                      "src": "1669:18:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 22189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:20:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22190,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:20:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22191,
                      "name": "tokenFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57722,
                      "src": "1700:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 22192,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58712,
                        "src": "1715:3:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 22193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1715:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1700:25:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 22195,
                  "nodeType": "ExpressionStatement",
                  "src": "1700:25:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22196,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57724,
                      "src": "1736:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 22197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1750:4:58",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1736:18:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22199,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:18:58"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22200,
                      "name": "someValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22143,
                      "src": "1765:9:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 22201,
                      "name": "_someValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22167,
                      "src": "1777:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1765:22:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22203,
                  "nodeType": "ExpressionStatement",
                  "src": "1765:22:58"
                }
              ]
            },
            "documentation": "@notice Initialization function\r\n@dev Expected to be called atomically with the proxy being created, by the owner of the token\r\n@dev Can only be called once\r",
            "id": 22205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22165,
                  "name": "_getterDelegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 22205,
                  "src": "1377:23:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22167,
                  "name": "_someValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 22205,
                  "src": "1402:18:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1376:45:58"
            },
            "returnParameters": {
              "id": 22169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1429:0:58"
            },
            "scope": 22236,
            "src": "1357:438:58",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22214,
              "nodeType": "Block",
              "src": "1851:46:58",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22211,
                        "name": "_upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22207,
                        "src": "1880:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22210,
                      "name": "UpgradeEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22141,
                      "src": "1867:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 22212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:22:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22213,
                  "nodeType": "EmitStatement",
                  "src": "1862:27:58"
                }
              ]
            },
            "documentation": null,
            "id": 22215,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newFunction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22207,
                  "name": "_upgrade",
                  "nodeType": "VariableDeclaration",
                  "scope": 22215,
                  "src": "1824:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1824:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1823:18:58"
            },
            "returnParameters": {
              "id": 22209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1851:0:58"
            },
            "scope": 22236,
            "src": "1803:94:58",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22234,
              "nodeType": "Block",
              "src": "2193:39:58",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 22231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2222:1:58",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 22230,
                      "name": "UpgradeEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22141,
                      "src": "2209:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 22232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2209:15:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22233,
                  "nodeType": "EmitStatement",
                  "src": "2204:20:58"
                }
              ]
            },
            "documentation": null,
            "id": 22235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addModuleWithLabel",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22217,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22235,
                  "src": "1974:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22219,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22235,
                  "src": "2013:12:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22218,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22221,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22235,
                  "src": "2048:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2048:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22223,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22235,
                  "src": "2081:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2081:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22225,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22235,
                  "src": "2113:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22224,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2113:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22227,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22235,
                  "src": "2144:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22226,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2144:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1963:208:58"
            },
            "returnParameters": {
              "id": 22229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2193:0:58"
            },
            "scope": 22236,
            "src": "1936:296:58",
            "stateMutability": "nonpayable",
            "superFunction": 55504,
            "visibility": "public"
          }
        ],
        "scope": 22237,
        "src": "572:1665:58"
      }
    ],
    "src": "0:2239:58"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xedc6007cc44783a48ceb845386592c8d22e6e21f3acd887104ba49340ae8cc5d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_types",
              "type": "uint8[]"
            },
            {
              "indexed": false,
              "name": "_module",
              "type": "address"
            }
          ],
          "name": "ModuleUpgraded",
          "type": "event",
          "signature": "0xedc6007cc44783a48ceb845386592c8d22e6e21f3acd887104ba49340ae8cc5d"
        },
        "0x78914da53c30c0667830d562877caed5c20adc645b8557fa64336c22a9b8ece6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_types",
              "type": "uint8[]"
            },
            {
              "indexed": false,
              "name": "_module",
              "type": "address"
            }
          ],
          "name": "ModuleArchived",
          "type": "event",
          "signature": "0x78914da53c30c0667830d562877caed5c20adc645b8557fa64336c22a9b8ece6"
        },
        "0xe69e438aa3b4b943ac4c807820403a6e5815b8fbb7fccfac629fce87ff6d430d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_types",
              "type": "uint8[]"
            },
            {
              "indexed": false,
              "name": "_module",
              "type": "address"
            }
          ],
          "name": "ModuleUnarchived",
          "type": "event",
          "signature": "0xe69e438aa3b4b943ac4c807820403a6e5815b8fbb7fccfac629fce87ff6d430d"
        },
        "0xf4e9f735975718dce0ac83fb73f88a1b19a48186af0f6348c04c6229eb4b86a0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_types",
              "type": "uint8[]"
            },
            {
              "indexed": false,
              "name": "_module",
              "type": "address"
            }
          ],
          "name": "ModuleRemoved",
          "type": "event",
          "signature": "0xf4e9f735975718dce0ac83fb73f88a1b19a48186af0f6348c04c6229eb4b86a0"
        },
        "0xa00a1c33ebb7433724919cb1059328c16265f935ef84a13442045da3e81c0ccc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_moduleTypes",
              "type": "uint8[]"
            },
            {
              "indexed": false,
              "name": "_module",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_oldBudget",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_budget",
              "type": "uint256"
            }
          ],
          "name": "ModuleBudgetChanged",
          "type": "event",
          "signature": "0xa00a1c33ebb7433724919cb1059328c16265f935ef84a13442045da3e81c0ccc"
        },
        "0xb4c22d60cd550a815744f04e3ff5278bf19684565ee00e2b084041b6024bd6f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_name",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "_uri",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_documentHash",
              "type": "bytes32"
            }
          ],
          "name": "DocumentUpdated",
          "type": "event",
          "signature": "0xb4c22d60cd550a815744f04e3ff5278bf19684565ee00e2b084041b6024bd6f6"
        },
        "0x3d9bba27d3e360d8c80645beed7e991454a8271bf6f269a24f7782be0f0d0654": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_name",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "_uri",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_documentHash",
              "type": "bytes32"
            }
          ],
          "name": "DocumentRemoved",
          "type": "event",
          "signature": "0x3d9bba27d3e360d8c80645beed7e991454a8271bf6f269a24f7782be0f0d0654"
        }
      },
      "links": {
        "TokenLib": "0x7F6d9eAd07394807D4C3d490eb593016BFe37241"
      }
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-05T22:53:44.984Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "archiveModule(address)": {
        "params": {
          "_module": "address of module to archive\r"
        }
      },
      "authorizeOperator(address)": {
        "params": {
          "_operator": "An address which is being authorised.\r"
        }
      },
      "authorizeOperatorByPartition(bytes32,address)": {
        "params": {
          "_operator": "An address which is being authorised\r",
          "_partition": "The partition to which the operator is authorised\r"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "balanceOfByPartition(bytes32,address)": {
        "params": {
          "_partition": "Partition which differentiate the tokens.\r",
          "_tokenHolder": "Whom balance need to queried\r"
        },
        "return": "Amount of tokens as per the given partitions\r"
      },
      "canTransfer(address,uint256,bytes)": {
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r",
          "_to": "address The address which you want to transfer to\r",
          "_value": "uint256 the amount of tokens to be transferred\r"
        },
        "return": "byte Ethereum status code (ESC)\rbytes32 Application specific reason code\r"
      },
      "canTransferByPartition(address,address,bytes32,uint256,bytes)": {
        "params": {
          "_data": "Additional data attached to the transfer of tokens\r",
          "_from": "The address from whom the tokens get transferred.\r",
          "_partition": "The partition from which to transfer tokens\r",
          "_to": "The address to which to transfer tokens to.\r",
          "_value": "The amount of tokens to transfer from `_partition`\r"
        },
        "return": "ESC (Ethereum Status Code) following the EIP-1066 standard\rApplication specific reason codes with additional details\rThe partition to which the transferred tokens were allocated for the _to address\r"
      },
      "canTransferFrom(address,address,uint256,bytes)": {
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r",
          "_from": "address The address which you want to send tokens from\r",
          "_to": "address The address which you want to transfer to\r",
          "_value": "uint256 the amount of tokens to be transferred\r"
        },
        "return": "byte Ethereum status code (ESC)\rbytes32 Application specific reason code\r"
      },
      "changeDataStore(address)": {
        "params": {
          "_dataStore": "Address of the token data store\r"
        }
      },
      "changeGranularity(uint256)": {
        "params": {
          "_granularity": "granularity level of the token\r"
        }
      },
      "changeModuleBudget(address,uint256,bool)": {
        "params": {
          "_change": "change in allowance\r",
          "_increase": "true if budget has to be increased, false if decrease\r",
          "_module": "module address\r"
        }
      },
      "changeName(string)": {
        "params": {
          "_name": "new name of the token\r"
        }
      },
      "changeTreasuryWallet(address)": {
        "params": {
          "_wallet": "Ethereum address of the treasury wallet\r"
        }
      },
      "controllerRedeem(address,uint256,bytes,bytes)": {
        "details": "This function can only be executed by the `controller` address.\r",
        "params": {
          "_data": "data to validate the transfer. (It is not used in this reference implementation\r because use of `_data` parameter is implementation specific).\r",
          "_operatorData": "data attached to the transfer by controller to emit in event. (It is more like a reason string\r for calling this function (aka force transfer) which provides the transparency on-chain).\r",
          "_tokenHolder": "The account whose tokens will be redeemed.\r",
          "_value": "uint256 the amount of tokens need to be redeemed.\r"
        }
      },
      "controllerTransfer(address,address,uint256,bytes,bytes)": {
        "details": "This function can only be executed by the `controller` address.\r",
        "params": {
          "_data": "data to validate the transfer. (It is not used in this reference implementation\r because use of `_data` parameter is implementation specific).\r",
          "_from": "Address The address which you want to send tokens from\r",
          "_operatorData": "data attached to the transfer by controller to emit in event. (It is more like a reason string\r for calling this function (aka force transfer) which provides the transparency on-chain).\r",
          "_to": "Address The address which you want to transfer to\r",
          "_value": "uint256 the amount of tokens to be transferred\r"
        }
      },
      "createCheckpoint()": {
        "return": "uint256\r"
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "disableController(bytes)": {
        "details": "enabled via feature switch \"disableControllerAllowed\"\r"
      },
      "freezeIssuance(bytes)": {
        "details": "It MUST NOT be possible to increase `totalSuppy` after this function is called.\r"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "initialize(address)": {
        "details": "Expected to be called atomically with the proxy being created, by the owner of the token\rCan only be called once\r"
      },
      "initialize(address,uint256)": {
        "details": "Expected to be called atomically with the proxy being created, by the owner of the token\rCan only be called once\r"
      },
      "isControllable()": {
        "details": "If `isControllable` returns `false` then it always return `false` and\r `controllerTransfer` / `controllerRedeem` will always revert.\r",
        "return": "bool `true` when controller address is non-zero otherwise return `false`.\r"
      },
      "isModule(address,uint8)": {
        "params": {
          "_module": "Address to check\r",
          "_type": "type to check against\r"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract.\r"
      },
      "issue(address,uint256,bytes)": {
        "details": "It only be called by the token issuer or the operator defined by the issuer. ERC1594 doesn't have\r have the any logic related to operator but its superset ERC1400 have the operator logic and this function\r is allowed to call by the operator.\r",
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r",
          "_tokenHolder": "The account that will receive the created tokens (account should be whitelisted or KYCed).\r",
          "_value": "The amount of tokens need to be issued\r"
        }
      },
      "issueByPartition(bytes32,address,uint256,bytes)": {
        "params": {
          "_data": "Additional data attached to the minting of tokens\r",
          "_partition": "The partition to allocate the increase in balance\r",
          "_tokenHolder": "The token holder whose balance should be increased\r",
          "_value": "The amount by which to increase the balance\r"
        }
      },
      "issueMulti(address[],uint256[])": {
        "details": "Can only be called by the issuer or STO attached to the token.\r",
        "params": {
          "_tokenHolders": "A list of addresses to whom the minted tokens will be dilivered\r",
          "_values": "A list of number of tokens get minted and transfer to corresponding address of the investor from _tokenHolders[] list\r"
        },
        "return": "success\r"
      },
      "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)": {
        "details": "This function can only be called by the authorised operator.\r",
        "params": {
          "_data": "Additional data attached to the burning of tokens\r",
          "_operatorData": "Additional data attached to the transfer of tokens by the operator\r",
          "_partition": "The partition to allocate the decrease in balance.\r",
          "_tokenHolder": "The token holder whose balance should be decreased\r",
          "_value": "The amount by which to decrease the balance\r"
        }
      },
      "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)": {
        "params": {
          "_data": "Additional data attached to the transfer of tokens\r",
          "_from": "The address from which to transfer tokens from\r",
          "_operatorData": "Additional data attached to the transfer of tokens by the operator\r",
          "_partition": "The partition from which to transfer tokens.\r",
          "_to": "The address to which to transfer tokens to\r",
          "_value": "The amount of tokens to transfer from `_partition`\r"
        },
        "return": "The partition to which the transferred tokens were allocated for the _to address\r"
      },
      "owner()": {
        "return": "the address of the owner.\r"
      },
      "redeem(uint256,bytes)": {
        "params": {
          "_data": "The `bytes _data` it can be used in the token contract to authenticate the redemption.\r",
          "_value": "The amount of tokens need to be redeemed\r"
        }
      },
      "redeemByPartition(bytes32,uint256,bytes)": {
        "params": {
          "_data": "Additional data attached to the burning of tokens\r",
          "_partition": "The partition to allocate the decrease in balance\r",
          "_value": "The amount by which to decrease the balance\r"
        }
      },
      "redeemFrom(address,uint256,bytes)": {
        "details": "It is analogy to `transferFrom`\r",
        "params": {
          "_data": "The `bytes _data` it can be used in the token contract to authenticate the redemption.\r",
          "_tokenHolder": "The account whose tokens gets redeemed.\r",
          "_value": "The amount of tokens need to be redeemed\r"
        }
      },
      "removeDocument(bytes32)": {
        "details": "Can only be executed by the owner of the contract.\r",
        "params": {
          "_name": "Name of the document. It should be unique always\r"
        }
      },
      "removeModule(address)": {
        "params": {
          "_module": "address of module to unarchive\r"
        }
      },
      "revokeOperator(address)": {
        "params": {
          "_operator": "An address which is being de-authorised\r"
        }
      },
      "revokeOperatorByPartition(bytes32,address)": {
        "params": {
          "_operator": "An address which is being de-authorised\r",
          "_partition": "The partition to which the operator is de-authorised\r"
        }
      },
      "setController(address)": {
        "params": {
          "_controller": "address of the controller\r"
        }
      },
      "setDocument(bytes32,string,bytes32)": {
        "details": "Can only be executed by the owner of the contract.\r",
        "params": {
          "_documentHash": "hash (of the contents) of the document.\r",
          "_name": "Name of the document. It should be unique always\r",
          "_uri": "Off-chain uri of the document from where it is accessible to investors/advisors to read.\r"
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "params": {
          "_to": "receiver of transfer\r",
          "_value": "value of transfer\r"
        },
        "return": "bool success\r"
      },
      "transferByPartition(bytes32,address,uint256,bytes)": {
        "params": {
          "_data": "Additional data attached to the transfer of tokens\r",
          "_partition": "The partition from which to transfer tokens\r",
          "_to": "The address to which to transfer tokens to\r",
          "_value": "The amount of tokens to transfer from `_partition`\r"
        },
        "return": "The partition to which the transferred tokens were allocated for the _to address\r"
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_from": "sender of transfer\r",
          "_to": "receiver of transfer\r",
          "_value": "value of transfer\r"
        },
        "return": "bool success\r"
      },
      "transferFromWithData(address,address,uint256,bytes)": {
        "details": "`msg.sender` MUST have a sufficient `allowance` set and this `allowance` must be debited by the `_value`.\r",
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r for the token contract to interpret or record. This could be signed data authorising the transfer\r (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\r",
          "_from": "address The address which you want to send tokens from\r",
          "_to": "address The address which you want to transfer to\r",
          "_value": "uint256 the amount of tokens to be transferred\r"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      },
      "transferWithData(address,uint256,bytes)": {
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r for the token contract to interpret or record. This could be signed data authorising the transfer\r (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\r",
          "_to": "address The address which you want to transfer to\r",
          "_value": "uint256 the amount of tokens to be transferred\r"
        }
      },
      "unarchiveModule(address)": {
        "params": {
          "_module": "address of module to unarchive\r"
        }
      },
      "updateTokenDetails(string)": {
        "params": {
          "_newTokenDetails": "New token details\r"
        }
      },
      "upgrade(address,uint256)": {
        "details": "Expected to be called atomically with the proxy being created, by the owner of the token\rCan only be called once\r"
      },
      "upgradeModule(address)": {
        "params": {
          "_module": "address of module to archive\r"
        }
      },
      "withdrawERC20(address,uint256)": {
        "details": "Owner can transfer POLY to the ST which will be used to pay for modules that require a POLY fee.\r",
        "params": {
          "_tokenContract": "Address of the ERC20Basic compliance token\r",
          "_value": "amount of POLY to withdraw\r"
        }
      }
    },
    "title": "Security Token contract (mock)\r"
  },
  "userdoc": {
    "methods": {
      "addModule(address,bytes,uint256,uint256,bool)": {
        "notice": "addModule function will call addModuleWithLabel() with an empty label for backward compatible\r"
      },
      "archiveModule(address)": {
        "notice": "Archives a module attached to the SecurityToken\r"
      },
      "authorizeOperator(address)": {
        "notice": "Authorises an operator for all partitions of `msg.sender`.\r NB - Allowing investors to authorize an investor to be an operator of all partitions\r but it doesn't mean we operator is allowed to transfer the LOCKED partition values.\r Logic for this restriction is written in `operatorTransferByPartition()` function.\r"
      },
      "authorizeOperatorByPartition(bytes32,address)": {
        "notice": "Authorises an operator for a given partition of `msg.sender`\r"
      },
      "balanceOfByPartition(bytes32,address)": {
        "notice": "Get the balance according to the provided partitions\r"
      },
      "canTransfer(address,uint256,bytes)": {
        "notice": "Transfers of securities may fail for a number of reasons. So this function will used to understand the\r cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped\r with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\r"
      },
      "canTransferByPartition(address,address,bytes32,uint256,bytes)": {
        "notice": "The standard provides an on-chain function to determine whether a transfer will succeed,\r and return details indicating the reason if the transfer is not valid.\r"
      },
      "canTransferFrom(address,address,uint256,bytes)": {
        "notice": "Transfers of securities may fail for a number of reasons. So this function will used to understand the\r cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped\r with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\r"
      },
      "changeDataStore(address)": {
        "notice": "Allows owner to change data store\r"
      },
      "changeGranularity(uint256)": {
        "notice": "Allows owner to change token granularity\r"
      },
      "changeModuleBudget(address,uint256,bool)": {
        "notice": "allows owner to increase/decrease POLY approval of one of the modules\r"
      },
      "changeName(string)": {
        "notice": "Allows owner to change token name\r"
      },
      "changeTreasuryWallet(address)": {
        "notice": "Allows to change the treasury wallet address\r"
      },
      "controllerRedeem(address,uint256,bytes,bytes)": {
        "notice": "This function allows an authorised address to redeem tokens for any token holder.\r The redemption must still respect the balances of the token holder (so the redemption must be for at most\r `balanceOf(_tokenHolder)` tokens) and potentially also need to respect other transfer restrictions.\r"
      },
      "controllerTransfer(address,address,uint256,bytes,bytes)": {
        "notice": "This function allows an authorised address to transfer tokens between any two token holders.\r The transfer must still respect the balances of the token holders (so the transfer must be for at most\r `balanceOf(_from)` tokens) and potentially also need to respect other transfer restrictions.\r"
      },
      "createCheckpoint()": {
        "notice": "Creates a checkpoint that can be used to query historical balances / totalSuppy\r"
      },
      "disableController(bytes)": {
        "notice": "Used by the issuer to permanently disable controller functionality\r"
      },
      "freezeIssuance(bytes)": {
        "notice": "Permanently freeze issuance of this security token.\r"
      },
      "freezeTransfers()": {
        "notice": "freezes transfers\r"
      },
      "initialize(address)": {
        "notice": "Initialization function\r"
      },
      "initialize(address,uint256)": {
        "notice": "Initialization function\r"
      },
      "isControllable()": {
        "notice": "In order to provide transparency over whether `controllerTransfer` / `controllerRedeem` are useable\r or not `isControllable` function will be used.\r"
      },
      "isModule(address,uint8)": {
        "notice": "Checks if an address is a module of certain type\r"
      },
      "issue(address,uint256,bytes)": {
        "notice": "This function must be called to increase the total supply (Corresponds to mint function of ERC20).\r"
      },
      "issueByPartition(bytes32,address,uint256,bytes)": {
        "notice": "Increases totalSupply and the corresponding amount of the specified owners partition\r"
      },
      "issueMulti(address[],uint256[])": {
        "notice": "issue new tokens and assigns them to the target _tokenHolder.\r"
      },
      "operatorRedeemByPartition(bytes32,address,uint256,bytes,bytes)": {
        "notice": "Decreases totalSupply and the corresponding amount of the specified partition of tokenHolder\r"
      },
      "operatorTransferByPartition(bytes32,address,address,uint256,bytes,bytes)": {
        "notice": "Transfers the ownership of tokens from a specified partition from one address to another address\r"
      },
      "redeem(uint256,bytes)": {
        "notice": "This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\r using different ways that could be implemented with in the `redeem` function definition. But those implementations\r are out of the scope of the ERC1594.\r"
      },
      "redeemByPartition(bytes32,uint256,bytes)": {
        "notice": "Decreases totalSupply and the corresponding amount of the specified partition of msg.sender\r"
      },
      "redeemFrom(address,uint256,bytes)": {
        "notice": "This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\r using different ways that could be implemented with in the `redeem` function definition. But those implementations\r are out of the scope of the ERC1594.\r"
      },
      "removeDocument(bytes32)": {
        "notice": "Used to remove an existing document from the contract by giving the name of the document.\r"
      },
      "removeModule(address)": {
        "notice": "Removes a module attached to the SecurityToken\r"
      },
      "revokeOperator(address)": {
        "notice": "Revokes authorisation of an operator previously given for all partitions of `msg.sender`.\r NB - Allowing investors to authorize an investor to be an operator of all partitions\r but it doesn't mean we operator is allowed to transfer the LOCKED partition values.\r Logic for this restriction is written in `operatorTransferByPartition()` function.\r"
      },
      "revokeOperatorByPartition(bytes32,address)": {
        "notice": "Revokes authorisation of an operator previously given for a specified partition of `msg.sender`\r"
      },
      "setController(address)": {
        "notice": "Used by the issuer to set the controller addresses\r"
      },
      "setDocument(bytes32,string,bytes32)": {
        "notice": "Used to attach a new document to the contract, or update the URI or hash of an existing attached document\r"
      },
      "transfer(address,uint256)": {
        "notice": "Overloaded version of the transfer function\r"
      },
      "transferByPartition(bytes32,address,uint256,bytes)": {
        "notice": "Transfers the ownership of tokens from a specified partition from one address to another address\r"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Overloaded version of the transferFrom function\r"
      },
      "transferFromWithData(address,address,uint256,bytes)": {
        "notice": "Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\r However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\r cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\r approving a token transfer, and authorised entity provides signed data which further validates the transfer.\r"
      },
      "transferWithData(address,uint256,bytes)": {
        "notice": "Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\r However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\r cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\r approving a token transfer, and authorised entity provides signed data which further validates the transfer.\r"
      },
      "unarchiveModule(address)": {
        "notice": "Unarchives a module attached to the SecurityToken\r"
      },
      "unfreezeTransfers()": {
        "notice": "Unfreeze transfers\r"
      },
      "updateTokenDetails(string)": {
        "notice": "updates the tokenDetails associated with the token\r"
      },
      "upgrade(address,uint256)": {
        "notice": "Initialization function\r"
      },
      "upgradeModule(address)": {
        "notice": "Upgrades a module attached to the SecurityToken\r"
      },
      "upgradeToken()": {
        "notice": "Upgrades security token\r"
      },
      "withdrawERC20(address,uint256)": {
        "notice": "Allows the owner to withdraw unspent POLY stored by them on the ST or any ERC20 token.\r"
      }
    },
    "notice": "SecurityToken is an ERC1400 token with added capabilities:\r- Implements the ERC1400 Interface\r- Transfers are restricted\r- Modules can be attached to it to control its behaviour\r- ST should not be deployed directly, but rather the SecurityTokenRegistry should be used\r- ST does not inherit from ISecurityToken due to:\r- https://github.com/ethereum/solidity/issues/4847\r"
  }
}