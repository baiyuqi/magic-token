{
  "contractName": "IOwnable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "ownerAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"ownerAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Ownable contract has an owner address, and provides basic authorization control\\r functions, this simplifies the implementation of \\\"user permissions\\\".\\r\",\"methods\":{\"owner()\":{\"details\":\"Returns owner\\r\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\\r\"}}},\"title\":\"Ownable\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/mspace/polymath-core/contracts/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/mspace/polymath-core/contracts/interfaces/IOwnable.sol\":{\"keccak256\":\"0x6528d055b5ff83c131941447c0ea27f541f6c958b9851d5bf342905a8158fa1b\",\"urls\":[\"bzzr://c5c91f9f47829cc325e743f61821c9a05f173a824eaa50f44c32ae90209cfce0\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.8;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ninterface IOwnable {\r\n    /**\r\n    * @dev Returns owner\r\n    */\r\n    function owner() external view returns(address ownerAddress);\r\n\r\n    /**\r\n    * @dev Allows the current owner to relinquish control of the contract.\r\n    */\r\n    function renounceOwnership() external;\r\n\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param _newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address _newOwner) external;\r\n\r\n}\r\n",
  "sourcePath": "C:\\mspace\\polymath-core\\contracts\\interfaces\\IOwnable.sol",
  "ast": {
    "absolutePath": "/C/mspace/polymath-core/contracts/interfaces/IOwnable.sol",
    "exportedSymbols": {
      "IOwnable": [
        14321
      ]
    },
    "id": 14322,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14307,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:21"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Ownable\r\n@dev The Ownable contract has an owner address, and provides basic authorization control\r\nfunctions, this simplifies the implementation of \"user permissions\".\r",
        "fullyImplemented": false,
        "id": 14321,
        "linearizedBaseContracts": [
          14321
        ],
        "name": "IOwnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Returns owner\r",
            "id": 14312,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:2:21"
            },
            "returnParameters": {
              "id": 14311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14310,
                  "name": "ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 14312,
                  "src": "329:20:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "328:22:21"
            },
            "scope": 14321,
            "src": "290:61:21",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Allows the current owner to relinquish control of the contract.\r",
            "id": 14315,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "renounceOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "478:2:21"
            },
            "returnParameters": {
              "id": 14314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:0:21"
            },
            "scope": 14321,
            "src": "452:38:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\r\n@param _newOwner The address to transfer ownership to.\r",
            "id": 14320,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14317,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 14320,
                  "src": "692:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "691:19:21"
            },
            "returnParameters": {
              "id": 14319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:0:21"
            },
            "scope": 14321,
            "src": "665:55:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 14322,
        "src": "221:504:21"
      }
    ],
    "src": "0:727:21"
  },
  "legacyAST": {
    "absolutePath": "/C/mspace/polymath-core/contracts/interfaces/IOwnable.sol",
    "exportedSymbols": {
      "IOwnable": [
        14321
      ]
    },
    "id": 14322,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14307,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:21"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Ownable\r\n@dev The Ownable contract has an owner address, and provides basic authorization control\r\nfunctions, this simplifies the implementation of \"user permissions\".\r",
        "fullyImplemented": false,
        "id": 14321,
        "linearizedBaseContracts": [
          14321
        ],
        "name": "IOwnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Returns owner\r",
            "id": 14312,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:2:21"
            },
            "returnParameters": {
              "id": 14311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14310,
                  "name": "ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 14312,
                  "src": "329:20:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "328:22:21"
            },
            "scope": 14321,
            "src": "290:61:21",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Allows the current owner to relinquish control of the contract.\r",
            "id": 14315,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "renounceOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "478:2:21"
            },
            "returnParameters": {
              "id": 14314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:0:21"
            },
            "scope": 14321,
            "src": "452:38:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\r\n@param _newOwner The address to transfer ownership to.\r",
            "id": 14320,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14317,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 14320,
                  "src": "692:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "691:19:21"
            },
            "returnParameters": {
              "id": 14319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:0:21"
            },
            "scope": 14321,
            "src": "665:55:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 14322,
        "src": "221:504:21"
      }
    ],
    "src": "0:727:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-05T22:52:46.573Z",
  "devdoc": {
    "details": "The Ownable contract has an owner address, and provides basic authorization control\r functions, this simplifies the implementation of \"user permissions\".\r",
    "methods": {
      "owner()": {
        "details": "Returns owner\r"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.\r"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "_newOwner": "The address to transfer ownership to.\r"
        }
      }
    },
    "title": "Ownable\r"
  },
  "userdoc": {
    "methods": {}
  }
}