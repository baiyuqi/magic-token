{
  "contractName": "MockSTRGetter",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_variable",
          "type": "bytes32"
        }
      ],
      "name": "getBytes32Value",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getExpiryLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getTickersByOwner",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_ticker",
          "type": "string"
        }
      ],
      "name": "getTickerOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getTokensByOwner",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_variable",
          "type": "bytes32"
        }
      ],
      "name": "getBytesValue",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_variable",
          "type": "bytes32"
        }
      ],
      "name": "getAddressValue",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_ticker",
          "type": "string"
        }
      ],
      "name": "getTickerDetails",
      "outputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getArrayAddress",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_ticker",
          "type": "string"
        }
      ],
      "name": "getTickerStatus",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_securityToken",
          "type": "address"
        }
      ],
      "name": "getSecurityTokenData",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_variable",
          "type": "bytes32"
        }
      ],
      "name": "getBoolValue",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_protocolVersion",
          "type": "uint256"
        }
      ],
      "name": "getSTFactoryAddressOfVersion",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_variable",
          "type": "bytes32"
        }
      ],
      "name": "getStringValue",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getArrayBytes32",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTokens",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLatestProtocolVersion",
      "outputs": [
        {
          "name": "",
          "type": "uint8[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_delegate",
          "type": "address"
        }
      ],
      "name": "getTokensByDelegate",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_variable",
          "type": "bytes32"
        }
      ],
      "name": "getUintValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSTFactoryAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getIsFeeInPoly",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getArrayUint",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_ticker",
          "type": "string"
        }
      ],
      "name": "getSecurityTokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newFunction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_variable\",\"type\":\"bytes32\"}],\"name\":\"getBytes32Value\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getExpiryLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newFunction\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTickersByOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ticker\",\"type\":\"string\"}],\"name\":\"getTickerOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTokensByOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_variable\",\"type\":\"bytes32\"}],\"name\":\"getBytesValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_variable\",\"type\":\"bytes32\"}],\"name\":\"getAddressValue\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ticker\",\"type\":\"string\"}],\"name\":\"getTickerDetails\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getArrayAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ticker\",\"type\":\"string\"}],\"name\":\"getTickerStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_securityToken\",\"type\":\"address\"}],\"name\":\"getSecurityTokenData\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_variable\",\"type\":\"bytes32\"}],\"name\":\"getBoolValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_protocolVersion\",\"type\":\"uint256\"}],\"name\":\"getSTFactoryAddressOfVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_variable\",\"type\":\"bytes32\"}],\"name\":\"getStringValue\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getArrayBytes32\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLatestProtocolVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"getTokensByDelegate\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_variable\",\"type\":\"bytes32\"}],\"name\":\"getUintValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSTFactoryAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIsFeeInPoly\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getArrayUint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ticker\",\"type\":\"string\"}],\"name\":\"getSecurityTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getExpiryLimit()\":{\"return\":\"Expiry limit\\r\"},\"getIsFeeInPoly()\":{\"return\":\"true = poly, false = usd\\r\"},\"getSTFactoryAddressOfVersion(uint256)\":{\"params\":{\"_protocolVersion\":\"Packed protocol version\\r\"}},\"getSecurityTokenAddress(string)\":{\"params\":{\"_ticker\":\"is the ticker of the security token\\r\"},\"return\":\"address\\r\"},\"getSecurityTokenData(address)\":{\"params\":{\"_securityToken\":\"is the address of the security token.\\r\"},\"return\":\"string is the ticker of the security Token.\\raddress is the issuer of the security Token.\\rstring is the details of the security token.\\ruint256 is the timestamp at which security Token was deployed.\\r\"},\"getTickerDetails(string)\":{\"params\":{\"_ticker\":\"is the ticker symbol\\r\"},\"return\":\"address\\ruint256\\ruint256\\rstring\\rbool\\r\"},\"getTickerOwner(string)\":{\"params\":{\"_ticker\":\"Ticker whose owner need to determine\\r\"},\"return\":\"address Address of the owner\\r\"},\"getTickerStatus(string)\":{\"params\":{\"_ticker\":\"Ticker whose status need to determine\\r\"},\"return\":\"bool\\r\"},\"getTickersByOwner(address)\":{\"params\":{\"_owner\":\"is the address which owns the list of tickers\\r\"}},\"getTokens()\":{\"details\":\"Intention is that this is called off-chain so block gas limit is not relevant\\r\"},\"getTokensByDelegate(address)\":{\"details\":\"Intention is that this is called off-chain so block gas limit is not relevant\\r\",\"params\":{\"_delegate\":\"is the address for the delegate\\r\"}},\"getTokensByOwner(address)\":{\"details\":\"Intention is that this is called off-chain so block gas limit is not relevant\\r\",\"params\":{\"_owner\":\"is the address which owns the list of tickers\\r\"}}},\"title\":\"Registry contract for issuers to register their security tokens\\r\"},\"userdoc\":{\"methods\":{\"getArrayAddress(bytes32)\":{\"notice\":\"getArrayBytes32(keccak256(abi.encodePacked(\\\"tokensOwnedByOwner\\\", 0x1)).length;\"},\"getExpiryLimit()\":{\"notice\":\"Gets the expiry limit\\r\"},\"getIsFeeInPoly()\":{\"notice\":\"Gets the fee currency\\r\"},\"getLatestProtocolVersion()\":{\"notice\":\"Gets Protocol version\\r\"},\"getSTFactoryAddress()\":{\"notice\":\"Returns the current STFactory Address\\r\"},\"getSTFactoryAddressOfVersion(uint256)\":{\"notice\":\"Returns the STFactory Address of a particular version\\r\"},\"getSecurityTokenAddress(string)\":{\"notice\":\"Returns the security token address by ticker symbol\\r\"},\"getSecurityTokenData(address)\":{\"notice\":\"Returns the security token data by address\\r\"},\"getTickerDetails(string)\":{\"notice\":\"Returns the owner and timestamp for a given ticker\\r\"},\"getTickerOwner(string)\":{\"notice\":\"Gets the owner of the ticker\\r\"},\"getTickerStatus(string)\":{\"notice\":\"Gets the status of the ticker\\r\"},\"getTickersByOwner(address)\":{\"notice\":\"Returns the list of tickers owned by the selected address\\r\"},\"getTokens()\":{\"notice\":\"Returns the list of all tokens\\r\"},\"getTokensByDelegate(address)\":{\"notice\":\"Returns the list of tokens to which the delegate has some access\\r\"},\"getTokensByOwner(address)\":{\"notice\":\"Returns the list of tokens owned by the selected address\\r\"},\"getUintValue(bytes32)\":{\"notice\":\"string _name = getString(keccak256(abi.encodePacked(\\\"registeredSymbols_name\\\", \\\"TOKEN\\\"));\"},\"newFunction()\":{\"notice\":\"Alert! Alert! Do NOT use it for the mainnet release\"}}}},\"settings\":{\"compilationTarget\":{\"/C/mspace/polymath-core/contracts/mocks/MockSTRGetter.sol\":\"MockSTRGetter\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/mspace/polymath-core/contracts/STRGetter.sol\":{\"keccak256\":\"0xf47cd5e7fcc8d55699058ea3dbe820a9509c4e83cff2ae63500bcb92c1d7a4a2\",\"urls\":[\"bzzr://e945bffa0fec5337de09eb8146dd4c8baab78a2970a25242c35c36b94f99c268\"]},\"/C/mspace/polymath-core/contracts/interfaces/IOwnable.sol\":{\"keccak256\":\"0x6528d055b5ff83c131941447c0ea27f541f6c958b9851d5bf342905a8158fa1b\",\"urls\":[\"bzzr://c5c91f9f47829cc325e743f61821c9a05f173a824eaa50f44c32ae90209cfce0\"]},\"/C/mspace/polymath-core/contracts/interfaces/ISecurityToken.sol\":{\"keccak256\":\"0x3cf35b60d39aa6e45f9fdca61d1f9baeecbf91647dce9df7e61b4f1ae603d684\",\"urls\":[\"bzzr://5b51ef4a80ff96a6c53e29b7e342640faa3268f3679657bd3e28d2bf7f4f2e24\"]},\"/C/mspace/polymath-core/contracts/libraries/Encoder.sol\":{\"keccak256\":\"0x37d46563113660aa2ccb6e8edfe57ecc9fd7c469070b46a4dd65c45954a657d4\",\"urls\":[\"bzzr://ad222f5e791fe2fba71e08d509a653a315cbaa457e5db7f49c5a1f39e8c89dbd\"]},\"/C/mspace/polymath-core/contracts/libraries/Util.sol\":{\"keccak256\":\"0x0641ec6587995396e7134d2910eddf3ea0f1504840f0cc1cd83273aa579ac9fc\",\"urls\":[\"bzzr://5cfdd07fa855d44dd5495c4d5e64476ab5b27da1da09cfde532088599b59b86e\"]},\"/C/mspace/polymath-core/contracts/libraries/VersionUtils.sol\":{\"keccak256\":\"0x3406ffb981fc8ef803ff1b4e397bc7a457c3ed60231070cb64137f01054f4042\",\"urls\":[\"bzzr://07e703fd8f5ff93ce888b1a388a985cdccd1c7e8bf3ba2b051c10a0898b71b9d\"]},\"/C/mspace/polymath-core/contracts/mocks/MockSTRGetter.sol\":{\"keccak256\":\"0xfbb75e17aedc8df840257599f750a88921bb9150356d63f36cafbb9927afa575\",\"urls\":[\"bzzr://ba015deec55fa333bdf45c9fd4e2a02f57e973c1a22054baa885f67ae09a6a36\"]},\"/C/mspace/polymath-core/contracts/modules/PermissionManager/IPermissionManager.sol\":{\"keccak256\":\"0xea92765ddf9613d58e54a34a339899af6c314172981021dc007c89801271ecb3\",\"urls\":[\"bzzr://e22b3cd9588642e1a5ff100afc9e380bceddb9ded6ffbce3f1499ae674261c85\"]},\"/C/mspace/polymath-core/contracts/storage/EternalStorage.sol\":{\"keccak256\":\"0xa3f0d5a6593081f5bc6e203612e5057f9b8a55501a0bb2c5a67974105d680ba5\",\"urls\":[\"bzzr://50eef42338a9c3342e4eae8eb9bb643d6cde0a82f3ad6ad5baa2e764da4c6d84\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80638ffa9690116100c3578063b70fb8b91161007c578063b70fb8b9146106fa578063e82617fb14610720578063ea4707581461073d578063f34f50b514610745578063f6fcbee11461074d578063fb621f141461076a57610158565b80638ffa969014610676578063a094a16614610693578063a209a29c146106b0578063a8f0d3a7146106cd578063aa6ca808146106ea578063af0b1a94146106f257610158565b806344bfa56e1161011557806344bfa56e146102f85780634c77e5ba1461038a57806363808bcb146103a75780636f3b8ce2146104bf5780637e388c54146104dc5780638f9bbf161461059457610158565b8063025ec81a1461015d578063165e694a1461018c5780631b28d63e1461019457806321c8ad0e1461019c578063344d7d3d1461021257806340398d67146102d2575b600080fd5b61017a6004803603602081101561017357600080fd5b50356107d8565b60408051918252519081900360200190f35b61017a6107ed565b61017a61081d565b6101c2600480360360208110156101b257600080fd5b50356001600160a01b0316610822565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101fe5781810151838201526020016101e6565b505050509050019250505060405180910390f35b6102b66004803603602081101561022857600080fd5b810190602081018135600160201b81111561024257600080fd5b82018360208201111561025457600080fd5b803590602001918460018302840111600160201b8311171561027557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061093e945050505050565b604080516001600160a01b039092168252519081900360200190f35b6101c2600480360360208110156102e857600080fd5b50356001600160a01b031661098d565b6103156004803603602081101561030e57600080fd5b503561099a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561034f578181015183820152602001610337565b50505050905090810190601f16801561037c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b6600480360360208110156103a057600080fd5b5035610a3b565b610415600480360360208110156103bd57600080fd5b810190602081018135600160201b8111156103d757600080fd5b8201836020820111156103e957600080fd5b803590602001918460018302840111600160201b8311171561040a57600080fd5b509092509050610a56565b60405180866001600160a01b03166001600160a01b031681526020018581526020018481526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b83811015610480578181015183820152602001610468565b50505050905090810190601f1680156104ad5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6101c2600480360360208110156104d557600080fd5b5035610cae565b610580600480360360208110156104f257600080fd5b810190602081018135600160201b81111561050c57600080fd5b82018360208201111561051e57600080fd5b803590602001918460018302840111600160201b8311171561053f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d19945050505050565b604080519115158252519081900360200190f35b6105ba600480360360208110156105aa57600080fd5b50356001600160a01b0316610d62565b6040518080602001856001600160a01b03166001600160a01b0316815260200180602001848152602001838103835287818151815260200191508051906020019080838360005b83811015610619578181015183820152602001610601565b50505050905090810190601f1680156106465780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360008315610480578181015183820152602001610468565b6105806004803603602081101561068c57600080fd5b5035610ea9565b6102b6600480360360208110156106a957600080fd5b5035610ebe565b610315600480360360208110156106c657600080fd5b5035610ef9565b6101c2600480360360208110156106e357600080fd5b5035610f62565b6101c2610fc3565b6101c2610fd1565b6101c26004803603602081101561071057600080fd5b50356001600160a01b031661100f565b61017a6004803603602081101561073657600080fd5b5035611107565b6102b6611119565b610580611187565b6101c26004803603602081101561076357600080fd5b50356111b2565b6102b66004803603602081101561078057600080fd5b810190602081018135600160201b81111561079a57600080fd5b8201836020820111156107ac57600080fd5b803590602001918460018302840111600160201b831117156107cd57600080fd5b509092509050611212565b6000818152600660205260409020545b919050565b60006108187f604268e9a73dfd777dcecb8a614493dd65c638bad2f5e7d709d378bd2fb0baee611107565b905090565b606390565b6060600080905060606108656108606040518060400160405280600d8152602001600160981b6c75736572546f5469636b657273028152508661129c565b610f62565b905060005b81518110156108a35761088f82828151811061088257fe5b6020026020010151611326565b1561089b576001909201915b60010161086a565b6060836040519080825280602002602001820160405280156108cf578160200160208202803883390190505b50905060009350600091505b8251821015610935576108f383838151811061088257fe5b1561092a5782828151811061090457fe5b602002602001015181858151811061091857fe5b60209081029190910101526001909301925b6001909101906108db565b95945050505050565b60006109876109826040518060400160405280601781526020017f726567697374657265645469636b6572735f6f776e6572000000000000000000815250846113da565b610a3b565b92915050565b606061098760008361149c565b60008181526003602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610a2f5780601f10610a0457610100808354040283529160200191610a2f565b820191906000526020600020905b815481529060010190602001808311610a1257829003601f168201915b50505050509050919050565b6000908152600260205260409020546001600160a01b031690565b6000806000606060006060610aa088888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061169192505050565b90506000610aad82610d19565b90506000610af8610af36040518060400160405280601c81526020017f726567697374657265645469636b6572735f6578706972794461746500000000815250856113da565b611107565b905060018215151480610b0a57504281115b15610c7e576000610b4e610982604051806040016040528060158152602001600160591b743a34b1b5b2b92a37a9b2b1bab934ba3caa37b5b2b702815250866113da565b905060606001600160a01b03821615610c2757816001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610b9a57600080fd5b505afa158015610bae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610bd757600080fd5b810190808051600160201b811115610bee57600080fd5b82016020810184811115610c0157600080fd5b8151600160201b811182820187101715610c1a57600080fd5b5050929190505050610c38565b604051806020016040528060008152505b9050610c438561093e565b610c68610af3604051806060016040528060228152602001611d7b60229139886113da565b909a509850919650909450909250610ca4915050565b50506040805160208101909152600080825296508695508594509250839150610ca49050565b9295509295909350565b600081815260096020908152604091829020805483518184028101840190945280845260609392830182828015610a2f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610cf05750505050509050919050565b6000610987610d5d6040518060400160405280601881526020017f726567697374657265645469636b6572735f7374617475730000000000000000815250846113da565b610ea9565b6060600060606000610db1610dac6040518060400160405280601581526020017f7365637572697479546f6b656e735f7469636b657200000000000000000000008152508761129c565b610ef9565b856001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610dea57600080fd5b505afa158015610dfe573d6000803e3d6000fd5b505050506040513d6020811015610e1457600080fd5b505160408051808201909152601b81527f7365637572697479546f6b656e735f746f6b656e44657461696c7300000000006020820152610e5890610dac908961129c565b610e9a610af36040518060400160405280601981526020017f7365637572697479546f6b656e735f6465706c6f7965644174000000000000008152508a61129c565b93509350935093509193509193565b60009081526004602052604090205460ff1690565b60006109876109826040518060400160405280601181526020016001607a1b701c1c9bdd1bd8dbdb15995c9cda5bdb94d50281525084611733565b60008181526001602081815260409283902080548451600294821615610100026000190190911693909304601f81018390048302840183019094528383526060939091830182828015610a2f5780601f10610a0457610100808354040283529160200191610a2f565b600081815260076020908152604091829020805483518184028101840190945280845260609392830182828015610a2f57602002820191906000526020600020905b815481526020019060010190808311610fa45750505050509050919050565b60606108186001600061149c565b606061081861100a610af36040518060400160405280600d8152602001600160991b6c3630ba32b9ba2b32b939b4b7b7028152506117a8565b61181f565b60608061101a610fc3565b90506000805b825181101561105a5761104683828151811061103857fe5b6020026020010151866118c1565b15611052576001909101905b600101611020565b606082604051908082528060200260200182016040528015611086578160200160208202803883390190505b50905060009250600091505b8351821015610935576110b88483815181106110aa57fe5b6020026020010151876118c1565b156110fc578382815181106110c957fe5b60200260200101518184815181106110dd57fe5b6001600160a01b03909216602092830291909101909101526001909201915b600190910190611092565b60009081526020819052604090205490565b60006108186109826040518060400160405280601181526020016001607a1b701c1c9bdd1bd8dbdb15995c9cda5bdb94d502815250611182610af36040518060400160405280600d8152602001600160991b6c3630ba32b9ba2b32b939b4b7b7028152506117a8565b611733565b60006108187f7152e5426955da44af11ecd67fec5e2a3ba747be974678842afa9394b9a075b6610ea9565b600081815260086020908152604091829020805483518184028101840190945280845260609392830182828015610a2f5760200282019190600052602060002090815481526020019060010190808311610fa45750505050509050919050565b6000606061125584848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061169192505050565b9050611294610982604051806040016040528060158152602001600160591b743a34b1b5b2b92a37a9b2b1bab934ba3caa37b5b2b702815250836113da565b949350505050565b600082826040516020018083805190602001908083835b602083106112d25780518252601f1990920191602091820191016112b3565b51815160209384036101000a60001901801990921691161790526001600160a01b039590951660601b92019182525060408051808303600b1901815260149092019052805192019190912095945050505050565b6000606061133383611b87565b905042611378610af36040518060400160405280601c81526020017f726567697374657265645469636b6572735f6578706972794461746500000000815250846113da565b1015806113c257506113c2610d5d6040518060400160405280601881526020017f726567697374657265645469636b6572735f7374617475730000000000000000815250836113da565b156113d15760019150506107e8565b50600092915050565b600082826040516020018083805190602001908083835b602083106114105780518252601f1990920191602091820191016113f1565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106114585780518252601f199092019160209182019101611439565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405280519060200120905092915050565b6060806114d66114d16040518060400160405280600b8152602001600160a81b6a6163746976655573657273028152506117a8565b610cae565b90506060600080805b8451821015611586576115306108606040518060400160405280600d8152602001600160981b6c75736572546f5469636b6572730281525087858151811061152357fe5b602002602001015161129c565b9350600090505b835181101561157b5761155e84828151811061154f57fe5b60200260200101518989611c87565b6001600160a01b031615611573576001909201915b600101611537565b6001909101906114df565b6060836040519080825280602002602001820160405280156115b2578160200160208202803883390190505b5090506000935060008093505b8651841015611684576116036108606040518060400160405280600d8152602001600160981b6c75736572546f5469636b6572730281525089878151811061152357fe5b9550600092505b85518310156116795761163186848151811061162257fe5b60200260200101518b8b611c87565b90506001600160a01b0381161561166e578082868151811061164f57fe5b6001600160a01b03909216602092830291909101909101526001909401935b60019092019161160a565b6001909301926115bf565b5098975050505050505050565b60608160005b815181101561172c5760008282815181106116ae57fe5b016020015160f890811c901b9050600160f81b6061026001600160f81b03198216108015906116ee5750600160f91b603d026001600160f81b0319821611155b156116ff57601f1960f891821c01901b5b8083838151811061170c57fe5b60200101906001600160f81b031916908160001a90535050600101611697565b5092915050565b600082826040516020018083805190602001908083835b602083106117695780518252601f19909201916020918201910161174a565b51815160209384036101000a60001901801990921691161790529201938452506040805180850381529382019052825192019190912095945050505050565b6000816040516020018082805190602001908083835b602083106117dd5780518252601f1990920191602091820191016117be565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050919050565b6040805160038082526080820190925260609182919060208201838038833901905050905060108362ffffff16901c8160008151811061185b57fe5b602002602001019060ff16908160ff168152505060088362ffffff16901c8160018151811061188657fe5b602002602001019060ff16908160ff168152505082816002815181106118a857fe5b60ff909216602092830291909101909101529050919050565b6000806000905060606000856001600160a01b031663ac90b42260016040518263ffffffff1660e01b8152600401808260ff16815260200191505060006040518083038186803b15801561191457600080fd5b505afa158015611928573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561195157600080fd5b810190808051600160201b81111561196857600080fd5b8201602081018481111561197b57600080fd5b81518560208202830111600160201b8211171561199757600080fd5b5060009750909550505050505b8151831015611b7b57856001600160a01b031663b5de8d4c8385815181106119c857fe5b60200260200101516040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060006040518083038186803b158015611a1657600080fd5b505afa158015611a2a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260c0811015611a5357600080fd5b815160208301516040840151606085015160808601805194969395929491939283019291600160201b811115611a8857600080fd5b82016020810184811115611a9b57600080fd5b81518560208202830111600160201b82111715611ab757600080fd5b50949850889750611b70965050505050505057818381518110611ad657fe5b60200260200101516001600160a01b03166362c90dc5866040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015611b3357600080fd5b505afa158015611b47573d6000803e3d6000fd5b505050506040513d6020811015611b5d57600080fd5b505115611b705760019350505050610987565b6001909201916119a4565b50600095945050505050565b6040805160208082528183019092526060918291906020820181803883390190505090506000805b6020811015611c05576008810260020a85026001600160f81b0319811615611bfc5780848481518110611bde57fe5b60200101906001600160f81b031916908160001a9053506001909201915b50600101611baf565b6060826040519080825280601f01601f191660200182016040528015611c32576020820181803883390190505b509050600091505b8282101561093557838281518110611c4e57fe5b602001015160f81c60f81b818381518110611c6557fe5b60200101906001600160f81b031916908160001a905350600190910190611c3a565b600080611ccf610982604051806040016040528060158152602001600160591b743a34b1b5b2b92a37a9b2b1bab934ba3caa37b5b2b702815250611cca88611b87565b6113da565b90506001600160a01b03811615611d6d578380611d615750826001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d2a57600080fd5b505afa158015611d3e573d6000803e3d6000fd5b505050506040513d6020811015611d5457600080fd5b50516001600160a01b0316145b15611d6d579050611d73565b60009150505b939250505056fe726567697374657265645469636b6572735f726567697374726174696f6e44617465a165627a7a72305820e6d2d2a60e98b85df93f057b6556643e331067a1dfa14c61730716946894d1820029",
  "sourceMap": "141:232:57:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;141:232:57;;;;;;;",
  "deployedSourceMap": "141:232:57:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;141:232:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10083:124:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10083:124:154;;:::i;:::-;;;;;;;;;;;;;;;;10363:106:6;;;:::i;287:81:57:-;;;:::i;1018:740:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1018:740:6;-1:-1:-1;;;;;1018:740:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1018:740:6;;;;;;;;;;;;;;;;;10964:169;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10964:169:6;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;10964:169:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10964:169:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10964:169:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;10964:169:6;;-1:-1:-1;10964:169:6;;-1:-1:-1;;;;;10964:169:6:i;:::-;;;;-1:-1:-1;;;;;10964:169:6;;;;;;;;;;;;;;2449:133;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2449:133:6;-1:-1:-1;;;;;2449:133:6;;:::i;10215:125:154:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10215:125:154;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10215:125:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9951:124;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9951:124:154;;:::i;6890:1035:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6890:1035:6;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6890:1035:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6890:1035:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;6890:1035:6;;-1:-1:-1;6890:1035:6;-1:-1:-1;6890:1035:6;:::i;:::-;;;;;-1:-1:-1;;;;;6890:1035:6;-1:-1:-1;;;;;6890:1035:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6890:1035:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7404:128:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7404:128:154;;:::i;10623:165:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10623:165:6;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;10623:165:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10623:165:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10623:165:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;10623:165:6;;-1:-1:-1;10623:165:6;;-1:-1:-1;;;;;10623:165:6:i;:::-;;;;;;;;;;;;;;;;;;8742:475;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8742:475:6;-1:-1:-1;;;;;8742:475:6;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;8742:475:6;-1:-1:-1;;;;;8742:475:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;8742:475:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8742:475:6;;;;;;;;;;;;;;;;;;;;;;23:1:-1;27:10;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;9692:115:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9692:115:154;;:::i;9634:189:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9634:189:6;;:::i;9815:128:154:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9815:128:154;;:::i;7540:::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7540:128:154;;:::i;2746:113:6:-;;;:::i;9887:172::-;;;:::i;5168:819::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5168:819:6;-1:-1:-1;;;;;5168:819:6;;:::i;9566:118:154:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9566:118:154;;:::i;9297:185:6:-;;;:::i;10164:106::-;;;:::i;7676:119:154:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7676:119:154;;:::i;8102:233:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8102:233:6;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;8102:233:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8102:233:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;8102:233:6;;-1:-1:-1;8102:233:6;-1:-1:-1;8102:233:6;:::i;10083:124:154:-;10147:7;10174:25;;;:14;:25;;;;;;10083:124;;;;:::o;10363:106:6:-;10409:7;10436:25;646:66;10436:12;:25::i;:::-;10429:32;;10363:106;:::o;287:81:57:-;358:2;287:81;:::o;1018:740:6:-;1083:16;1112:13;1128:1;1112:17;;1210:24;1237:56;1253:39;;;;;;;;;;;;;;-1:-1:-1;;;;;1253:39:6;;;1285:6;1253:14;:39::i;:::-;1237:15;:56::i;:::-;1210:83;-1:-1:-1;1304:6:6;1321:137;1337:7;:14;1333:1;:18;1321:137;;;1377:26;1392:7;1400:1;1392:10;;;;;;;;;;;;;;1377:14;:26::i;:::-;1373:74;;;1424:7;;;;;1373:74;1353:3;;1321:137;;;1468:23;1508:5;1494:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;1494:20:6;;1468:46;;1533:1;1525:9;;1554:1;1550:5;;1545:182;1561:7;:14;1557:1;:18;1545:182;;;1601:26;1616:7;1624:1;1616:10;;;;;;;1601:26;1597:119;;;1664:7;1672:1;1664:10;;;;;;;;;;;;;;1648:6;1655:5;1648:13;;;;;;;;;;;;;;;;;:26;1693:7;;;;;1597:119;1577:3;;;;;1545:182;;;1744:6;1018:740;-1:-1:-1;;;;;1018:740:6:o;10964:169::-;11031:7;11058:67;11074:50;;;;;;;;;;;;;;;;;;11116:7;11074:14;:50::i;:::-;11058:15;:67::i;:::-;11051:74;10964:169;-1:-1:-1;;10964:169:6:o;2449:133::-;2513:16;2549:25;2560:5;2567:6;2549:10;:25::i;10215:125:154:-;10309:23;;;;:12;:23;;;;;;;;;10302:30;;;;;;-1:-1:-1;;10302:30:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10277:12;;10302:30;;;10309:23;10302:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10215:125;;;:::o;9951:124::-;10015:7;10042:25;;;:14;:25;;;;;;-1:-1:-1;;;;;10042:25:154;;9951:124::o;6890:1035:6:-;6964:7;6973;6982;6991:13;7006:4;7023:20;7046:19;7057:7;;7046:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7046:10:6;;-1:-1:-1;;;7046:19:6:i;:::-;7023:42;;7076:17;7096:23;7112:6;7096:15;:23::i;:::-;7076:43;;7130:18;7151:68;7164:54;;;;;;;;;;;;;;;;;;7211:6;7164:14;:54::i;:::-;7151:12;:68::i;:::-;7130:89;-1:-1:-1;7315:4:6;7299:20;;;;;7298:44;;;7338:3;7325:10;:16;7298:44;7294:624;;;7359:17;7379:64;7395:47;;;;;;;;;;;;;;-1:-1:-1;;;;;7395:47:6;;;7435:6;7395:14;:47::i;7379:64::-;7359:84;-1:-1:-1;7458:23:6;-1:-1:-1;;;;;7484:23:6;;;:63;;7530:9;-1:-1:-1;;;;;7515:30:6;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7515:32:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7515:32:6;;;;;;39:16:-1;36:1;17:17;2:54;101:4;7515:32:6;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;7515:32:6;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;-1:-1;;;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;7515:32:6;;;;;;7484:63;;;;;;;;;;;;;;;;7458:89;;7601:22;7616:6;7601:14;:22::i;:::-;7642:74;7655:60;;;;;;;;;;;;;;;;;;7708:6;7655:14;:60::i;7642:74::-;7562:257;;-1:-1:-1;7562:257:6;-1:-1:-1;7735:10:6;;-1:-1:-1;7764:9:6;;-1:-1:-1;7792:12:6;;-1:-1:-1;7562:257:6;;-1:-1:-1;;7562:257:6;7294:624;-1:-1:-1;;7852:54:6;;;;;;;;;7868:1;7852:54;;;7868:1;-1:-1:-1;7868:1:6;;-1:-1:-1;7868:1:6;;-1:-1:-1;7852:54:6;-1:-1:-1;7868:1:6;;-1:-1:-1;7852:54:6;;-1:-1:-1;7852:54:6;6890:1035;;;;;;;;;:::o;7404:128:154:-;7499:25;;;;:19;:25;;;;;;;;;7492:32;;;;;;;;;;;;;;;;;7463:16;;7492:32;;;7499:25;7492:32;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7492:32:154;;;;;;;;;;;;;;;;;;;;;;7404:128;;;:::o;10623:165:6:-;10691:4;10715:65;10728:51;;;;;;;;;;;;;;;;;;10771:7;10728:14;:51::i;:::-;10715:12;:65::i;8742:475::-;8819:13;8834:7;8843:13;8858:7;8900:71;8915:55;;;;;;;;;;;;;;;;;;8955:14;8915;:55::i;:::-;8900:14;:71::i;:::-;8995:14;-1:-1:-1;;;;;8986:30:6;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8986:32:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8986:32:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8986:32:6;9048:61;;;;;;;;;;;;;8986:32;9048:61;;;9033:77;;9048:61;;9094:14;9048;:61::i;9033:77::-;9125:73;9138:59;;;;;;;;;;;;;;;;;;9182:14;9138;:59::i;9125:73::-;8878:331;;;;;;;;8742:475;;;;;:::o;9692:115:154:-;9753:4;9777:22;;;:11;:22;;;;;;;;;9692:115::o;9634:189:6:-;9718:7;9745:70;9761:53;;;;;;;;;;;;;;-1:-1:-1;;;;;9761:53:6;;;9797:16;9761:14;:53::i;9815:128:154:-;9911:24;;;;:13;:24;;;;;;;;;9904:31;;;;;;;;;;;-1:-1:-1;;9904:31:154;;;;;;;;;;;;;;;;;;;;;;;;;;9878:13;;9911:24;;9904:31;;9911:24;9904:31;;;;;;;;;;;;;;;;;;;;;;;;7540:128;7635:25;;;;:19;:25;;;;;;;;;7628:32;;;;;;;;;;;;;;;;;7599:16;;7628:32;;;7635:25;7628:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7540:128;;;:::o;2746:113:6:-;2787:16;2823:28;2834:4;2848:1;2823:10;:28::i;9887:172::-;9943:14;9977:74;10004:45;10017:31;;;;;;;;;;;;;;-1:-1:-1;;;;;10017:31:6;;;:14;:31::i;10004:45::-;9977:19;:74::i;5168:819::-;5238:16;5429:23;5455:11;:9;:11::i;:::-;5429:37;-1:-1:-1;5477:13:6;;5529:148;5545:6;:13;5541:1;:17;5529:148;;;5584:38;5601:6;5608:1;5601:9;;;;;;;;;;;;;;5612;5584:16;:38::i;:::-;5580:86;;;5643:7;;;;;5580:86;5560:3;;5529:148;;;5687:23;5727:5;5713:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5713:20:6;;5687:46;;5752:1;5744:9;;5773:1;5769:5;;5764:192;5780:6;:13;5776:1;:17;5764:192;;;5819:38;5836:6;5843:1;5836:9;;;;;;;;;;;;;;5847;5819:16;:38::i;:::-;5815:130;;;5894:6;5901:1;5894:9;;;;;;;;;;;;;;5878:6;5885:5;5878:13;;;;;;;;-1:-1:-1;;;;;5878:25:6;;;:13;;;;;;;;;;;:25;5922:7;;;;;5815:130;5795:3;;;;;5764:192;;9566:118:154;9627:7;9654:22;;;;;;;;;;;;9566:118::o;9297:185:6:-;9348:7;9375:99;9391:82;;;;;;;;;;;;;;-1:-1:-1;;;;;9391:82:6;;;9427:45;9440:31;;;;;;;;;;;;;;-1:-1:-1;;;;;9440:31:6;;;:14;:31::i;9427:45::-;9391:14;:82::i;10164:106::-;10210:4;10234:28;753:66;10234:12;:28::i;7676:119:154:-;7765:22;;;;:16;:22;;;;;;;;;7758:29;;;;;;;;;;;;;;;;;7732:13;;7758:29;;;7765:22;7758:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7676:119;;;:::o;8102:233:6:-;8183:7;8203:20;8226:19;8237:7;;8226:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;8226:10:6;;-1:-1:-1;;;8226:19:6:i;:::-;8203:42;;8263:64;8279:47;;;;;;;;;;;;;;-1:-1:-1;;;;;8279:47:6;;;8319:6;8279:14;:47::i;8263:64::-;8256:71;8102:233;-1:-1:-1;;;;8102:233:6:o;192:159:37:-;266:7;328:5;335;311:30;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;-1:-1;;;;;311:30:37;;;;;;;;;;;-1:-1:-1;311:30:37;;;26:21:-1;;;-1:-1;;22:32;6:49;;311:30:37;;;;;;301:41;;;;;;;;;192:159;-1:-1:-1;;;;;192:159:37:o;1766:425:6:-;1830:4;1847:20;1870:29;1891:7;1870:20;:29::i;:::-;1847:52;;2050:3;1978:68;1991:54;;;;;;;;;;;;;;;;;;2038:6;1991:14;:54::i;1978:68::-;:75;;:143;;;;2057:64;2070:50;;;;;;;;;;;;;;;;;;2113:6;2070:14;:50::i;2057:64::-;1974:187;;;2145:4;2138:11;;;;;1974:187;-1:-1:-1;2178:5:6;;1766:425;-1:-1:-1;;1766:425:6:o;359:165:37:-;439:7;501:5;508;484:30;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;484:30:37;;;;;;;;;;-1:-1:-1;484:30:37;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;484:30:37;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;484:30:37;;;474:41;;;;;;459:57;;359:165;;;;:::o;3123:1367:6:-;3198:16;3389:28;3420:46;3436:29;;;;;;;;;;;;;;-1:-1:-1;;;;;3436:29:6;;;:14;:29::i;:::-;3420:15;:46::i;:::-;3389:77;-1:-1:-1;3477:24:6;3512:13;;;3588:342;3604:11;:18;3600:1;:22;3588:342;;;3654:64;3670:47;;;;;;;;;;;;;;-1:-1:-1;;;;;3670:47:6;;;3702:11;3714:1;3702:14;;;;;;;;;;;;;;3670;:47::i;3654:64::-;3644:74;;3742:1;3738:5;;3733:186;3749:7;:14;3745:1;:18;3733:186;;;3807:45;3821:7;3829:1;3821:10;;;;;;;;;;;;;;3833;3845:6;3807:13;:45::i;:::-;-1:-1:-1;;;;;3793:59:6;;3789:115;;3877:7;;;;;3789:115;3765:3;;3733:186;;;3624:3;;;;;3588:342;;;3940:23;3980:5;3966:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;3966:20:6;;3940:46;;4005:1;3997:9;;4017:13;4050:1;4046:5;;4041:418;4057:11;:18;4053:1;:22;4041:418;;;4107:64;4123:47;;;;;;;;;;;;;;-1:-1:-1;;;;;4123:47:6;;;4155:11;4167:1;4155:14;;;;;;;4107:64;4097:74;;4195:1;4191:5;;4186:262;4202:7;:14;4198:1;:18;4186:262;;;4250:45;4264:7;4272:1;4264:10;;;;;;;;;;;;;;4276;4288:6;4250:13;:45::i;:::-;4242:53;-1:-1:-1;;;;;;4318:19:6;;;4314:119;;4378:5;4362:6;4369:5;4362:13;;;;;;;;-1:-1:-1;;;;;4362:21:6;;;:13;;;;;;;;;;;:21;4406:7;;;;;4314:119;4218:3;;;;;4186:262;;;4077:3;;;;;4041:418;;;-1:-1:-1;4476:6:6;3123:1367;-1:-1:-1;;;;;;;;3123:1367:6:o;202:412:40:-;260:13;318:5;340:6;335:236;356:10;:17;352:1;:21;335:236;;;395:9;407:10;418:1;407:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;439:10:40;;;;;;:24;;-1:-1:-1;;;;;;;;;;;;453:10:40;;;;439:24;435:92;;;-1:-1:-1;;496:9:40;;;;:14;489:22;;435:92;557:2;541:10;552:1;541:13;;;;;;;;;;;:18;-1:-1:-1;;;;;541:18:40;;;;;;;;-1:-1:-1;;375:3:40;;335:236;;;-1:-1:-1;595:10:40;202:412;-1:-1:-1;;202:412:40:o;532:159:37:-;606:7;668:5;675;651:30;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;651:30:37;;;;;-1:-1:-1;651:30:37;;;26:21:-1;;;6:49;;651:30:37;;;;;641:41;;;;;;;;;532:159;-1:-1:-1;;;;;532:159:37:o;49:135::-;107:7;169:4;152:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;152:22:37;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;152:22:37;;;142:33;;;;;;127:49;;49:135;;;:::o;1552:341:41:-;1672:14;;;1684:1;1672:14;;;;;;;;;1613;;;;1672;;;;1613;;105:10:-1;1672:14:41;88:34:-1;136:17;;-1:-1;1672:14:41;1640:46;;1741:2;1723:14;:20;;;;1697:14;1712:1;1697:17;;;;;;;;;;;;;:47;;;;;;;;;;;1799:1;1781:14;:19;;;;1755:14;1770:1;1755:17;;;;;;;;;;;;;:46;;;;;;;;;;;1838:14;1812;1827:1;1812:17;;;;;;;;:41;;;;:17;;;;;;;;;;;:41;1871:14;-1:-1:-1;1552:341:41;;;:::o;5995:642:6:-;6078:4;6095:9;6107:1;6095:13;;6119:35;6165:15;6227:6;-1:-1:-1;;;;;6212:39:6;;6252:1;6212:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6212:42:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6212:42:6;;;;;;39:16:-1;36:1;17:17;2:54;101:4;6212:42:6;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;6212:42:6;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;6274:1:6;;-1:-1:-1;6212:42:6;;-1:-1:-1;;;;;6265:342:6;6281:18;:25;6277:1;:29;6265:342;;;6364:6;-1:-1:-1;;;;;6349:32:6;;6382:18;6401:1;6382:21;;;;;;;;;;;;;;6349:55;;;;;;;;;;;;;-1:-1:-1;;;;;6349:55:6;-1:-1:-1;;;;;6349:55:6;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6349:55:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6349:55:6;;;;;;39:16:-1;36:1;17:17;2:54;101:4;6349:55:6;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:3;5:12;;2:2;;;30:1;27;20:12;2:2;6349:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;6328:76:6;;-1:-1:-1;6328:76:6;;-1:-1:-1;6419:177:6;;-1:-1:-1;;;;;;;6419:177:6;6478:18;6497:1;6478:21;;;;;;;;;;;;;;-1:-1:-1;;;;;6459:55:6;;6515:9;6459:66;;;;;;;;;;;;;-1:-1:-1;;;;;6459:66:6;-1:-1:-1;;;;;6459:66:6;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6459:66:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6459:66:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6459:66:6;6455:126;;;6557:4;6550:11;;;;;;;6455:126;6308:3;;;;;6265:342;;;-1:-1:-1;6624:5:6;;5995:642;-1:-1:-1;;;;;5995:642:6:o;1715:644:40:-;1832:13;;;1842:2;1832:13;;;;;;;;;1779;;;;1832;;;;21:6:-1;;104:10;1832:13:40;87:34:-1;135:17;;-1:-1;;1805:40:40;-1:-1:-1;1856:14:40;;1906:230;1922:2;1918:1;:6;1906:230;;;1993:1;:5;;1987:1;:12;1971:28;;-1:-1:-1;;;;;;2020:9:40;;;2016:109;;2075:4;2050:11;2062:9;2050:22;;;;;;;;;;;:29;-1:-1:-1;;;;;2050:29:40;;;;;;;;-1:-1:-1;2098:11:40;;;;;2016:109;-1:-1:-1;1926:3:40;;1906:230;;;2146:31;2190:9;2180:20;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;2180:20:40;87:34:-1;135:17;;-1:-1;2180:20:40;;2146:54;;2220:1;2216:5;;2211:97;2227:9;2223:1;:13;2211:97;;;2282:11;2294:1;2282:14;;;;;;;;;;;;;;;;2258:18;2277:1;2258:21;;;;;;;;;;;:38;-1:-1:-1;;;;;2258:38:40;;;;;;;;-1:-1:-1;2238:3:40;;;;;2211:97;;4498:415:6;4593:7;4613:13;4629:87;4645:70;;;;;;;;;;;;;;-1:-1:-1;;;;;4645:70:6;;;4685:29;4706:7;4685:20;:29::i;:::-;4645:14;:70::i;4629:87::-;4613:103;-1:-1:-1;;;;;;4731:19:6;;;4727:151;;4771:10;:47;;;;4812:6;-1:-1:-1;;;;;4785:33:6;4794:5;-1:-1:-1;;;;;4785:21:6;;:23;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4785:23:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4785:23:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4785:23:6;-1:-1:-1;;;;;4785:33:6;;4771:47;4767:100;;;4846:5;-1:-1:-1;4839:12:6;;4767:100;4903:1;4888:17;;;4498:415;;;;;;:::o",
  "source": "pragma solidity 0.5.8;\r\n\r\nimport \"../STRGetter.sol\";\r\n\r\n/**\r\n * @title Registry contract for issuers to register their security tokens\r\n */\r\ncontract MockSTRGetter is STRGetter {\r\n    /// @notice It is a dummy function\r\n    /// Alert! Alert! Do NOT use it for the mainnet release\r\n\r\n    function newFunction() public pure returns (uint256) {\r\n        return 99;\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:/mspace/polymath-core/contracts/mocks/MockSTRGetter.sol",
  "ast": {
    "absolutePath": "/C/mspace/polymath-core/contracts/mocks/MockSTRGetter.sol",
    "exportedSymbols": {
      "MockSTRGetter": [
        22132
      ]
    },
    "id": 22133,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22120,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:57"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/STRGetter.sol",
        "file": "../STRGetter.sol",
        "id": 22121,
        "nodeType": "ImportDirective",
        "scope": 22133,
        "sourceUnit": 2754,
        "src": "26:26:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22122,
              "name": "STRGetter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2753,
              "src": "167:9:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_STRGetter_$2753",
                "typeString": "contract STRGetter"
              }
            },
            "id": 22123,
            "nodeType": "InheritanceSpecifier",
            "src": "167:9:57"
          }
        ],
        "contractDependencies": [
          2753,
          53375
        ],
        "contractKind": "contract",
        "documentation": "@title Registry contract for issuers to register their security tokens\r",
        "fullyImplemented": true,
        "id": 22132,
        "linearizedBaseContracts": [
          22132,
          2753,
          53375
        ],
        "name": "MockSTRGetter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 22130,
              "nodeType": "Block",
              "src": "340:28:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3939",
                    "id": 22128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "358:2:57",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_99_by_1",
                      "typeString": "int_const 99"
                    },
                    "value": "99"
                  },
                  "functionReturnParameters": 22127,
                  "id": 22129,
                  "nodeType": "Return",
                  "src": "351:9:57"
                }
              ]
            },
            "documentation": "Alert! Alert! Do NOT use it for the mainnet release",
            "id": 22131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newFunction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:57"
            },
            "returnParameters": {
              "id": 22127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22126,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22131,
                  "src": "331:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "330:9:57"
            },
            "scope": 22132,
            "src": "287:81:57",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 22133,
        "src": "141:232:57"
      }
    ],
    "src": "0:375:57"
  },
  "legacyAST": {
    "absolutePath": "/C/mspace/polymath-core/contracts/mocks/MockSTRGetter.sol",
    "exportedSymbols": {
      "MockSTRGetter": [
        22132
      ]
    },
    "id": 22133,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22120,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:57"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/STRGetter.sol",
        "file": "../STRGetter.sol",
        "id": 22121,
        "nodeType": "ImportDirective",
        "scope": 22133,
        "sourceUnit": 2754,
        "src": "26:26:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22122,
              "name": "STRGetter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2753,
              "src": "167:9:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_STRGetter_$2753",
                "typeString": "contract STRGetter"
              }
            },
            "id": 22123,
            "nodeType": "InheritanceSpecifier",
            "src": "167:9:57"
          }
        ],
        "contractDependencies": [
          2753,
          53375
        ],
        "contractKind": "contract",
        "documentation": "@title Registry contract for issuers to register their security tokens\r",
        "fullyImplemented": true,
        "id": 22132,
        "linearizedBaseContracts": [
          22132,
          2753,
          53375
        ],
        "name": "MockSTRGetter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 22130,
              "nodeType": "Block",
              "src": "340:28:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3939",
                    "id": 22128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "358:2:57",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_99_by_1",
                      "typeString": "int_const 99"
                    },
                    "value": "99"
                  },
                  "functionReturnParameters": 22127,
                  "id": 22129,
                  "nodeType": "Return",
                  "src": "351:9:57"
                }
              ]
            },
            "documentation": "Alert! Alert! Do NOT use it for the mainnet release",
            "id": 22131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newFunction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:57"
            },
            "returnParameters": {
              "id": 22127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22126,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 22131,
                  "src": "331:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "330:9:57"
            },
            "scope": 22132,
            "src": "287:81:57",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 22133,
        "src": "141:232:57"
      }
    ],
    "src": "0:375:57"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-05T12:37:19.128Z",
  "devdoc": {
    "methods": {
      "getExpiryLimit()": {
        "return": "Expiry limit\r"
      },
      "getIsFeeInPoly()": {
        "return": "true = poly, false = usd\r"
      },
      "getSTFactoryAddressOfVersion(uint256)": {
        "params": {
          "_protocolVersion": "Packed protocol version\r"
        }
      },
      "getSecurityTokenAddress(string)": {
        "params": {
          "_ticker": "is the ticker of the security token\r"
        },
        "return": "address\r"
      },
      "getSecurityTokenData(address)": {
        "params": {
          "_securityToken": "is the address of the security token.\r"
        },
        "return": "string is the ticker of the security Token.\raddress is the issuer of the security Token.\rstring is the details of the security token.\ruint256 is the timestamp at which security Token was deployed.\r"
      },
      "getTickerDetails(string)": {
        "params": {
          "_ticker": "is the ticker symbol\r"
        },
        "return": "address\ruint256\ruint256\rstring\rbool\r"
      },
      "getTickerOwner(string)": {
        "params": {
          "_ticker": "Ticker whose owner need to determine\r"
        },
        "return": "address Address of the owner\r"
      },
      "getTickerStatus(string)": {
        "params": {
          "_ticker": "Ticker whose status need to determine\r"
        },
        "return": "bool\r"
      },
      "getTickersByOwner(address)": {
        "params": {
          "_owner": "is the address which owns the list of tickers\r"
        }
      },
      "getTokens()": {
        "details": "Intention is that this is called off-chain so block gas limit is not relevant\r"
      },
      "getTokensByDelegate(address)": {
        "details": "Intention is that this is called off-chain so block gas limit is not relevant\r",
        "params": {
          "_delegate": "is the address for the delegate\r"
        }
      },
      "getTokensByOwner(address)": {
        "details": "Intention is that this is called off-chain so block gas limit is not relevant\r",
        "params": {
          "_owner": "is the address which owns the list of tickers\r"
        }
      }
    },
    "title": "Registry contract for issuers to register their security tokens\r"
  },
  "userdoc": {
    "methods": {
      "getArrayAddress(bytes32)": {
        "notice": "getArrayBytes32(keccak256(abi.encodePacked(\"tokensOwnedByOwner\", 0x1)).length;"
      },
      "getExpiryLimit()": {
        "notice": "Gets the expiry limit\r"
      },
      "getIsFeeInPoly()": {
        "notice": "Gets the fee currency\r"
      },
      "getLatestProtocolVersion()": {
        "notice": "Gets Protocol version\r"
      },
      "getSTFactoryAddress()": {
        "notice": "Returns the current STFactory Address\r"
      },
      "getSTFactoryAddressOfVersion(uint256)": {
        "notice": "Returns the STFactory Address of a particular version\r"
      },
      "getSecurityTokenAddress(string)": {
        "notice": "Returns the security token address by ticker symbol\r"
      },
      "getSecurityTokenData(address)": {
        "notice": "Returns the security token data by address\r"
      },
      "getTickerDetails(string)": {
        "notice": "Returns the owner and timestamp for a given ticker\r"
      },
      "getTickerOwner(string)": {
        "notice": "Gets the owner of the ticker\r"
      },
      "getTickerStatus(string)": {
        "notice": "Gets the status of the ticker\r"
      },
      "getTickersByOwner(address)": {
        "notice": "Returns the list of tickers owned by the selected address\r"
      },
      "getTokens()": {
        "notice": "Returns the list of all tokens\r"
      },
      "getTokensByDelegate(address)": {
        "notice": "Returns the list of tokens to which the delegate has some access\r"
      },
      "getTokensByOwner(address)": {
        "notice": "Returns the list of tokens owned by the selected address\r"
      },
      "getUintValue(bytes32)": {
        "notice": "string _name = getString(keccak256(abi.encodePacked(\"registeredSymbols_name\", \"TOKEN\"));"
      },
      "newFunction()": {
        "notice": "Alert! Alert! Do NOT use it for the mainnet release"
      }
    }
  }
}