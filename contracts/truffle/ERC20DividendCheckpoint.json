{
  "contractName": "ERC20DividendCheckpoint",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_investors",
          "type": "address[]"
        },
        {
          "name": "_withholding",
          "type": "uint256"
        }
      ],
      "name": "setWithholdingFixed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EXCLUDED_ADDRESS_LIMIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reclaimETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getInitFunction",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "getDividendData",
      "outputs": [
        {
          "name": "created",
          "type": "uint256"
        },
        {
          "name": "maturity",
          "type": "uint256"
        },
        {
          "name": "expiry",
          "type": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "claimedAmount",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ADMIN",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTreasuryWallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "pullDividendPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "investorWithheld",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "name": "_payees",
          "type": "address[]"
        }
      ],
      "name": "pushDividendPaymentToAddresses",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_investor",
          "type": "address"
        },
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "isClaimed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "name": "_payee",
          "type": "address"
        }
      ],
      "name": "calculateDividend",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_checkpointId",
          "type": "uint256"
        }
      ],
      "name": "getDividendIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "polyToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        }
      ],
      "name": "updateDividendDates",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "configure",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "withholdingTax",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_checkpointId",
          "type": "uint256"
        }
      ],
      "name": "getCheckpointData",
      "outputs": [
        {
          "name": "investors",
          "type": "address[]"
        },
        {
          "name": "balances",
          "type": "uint256[]"
        },
        {
          "name": "withholdings",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dividends",
      "outputs": [
        {
          "name": "checkpointId",
          "type": "uint256"
        },
        {
          "name": "created",
          "type": "uint256"
        },
        {
          "name": "maturity",
          "type": "uint256"
        },
        {
          "name": "expiry",
          "type": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "claimedAmount",
          "type": "uint256"
        },
        {
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "name": "reclaimed",
          "type": "bool"
        },
        {
          "name": "totalWithheld",
          "type": "uint256"
        },
        {
          "name": "totalWithheldWithdrawn",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_investor",
          "type": "address"
        },
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "isExcluded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_investors",
          "type": "address[]"
        },
        {
          "name": "_withholding",
          "type": "uint256[]"
        }
      ],
      "name": "setWithholding",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenContract",
          "type": "address"
        }
      ],
      "name": "reclaimERC20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dividendTokens",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "OPERATOR",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "changeWallet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDividendsData",
      "outputs": [
        {
          "name": "createds",
          "type": "uint256[]"
        },
        {
          "name": "maturitys",
          "type": "uint256[]"
        },
        {
          "name": "expirys",
          "type": "uint256[]"
        },
        {
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "name": "claimedAmounts",
          "type": "uint256[]"
        },
        {
          "name": "names",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "excluded",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPermissions",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_excluded",
          "type": "address[]"
        }
      ],
      "name": "setDefaultExcluded",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "name": "_start",
          "type": "uint256"
        },
        {
          "name": "_end",
          "type": "uint256"
        }
      ],
      "name": "pushDividendPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDefaultExcluded",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "getDividendProgress",
      "outputs": [
        {
          "name": "investors",
          "type": "address[]"
        },
        {
          "name": "resultClaimed",
          "type": "bool[]"
        },
        {
          "name": "resultExcluded",
          "type": "bool[]"
        },
        {
          "name": "resultWithheld",
          "type": "uint256[]"
        },
        {
          "name": "resultAmount",
          "type": "uint256[]"
        },
        {
          "name": "resultBalance",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDataStore",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createCheckpoint",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_securityToken",
          "type": "address"
        },
        {
          "name": "_polyToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_checkpointId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "ERC20DividendDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_payee",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_withheld",
          "type": "uint256"
        }
      ],
      "name": "ERC20DividendClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_claimedAmount",
          "type": "uint256"
        }
      ],
      "name": "ERC20DividendReclaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_withheldAmount",
          "type": "uint256"
        }
      ],
      "name": "ERC20DividendWithholdingWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_excluded",
          "type": "address[]"
        }
      ],
      "name": "SetDefaultExcludedAddresses",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_investors",
          "type": "address[]"
        },
        {
          "indexed": false,
          "name": "_withholding",
          "type": "uint256[]"
        }
      ],
      "name": "SetWithholding",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_investors",
          "type": "address[]"
        },
        {
          "indexed": false,
          "name": "_withholding",
          "type": "uint256"
        }
      ],
      "name": "SetWithholdingFixed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_oldWallet",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newWallet",
          "type": "address"
        }
      ],
      "name": "SetWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_expiry",
          "type": "uint256"
        }
      ],
      "name": "UpdateDividendDates",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpause",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "createDividend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_checkpointId",
          "type": "uint256"
        },
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "createDividendWithCheckpoint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_excluded",
          "type": "address[]"
        },
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "createDividendWithExclusions",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_checkpointId",
          "type": "uint256"
        },
        {
          "name": "_excluded",
          "type": "address[]"
        },
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "createDividendWithCheckpointAndExclusions",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "reclaimDividend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "withdrawWithholding",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_investors\",\"type\":\"address[]\"},{\"name\":\"_withholding\",\"type\":\"uint256\"}],\"name\":\"setWithholdingFixed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXCLUDED_ADDRESS_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInitFunction\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maturity\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_excluded\",\"type\":\"address[]\"},{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"createDividendWithExclusions\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"getDividendData\",\"outputs\":[{\"name\":\"created\",\"type\":\"uint256\"},{\"name\":\"maturity\",\"type\":\"uint256\"},{\"name\":\"expiry\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"claimedAmount\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTreasuryWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"pullDividendPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"withdrawWithholding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investorWithheld\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maturity\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_checkpointId\",\"type\":\"uint256\"},{\"name\":\"_excluded\",\"type\":\"address[]\"},{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"createDividendWithCheckpointAndExclusions\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"name\":\"_payees\",\"type\":\"address[]\"}],\"name\":\"pushDividendPaymentToAddresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"},{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"isClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"calculateDividend\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_checkpointId\",\"type\":\"uint256\"}],\"name\":\"getDividendIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maturity\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_checkpointId\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"createDividendWithCheckpoint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"polyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"name\":\"_maturity\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"updateDividendDates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"configure\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"withholdingTax\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_checkpointId\",\"type\":\"uint256\"}],\"name\":\"getCheckpointData\",\"outputs\":[{\"name\":\"investors\",\"type\":\"address[]\"},{\"name\":\"balances\",\"type\":\"uint256[]\"},{\"name\":\"withholdings\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dividends\",\"outputs\":[{\"name\":\"checkpointId\",\"type\":\"uint256\"},{\"name\":\"created\",\"type\":\"uint256\"},{\"name\":\"maturity\",\"type\":\"uint256\"},{\"name\":\"expiry\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"claimedAmount\",\"type\":\"uint256\"},{\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"name\":\"reclaimed\",\"type\":\"bool\"},{\"name\":\"totalWithheld\",\"type\":\"uint256\"},{\"name\":\"totalWithheldWithdrawn\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"},{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"isExcluded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investors\",\"type\":\"address[]\"},{\"name\":\"_withholding\",\"type\":\"uint256[]\"}],\"name\":\"setWithholding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"reclaimERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dividendTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPERATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"changeWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"reclaimDividend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDividendsData\",\"outputs\":[{\"name\":\"createds\",\"type\":\"uint256[]\"},{\"name\":\"maturitys\",\"type\":\"uint256[]\"},{\"name\":\"expirys\",\"type\":\"uint256[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"name\":\"claimedAmounts\",\"type\":\"uint256[]\"},{\"name\":\"names\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maturity\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"createDividend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"securityToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"excluded\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPermissions\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_excluded\",\"type\":\"address[]\"}],\"name\":\"setDefaultExcluded\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"pushDividendPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDefaultExcluded\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"getDividendProgress\",\"outputs\":[{\"name\":\"investors\",\"type\":\"address[]\"},{\"name\":\"resultClaimed\",\"type\":\"bool[]\"},{\"name\":\"resultExcluded\",\"type\":\"bool[]\"},{\"name\":\"resultWithheld\",\"type\":\"uint256[]\"},{\"name\":\"resultAmount\",\"type\":\"uint256[]\"},{\"name\":\"resultBalance\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDataStore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createCheckpoint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_securityToken\",\"type\":\"address\"},{\"name\":\"_polyToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_depositor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_checkpointId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_expiry\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"ERC20DividendDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_payee\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_withheld\",\"type\":\"uint256\"}],\"name\":\"ERC20DividendClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_claimer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_claimedAmount\",\"type\":\"uint256\"}],\"name\":\"ERC20DividendReclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_claimer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_withheldAmount\",\"type\":\"uint256\"}],\"name\":\"ERC20DividendWithholdingWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_excluded\",\"type\":\"address[]\"}],\"name\":\"SetDefaultExcludedAddresses\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_investors\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"_withholding\",\"type\":\"uint256[]\"}],\"name\":\"SetWithholding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_investors\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"_withholding\",\"type\":\"uint256\"}],\"name\":\"SetWithholdingFixed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oldWallet\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"SetWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"UpdateDividendDates\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"calculateDividend(uint256,address)\":{\"params\":{\"_dividendIndex\":\"Dividend to calculate\\r\",\"_payee\":\"Affected investor address\\r\"},\"return\":\"claim, withheld amounts\\r\"},\"changeWallet(address)\":{\"params\":{\"_wallet\":\"Ethereum account address to receive reclaimed dividends and tax\\r\"}},\"configure(address)\":{\"params\":{\"_wallet\":\"Ethereum account address to receive reclaimed dividends and tax\\r\"}},\"constructor\":{\"params\":{\"_securityToken\":\"Address of the security token\\r\"}},\"createCheckpoint()\":{\"return\":\"Checkpoint ID\\r\"},\"createDividend(uint256,uint256,address,uint256,bytes32)\":{\"params\":{\"_amount\":\"Amount of specified token for dividend\\r\",\"_expiry\":\"Time until dividend can no longer be paid, and can be reclaimed by issuer\\r\",\"_maturity\":\"Time from which dividend can be paid\\r\",\"_name\":\"Name/Title for identification\\r\",\"_token\":\"Address of ERC20 token in which dividend is to be denominated\\r\"}},\"createDividendWithCheckpoint(uint256,uint256,address,uint256,uint256,bytes32)\":{\"params\":{\"_amount\":\"Amount of specified token for dividend\\r\",\"_checkpointId\":\"Checkpoint id from which to create dividends\\r\",\"_expiry\":\"Time until dividend can no longer be paid, and can be reclaimed by issuer\\r\",\"_maturity\":\"Time from which dividend can be paid\\r\",\"_name\":\"Name/Title for identification\\r\",\"_token\":\"Address of ERC20 token in which dividend is to be denominated\\r\"}},\"createDividendWithCheckpointAndExclusions(uint256,uint256,address,uint256,uint256,address[],bytes32)\":{\"params\":{\"_amount\":\"Amount of specified token for dividend\\r\",\"_checkpointId\":\"Checkpoint id from which to create dividends\\r\",\"_excluded\":\"List of addresses to exclude\\r\",\"_expiry\":\"Time until dividend can no longer be paid, and can be reclaimed by issuer\\r\",\"_maturity\":\"Time from which dividend can be paid\\r\",\"_name\":\"Name/Title for identification\\r\",\"_token\":\"Address of ERC20 token in which dividend is to be denominated\\r\"}},\"createDividendWithExclusions(uint256,uint256,address,uint256,address[],bytes32)\":{\"params\":{\"_amount\":\"Amount of specified token for dividend\\r\",\"_excluded\":\"List of addresses to exclude\\r\",\"_expiry\":\"Time until dividend can no longer be paid, and can be reclaimed by issuer\\r\",\"_maturity\":\"Time from which dividend can be paid\\r\",\"_name\":\"Name/Title for identification\\r\",\"_token\":\"Address of ERC20 token in which dividend is to be denominated\\r\"}},\"getCheckpointData(uint256)\":{\"params\":{\"_checkpointId\":\"Checkpoint Id to query for\\r\"},\"return\":\"address[] list of investors\\ruint256[] investor balances\\ruint256[] investor withheld percentages\\r\"},\"getDefaultExcluded()\":{\"return\":\"List of excluded addresses\\r\"},\"getDividendData(uint256)\":{\"return\":\"uint256 timestamp of dividend creation\\ruint256 timestamp of dividend maturity\\ruint256 timestamp of dividend expiry\\ruint256 amount of dividend\\ruint256 claimed amount of dividend\\rbytes32 name of dividend\\r\"},\"getDividendIndex(uint256)\":{\"params\":{\"_checkpointId\":\"Checkpoint id to query\\r\"},\"return\":\"uint256[]\\r\"},\"getDividendProgress(uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to withdraw from\\r\"},\"return\":\"address[] list of investors\\rbool[] whether investor has claimed\\rbool[] whether investor is excluded\\ruint256[] amount of withheld tax (estimate if not claimed)\\ruint256[] amount of claim (estimate if not claimeed)\\ruint256[] investor balance\\r\"},\"getDividendsData()\":{\"return\":\"uint256[] timestamp of dividends creation\\ruint256[] timestamp of dividends maturity\\ruint256[] timestamp of dividends expiry\\ruint256[] amount of dividends\\ruint256[] claimed amount of dividends\\rbytes32[] name of dividends\\r\"},\"getInitFunction()\":{\"return\":\"bytes4\\r\"},\"getPermissions()\":{\"return\":\"bytes32 array\\r\"},\"isClaimed(address,uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to withdraw from\\r\"},\"return\":\"bool whether the address has claimed\\r\"},\"isExcluded(address,uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to withdraw from\\r\"},\"return\":\"bool whether the address is excluded\\r\"},\"pullDividendPayment(uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to pull\\r\"}},\"pushDividendPayment(uint256,uint256,uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to push\\r\",\"_end\":\"Index in investor list at which to stop pushing dividends\\r\",\"_start\":\"Index in investor list at which to start pushing dividends\\r\"}},\"pushDividendPaymentToAddresses(uint256,address[])\":{\"params\":{\"_dividendIndex\":\"Dividend to push\\r\",\"_payees\":\"Addresses to which to push the dividend\\r\"}},\"reclaimDividend(uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to reclaim\\r\"}},\"reclaimERC20(address)\":{\"details\":\"We duplicate here due to the overriden owner & onlyOwner\\r\",\"params\":{\"_tokenContract\":\"The address of the token contract\\r\"}},\"reclaimETH()\":{\"details\":\"We duplicate here due to the overriden owner & onlyOwner\\r\"},\"setDefaultExcluded(address[])\":{\"params\":{\"_excluded\":\"Addresses of investors\\r\"}},\"setWithholding(address[],uint256[])\":{\"params\":{\"_investors\":\"Addresses of investors\\r\",\"_withholding\":\"Withholding tax for individual investors (multiplied by 10**16)\\r\"}},\"setWithholdingFixed(address[],uint256)\":{\"params\":{\"_investors\":\"Addresses of investor\\r\",\"_withholding\":\"Withholding tax for all investors (multiplied by 10**16)\\r\"}},\"updateDividendDates(uint256,uint256,uint256)\":{\"details\":\"NB - setting the maturity of a currently matured dividend to a future date\\rwill effectively refreeze claims on that dividend until the new maturity date passes\\r dev NB - setting the expiry date to a past date will mean no more payments can be pulled\\ror pushed out of a dividend\\r\",\"params\":{\"_dividendIndex\":\"Dividend to withdraw from\\r\",\"_expiry\":\"updated expiry date\\r\",\"_maturity\":\"updated maturity date\\r\"}},\"withdrawWithholding(uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to withdraw from\\r\"}}},\"title\":\"Checkpoint module for issuing ERC20 dividends\\r\"},\"userdoc\":{\"methods\":{\"calculateDividend(uint256,address)\":{\"notice\":\"Calculate amount of dividends claimable\\r\"},\"changeWallet(address)\":{\"notice\":\"Function used to change wallet address\\r\"},\"configure(address)\":{\"notice\":\"Function used to intialize the contract variables\\r\"},\"constructor\":\"Constructor\\r\",\"createCheckpoint()\":{\"notice\":\"Creates a checkpoint on the security token\\r\"},\"createDividend(uint256,uint256,address,uint256,bytes32)\":{\"notice\":\"Creates a dividend and checkpoint for the dividend\\r\"},\"createDividendWithCheckpoint(uint256,uint256,address,uint256,uint256,bytes32)\":{\"notice\":\"Creates a dividend with a provided checkpoint\\r\"},\"createDividendWithCheckpointAndExclusions(uint256,uint256,address,uint256,uint256,address[],bytes32)\":{\"notice\":\"Creates a dividend with a provided checkpoint\\r\"},\"createDividendWithExclusions(uint256,uint256,address,uint256,address[],bytes32)\":{\"notice\":\"Creates a dividend and checkpoint for the dividend\\r\"},\"getCheckpointData(uint256)\":{\"notice\":\"Retrieves list of investors, their balances, and their current withholding tax percentage\\r\"},\"getDataStore()\":{\"notice\":\"used to return the data store address of securityToken\\r\"},\"getDefaultExcluded()\":{\"notice\":\"Return the default excluded addresses\\r\"},\"getDividendData(uint256)\":{\"notice\":\"Get static dividend data\\r\"},\"getDividendIndex(uint256)\":{\"notice\":\"Get the index according to the checkpoint id\\r\"},\"getDividendProgress(uint256)\":{\"notice\":\"Retrieves list of investors, their claim status and whether they are excluded\\r\"},\"getDividendsData()\":{\"notice\":\"Get static dividend data\\r\"},\"getInitFunction()\":{\"notice\":\"Init function i.e generalise function to maintain the structure of the module contract\\r\"},\"getPermissions()\":{\"notice\":\"Return the permissions flag that are associated with this module\\r\"},\"getTreasuryWallet()\":{\"notice\":\"Returns the treasury wallet address\\r\"},\"isClaimed(address,uint256)\":{\"notice\":\"Checks whether an address has claimed a dividend\\r\"},\"isExcluded(address,uint256)\":{\"notice\":\"Checks whether an address is excluded from claiming a dividend\\r\"},\"pause()\":{\"notice\":\"Pause (overridden function)\\r\"},\"pullDividendPayment(uint256)\":{\"notice\":\"Investors can pull their own dividends\\r\"},\"pushDividendPayment(uint256,uint256,uint256)\":{\"notice\":\"Issuer can push dividends using the investor list from the security token\\r\"},\"pushDividendPaymentToAddresses(uint256,address[])\":{\"notice\":\"Issuer can push dividends to provided addresses\\r\"},\"reclaimDividend(uint256)\":{\"notice\":\"Issuer can reclaim remaining unclaimed dividend amounts, for expired dividends\\r\"},\"reclaimERC20(address)\":{\"notice\":\"Reclaims ERC20Basic compatible tokens\\r\"},\"reclaimETH()\":{\"notice\":\"Reclaims ETH\\r\"},\"setDefaultExcluded(address[])\":{\"notice\":\"Function to clear and set list of excluded addresses used for future dividends\\r\"},\"setWithholding(address[],uint256[])\":{\"notice\":\"Function to set withholding tax rates for investors\\r\"},\"setWithholdingFixed(address[],uint256)\":{\"notice\":\"Function to set withholding tax rates for investors\\r\"},\"unpause()\":{\"notice\":\"Unpause (overridden function)\\r\"},\"updateDividendDates(uint256,uint256,uint256)\":{\"notice\":\"Allows issuer to change maturity / expiry dates for dividends\\r\"},\"withdrawWithholding(uint256)\":{\"notice\":\"Allows issuer to withdraw withheld tax\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/C/mspace/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpoint.sol\":\"ERC20DividendCheckpoint\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/mspace/polymath-core/contracts/Pausable.sol\":{\"keccak256\":\"0x1532ed18c39de5d1fd35a244895d495d444566146125e0587d8e536337b68a49\",\"urls\":[\"bzzr://6f570268839a2980c2edf1200ca406ba7faffa5c4c726fa5972c411470636163\"]},\"/C/mspace/polymath-core/contracts/interfaces/ICheckPermission.sol\":{\"keccak256\":\"0xda83163f6d68db9b79ef8164d75cee0ceb542b8fdfda16127fc301c4ca9acd69\",\"urls\":[\"bzzr://0332bc3660b0e5059de7f20addfc495c18e3b532ebe2b6f025d0f9d7c35ca5a7\"]},\"/C/mspace/polymath-core/contracts/interfaces/IDataStore.sol\":{\"keccak256\":\"0xb41b686a022dcc47c39327aa32311fab47ae958cb798bb3f08cf44792db398fe\",\"urls\":[\"bzzr://034481827f48714e62cb1f7685e72ef0533cb7b5991da0232a67106e0cb1ed5c\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModule.sol\":{\"keccak256\":\"0xbe5b025f519bd373776ae04da7c99e5baeecc51ae5cfd56e304ccf65fb743f9f\",\"urls\":[\"bzzr://6ff0aa2de2d6b1a9801a7f3baa2500326cb94702c5a30ff3adbbcae060b14413\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModuleFactory.sol\":{\"keccak256\":\"0x233b5044aafc5a57bff374d32be347b5f58e0f7b4194084f5ac812963cee108b\",\"urls\":[\"bzzr://6d78d7157910cab1a9544e09476b2b96c23ec2fedc1c8c2ae12c755e0454b99e\"]},\"/C/mspace/polymath-core/contracts/interfaces/IOwnable.sol\":{\"keccak256\":\"0x6528d055b5ff83c131941447c0ea27f541f6c958b9851d5bf342905a8158fa1b\",\"urls\":[\"bzzr://c5c91f9f47829cc325e743f61821c9a05f173a824eaa50f44c32ae90209cfce0\"]},\"/C/mspace/polymath-core/contracts/interfaces/ISecurityToken.sol\":{\"keccak256\":\"0x3cf35b60d39aa6e45f9fdca61d1f9baeecbf91647dce9df7e61b4f1ae603d684\",\"urls\":[\"bzzr://5b51ef4a80ff96a6c53e29b7e342640faa3268f3679657bd3e28d2bf7f4f2e24\"]},\"/C/mspace/polymath-core/contracts/modules/Checkpoint/Dividend/DividendCheckpoint.sol\":{\"keccak256\":\"0xaa57dff63487081ca838d34d7d6d442c54317b6af9439e7630e6ce3e2eb6935e\",\"urls\":[\"bzzr://74523a57481611e71949fa9707907a490071d0d83c8e7cbb93da82fdafb66787\"]},\"/C/mspace/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpoint.sol\":{\"keccak256\":\"0x35a4bfe65802d1e3562785447864ccb0b6c467b67cada69d3b2fde1ab3d2996d\",\"urls\":[\"bzzr://66fa5a3f9a898d016b43a7c6a7d90c66261004bb7bc364e03202174be2e1557e\"]},\"/C/mspace/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpointStorage.sol\":{\"keccak256\":\"0x573deb9e425c6b655b28c3c10d9e762c50cf7483083609131bfb8e9a2bb72d58\",\"urls\":[\"bzzr://5a6b8fc4908270087b1f7778c71043fe8e481082c2e61827098fa0ba9b97b1bb\"]},\"/C/mspace/polymath-core/contracts/modules/Checkpoint/ICheckpoint.sol\":{\"keccak256\":\"0x605d4cb98ae4d958be5cf9cc7313a7716c79ce99e0ebd3d440e2ab7d8075a844\",\"urls\":[\"bzzr://d8ace36a2427fd11abb7bfba25e6e78b701d2345c6eba42b7d75b0611c9f3f48\"]},\"/C/mspace/polymath-core/contracts/modules/Module.sol\":{\"keccak256\":\"0xb49b9a147ef1aea5f62b436a42b078bf6139fede6056d9979f706a646ff64a3c\",\"urls\":[\"bzzr://a146773b975c1f96e3357d8b754490544e98de97515d347c50f5043ac182e0b1\"]},\"/C/mspace/polymath-core/contracts/storage/modules/Checkpoint/Dividend/DividendCheckpointStorage.sol\":{\"keccak256\":\"0xcbafe3d6363c51a06bccba07a99bf6e1f4fb6492b7a0d2a28ee6c56292446ee2\",\"urls\":[\"bzzr://a3ea5fe0a3de0853ae3c7106dda10c81157b105021e572abca7ff291dc2017c1\"]},\"/C/mspace/polymath-core/contracts/storage/modules/ModuleStorage.sol\":{\"keccak256\":\"0xd65d5566179b3e69a8cf490312df6eeaab33a985cf04403f82a00e8ce23ab9a7\",\"urls\":[\"bzzr://931c9fd648267e95414b95d7c055a3477131c4815295bd0d37b8af9c2f00ddac\"]},\"openzeppelin-solidity/contracts/math/Math.sol\":{\"keccak256\":\"0x775160984ceb0931bf67e718fb23afd6fc2a5d38a6e2378ebb438a039ed2269e\",\"urls\":[\"bzzr://209e27ad1c13e3e9b157915e0269ee4c3b6f0a494660dcc4acf1faf102e1a7ad\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "293:11249:66:-;;;348:3:155;308:43;;215:26:3;;;-1:-1:-1;;;;;;215:26:3;;;1336:108:66;5:2:-1;;;;30:1;27;20:12;5:2;1336:108:66;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1336:108:66;;;;;;;879:13:157;:46;;-1:-1:-1;;;;;879:46:157;;;-1:-1:-1;;;;;;879:46:157;;;;;;;936:7;:20;;;;946:10;936:20;;;967:9;:32;;;;;;;;;;;;;;293:11249:66;;;;;;",
  "deployedSourceMap": "293:11249:66:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;293:11249:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5606:433:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5606:433:65;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;5606:433:65;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5606:433:65;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5606:433:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5606:433:65;;-1:-1:-1;;5606:433:65;;;-1:-1:-1;5606:433:65;;-1:-1:-1;;5606:433:65:i;:::-;;308:43:155;;;:::i;:::-;;;;;;;;;;;;;;;;2882:128:91;;;:::i;2330:104:65:-;;;:::i;:::-;;;;-1:-1:-1;;;;;;2330:104:65;;;;;;;;;;;;;;3607:453:66;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3607:453:66;;;;;;;;-1:-1:-1;;;;;3607:453:66;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3607:453:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3607:453:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3607:453:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3607:453:66;;-1:-1:-1;;3607:453:66;;;-1:-1:-1;3607:453:66;;-1:-1:-1;;3607:453:66:i;13784:570:65:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13784:570:65;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;350:39:157;;;:::i;3176:393:65:-;;;:::i;:::-;;;;-1:-1:-1;;;;;3176:393:65;;;;;;;;;;;;;;8293:425;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8293:425:65;;:::i;10896:641:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10896:641:66;;:::i;1859:51:155:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1859:51:155;-1:-1:-1;;;;;1859:51:155;;:::i;1891:97:91:-;;;:::i;4632:433:66:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4632:433:66;;;;;;;;-1:-1:-1;;;;;4632:433:66;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4632:433:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4632:433:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4632:433:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4632:433:66;;-1:-1:-1;;4632:433:66;;;-1:-1:-1;4632:433:66;;-1:-1:-1;;4632:433:66:i;6239:537:65:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6239:537:65;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6239:537:65;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6239:537:65;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6239:537:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6239:537:65;;-1:-1:-1;6239:537:65;;-1:-1:-1;;;;;6239:537:65:i;272:29:155:-;;;:::i;18260:234:65:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;18260:234:65;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;9511:640;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9511:640:65;;;;;;-1:-1:-1;;;;;9511:640:65;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;215:26:3;;;:::i;10316:617:65:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10316:617:65;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10316:617:65;;;;;;;;;;;;;;;;;2720:384:66;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;2720:384:66;;;;;;;;-1:-1:-1;;;;;2720:384:66;;;;;;;;;;;;;;;;;;;;:::i;612:23:157:-;;;:::i;11708:540:65:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11708:540:65;;;;;;;;;;;;:::i;2064:117::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2064:117:65;-1:-1:-1;;;;;2064:117:65;;:::i;1750:50:155:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1750:50:155;-1:-1:-1;;;;;1750:50:155;;:::i;16956:646:65:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16956:646:65;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16956:646:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16956:646:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16956:646:65;;;;;;;;;;;;;;;;;;;;;1552:27:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1552:27:155;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17816:244:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17816:244:65;;;;;;;;:::i;1726:93:91:-;;;:::i;4849:530:65:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4849:530:65;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4849:530:65;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4849:530:65;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4849:530:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4849:530:65;;;;;;;;-1:-1:-1;4849:530:65;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;4849:530:65;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4849:530:65;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4849:530:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4849:530:65;;-1:-1:-1;4849:530:65;;-1:-1:-1;;;;;4849:530:65:i;2414:347:91:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2414:347:91;-1:-1:-1;;;;;2414:347:91;;:::i;218:49:69:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;218:49:69;;:::i;396:45:157:-;;;:::i;2602:130:65:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2602:130:65;-1:-1:-1;;;;;2602:130:65;;:::i;9942:817:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9942:817:66;;:::i;12631:788:65:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12631:788:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12631:788:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12631:788:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12631:788:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12631:788:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12631:788:65;;;;;;;;;;;;;;;;;;;;;;;;;;;1893:309:66;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1893:309:66;;;;;;;;-1:-1:-1;;;;;1893:309:66;;;;;;;;;;;;;;;:::i;282:35:157:-;;;:::i;1643:25:155:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1643:25:155;;:::i;18631:240:65:-;;;:::i;251:22:157:-;;;:::i;3982:632:65:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3982:632:65;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3982:632:65;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3982:632:65;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3982:632:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3982:632:65;;-1:-1:-1;3982:632:65;;-1:-1:-1;;;;;3982:632:65:i;7098:1067::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7098:1067:65;;;;;;;;;;;;:::i;2994:104::-;;;:::i;14865:1759::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14865:1759:65;;:::i;2085:119:91:-;;;:::i;3684:129:65:-;;;:::i;5606:433::-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;929:26:65;5728:19;;;5720:57;;;;;-1:-1:-1;;;;;5720:57:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;5857:45;5877:10;5889:12;5857:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5857:45:65;;;;;;;;;;;;;;;;;;5918:9;5913:119;5937:10;:17;5933:1;:21;5913:119;;;6008:12;5976:14;:29;5991:10;6002:1;5991:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5976:29:65;;;;;;;;;;;-1:-1:-1;5976:29:65;:44;5956:3;;5913:119;;;;5606:433;;;:::o;308:43:155:-;;;;:::o;2882:128:91:-;2924:25;:23;:25::i;:::-;2960:42;;:10;;2988:4;2980:21;2960:42;;;;;;;;;2980:21;2960:10;:42;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2960:42:91;2882:128::o;2330:104:65:-;-1:-1:-1;;;;;2330:104:65;;:::o;3607:453:66:-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;3898:13:66;;:32;;;;;;;;3875:20;;-1:-1:-1;;;;;3898:13:66;;:30;;:32;;;;;;;;;;;;;;3875:20;3898:13;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;3898:32:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3898:32:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3898:32:66;;-1:-1:-1;3941:111:66;3984:9;3995:7;4004:6;4012:7;3898:32;4035:9;4046:5;3941:42;:111::i;:::-;1021:1:91;3607:453:66;;;;;;;:::o;13784:570:65:-;13864:15;13890:16;13917:14;13942;13967:21;13999:12;14039:9;14049:14;14039:25;;;;;;;;;;;;;;;;;;:33;;;14029:43;;14094:9;14104:14;14094:25;;;;;;;;;;;;;;;;;;:34;;;14083:45;;14148:9;14158:14;14148:25;;;;;;;;;;;;;;;;;;:32;;;14139:41;;14200:9;14210:14;14200:25;;;;;;;;;;;;;;;;;;:32;;;14191:41;;14259:9;14269:14;14259:25;;;;;;;;;;;;;;;;;;:39;;;14243:55;;14316:9;14326:14;14316:25;;;;;;;;;;;;;;;;;;:30;;;14309:37;;13784:570;;;;;;;:::o;350:39:157:-;-1:-1:-1;;;;;350:39:157;:::o;3176:393:65:-;3257:6;;3225:15;;-1:-1:-1;;;;;3257:6:65;3253:308;;3294:30;3354:14;:12;:14::i;:::-;-1:-1:-1;;;;;3343:37:65;;487:66:157;3381:8:65;;3343:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3343:47:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3343:47:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3343:47:65;;-1:-1:-1;;;;;;3415:37:65;;3407:65;;;;;-1:-1:-1;;;;;3407:65:65;;;;;;;;;;;;-1:-1:-1;;;;;3407:65:65;;;;;;;;;;;;;;;3494:14;-1:-1:-1;3487:21:65;;3253:308;-1:-1:-1;3555:6:65;;-1:-1:-1;;;;;3555:6:65;3548:13;;8293:425;402:6:3;;-1:-1:-1;;;402:6:3;;;;401:7;393:38;;;;;-1:-1:-1;;;;;393:38:3;;;;;;;;;;;;-1:-1:-1;;;;;393:38:3;;;;;;;;;;;;;;;8378:35:65;8398:14;8378:19;:35::i;:::-;8424:25;8452:9;8462:14;8452:25;;;;;;;;;;;;;;;;8514:10;8497:28;;:16;8452:25;;;;;8497:16;;;:28;;;;;;;8452:25;;-1:-1:-1;8497:28:65;;8496:29;8488:66;;;;;-1:-1:-1;;;;;8488:66:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;8600:10;8574:37;;;;:25;;;:37;;;;;;;;8573:38;8565:84;;;;-1:-1:-1;;;;;8565:84:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8660:50;8673:10;8685:8;8695:14;8660:12;:50::i;:::-;442:1:3;8293:425:65;:::o;10896:641:66:-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;11013:9:66;:16;10996:33;;10988:62;;;;;-1:-1:-1;;;;;10988:62:66;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10988:62:66;;;;;;;;;;;;;;;11061:25;11089:9;11099:14;11089:25;;;;;;;;;;;;;;;;;;11061:53;;11125:25;11153:59;11180:8;:31;;;11153:8;:22;;;:26;;:59;;;;:::i;:::-;11257:22;;;;11223:31;;;:56;-1:-1:-1;11305:30:66;;;;;;;;;;;11125:87;;-1:-1:-1;;;;;;11305:30:66;11298:47;11346:19;:17;:19::i;:::-;11367:17;11298:87;;;;;;;;;;;;;-1:-1:-1;;;;;11298:87:66;-1:-1:-1;;;;;11298:87:66;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11298:87:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11298:87:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11298:87:66;11290:115;;;;;-1:-1:-1;;;;;11290:115:66;;;;;;;;;;;;-1:-1:-1;;;;;11290:115:66;;;;;;;;;;;;;;;11479:14;:30;;;;;;;;;;;;;;11455:6;11421:108;;;;;;;-1:-1:-1;;;;;11479:30:66;;;;;;11455:6;;;;;11421:108;;;;;;;;1021:1:91;;10896:641:66;;:::o;1859:51:155:-;;;;;;;;;;;;;:::o;1891:97:91:-;1928:25;:23;:25::i;:::-;1964:16;:14;:16::i;:::-;1891:97::o;4632:433:66:-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;4945:112:66;4988:9;4999:7;5008:6;5016:7;5025:13;5040:9;5051:5;4945:42;:112::i;6239:537:65:-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;6422:35:65;6442:14;6422:19;:35::i;:::-;6468:25;6496:9;6506:14;6496:25;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6532:237:65;6556:7;:14;6552:1;:18;6532:237;;;6598:8;:16;;:28;6615:7;6623:1;6615:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6598:28:65;;;;;;;;;;;-1:-1:-1;6598:28:65;;;;6597:29;6596:75;;;;;6633:8;:25;;:37;6659:7;6667:1;6659:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6633:37:65;;;;;;;;;;;-1:-1:-1;6633:37:65;;;;6632:38;6596:75;6592:166;;;6692:50;6705:7;6713:1;6705:10;;;;;;;;;;;;;;6717:8;6727:14;6692:12;:50::i;:::-;6572:3;;6532:237;;;;1021:1:91;6239:537:65;;;:::o;272:29:155:-;;;-1:-1:-1;;;;;272:29:155;;:::o;18260:234:65:-;18387:9;:16;18345:4;;18370:33;;18362:62;;;;;-1:-1:-1;;;;;18362:62:65;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;18362:62:65;;;;;;;;;;;;;;;18442:9;18452:14;18442:25;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18442:44:65;;;;:33;:25;;;;;:33;;;;:44;;;;;;;;;-1:-1:-1;18260:234:65;;;;;:::o;9511:640::-;9652:9;:16;9598:7;;;;9635:33;;9627:62;;;;;-1:-1:-1;;;;;9627:62:65;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;9627:62:65;;;;;;;;;;;;;;;9700:25;9728:9;9738:14;9728:25;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9768:24:65;;;;:16;9728:25;;;;;9768:16;;;:24;;;;;;;9728:25;;-1:-1:-1;9768:24:65;;;:61;;-1:-1:-1;;;;;;9796:33:65;;;;;;:25;;;:33;;;;;;;;9768:61;9764:107;;;-1:-1:-1;9854:1:65;;-1:-1:-1;9854:1:65;;-1:-1:-1;9846:13:65;;9764:107;9899:13;;9933:21;;9899:56;;;-1:-1:-1;;;;;9899:56:65;;-1:-1:-1;;;;;9899:56:65;;;;;;;;;;;;;;;;9881:15;;9899:13;;;;;:25;;:56;;;;;;;;;;;;;;;:13;:56;;;5:2:-1;;;;30:1;27;20:12;5:2;9899:56:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9899:56:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9899:56:65;10015:20;;;;9994:15;;;;9899:56;;-1:-1:-1;9966:13:65;;9982:54;;10015:20;9982:28;;9899:56;;9982:28;:11;:28;:::i;:::-;:32;:54;:32;:54;:::i;:::-;-1:-1:-1;;;;;10076:22:65;;10047:16;10076:22;;;:14;:22;;;;;;9966:70;;-1:-1:-1;10047:16:65;10066:42;;929:26;;10066:33;;9966:70;;10066:33;:9;:33;:::i;:42::-;10127:5;;-1:-1:-1;10047:61:65;;-1:-1:-1;;;;9511:640:65;;;;;;:::o;215:26:3:-;;;-1:-1:-1;;;215:26:3;;;;;:::o;10316:617:65:-;10385:16;10414:15;;10444:165;10468:9;:16;10464:20;;10444:165;;;10539:13;10510:9;10520:1;10510:12;;;;;;;;;;;;;;;;;;:25;;;:42;10506:92;;;10573:9;;;;;10506:92;10486:3;;10444:165;;;;10621:22;10660:7;10646:22;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;10646:22:65;-1:-1:-1;10689:1:65;;-1:-1:-1;10621:47:65;-1:-1:-1;10689:1:65;10701:202;10725:9;:16;10721:20;;10701:202;;;10796:13;10767:9;10777:1;10767:12;;;;;;;;;;;;;;;;;;:25;;;:42;10763:129;;;10847:1;10830:5;10836:7;10830:14;;;;;;;;;;;;;;;;;:18;10867:9;;;;;10763:129;10743:3;;10701:202;;;-1:-1:-1;10920:5:65;10316:617;-1:-1:-1;;;10316:617:65:o;2720:384:66:-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;2985:111:66;3028:9;3039:7;3048:6;3056:7;3065:13;3080:8;2985:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2985:111:66;;;;;;;;;;;;;;;;;;;;;3090:5;2985:42;:111::i;:::-;2720:384;;;;;;;:::o;612:23:157:-;;;-1:-1:-1;;;;;612:23:157;;:::o;11708:540:65:-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;11858:9:65;:16;11841:33;;11833:62;;;;;-1:-1:-1;;;;;11833:62:65;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;11833:62:65;;;;;;;;;;;;;;;11924:9;11914:7;:19;11906:54;;;;;-1:-1:-1;;;;;11906:54:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;11971:25;11999:9;12009:14;11999:25;;;;;;;;;;;;;;;;;;11971:53;;12061:3;12043:8;:15;;;:21;12035:58;;;;;-1:-1:-1;;;;;12035:58:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;12104:15;;;:25;;;12140:17;;;:29;;;12185:55;;;;;;;;;;;;;;12205:14;;12185:55;;;;;;;;1021:1:91;11708:540:65;;;;:::o;2064:117::-;1603:7:91;;-1:-1:-1;;;;;1603:7:91;1589:10;:21;1581:55;;;;;-1:-1:-1;;;;;1581:55:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:19:65;2165:7;2154:10;:19::i;1750:50:155:-;;;;;;;;;;;;;:::o;16956:646:65:-;17029:26;17057:25;17084:29;17151:13;;;;;;;;;-1:-1:-1;;;;;17151:13:65;-1:-1:-1;;;;;17151:33:65;;:35;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17151:35:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17151:35:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17151:35:65;17134:52;;;17126:83;;;;;-1:-1:-1;;;;;17126:83:65;;;;;;;;;;;;-1:-1:-1;;;;;17126:83:65;;;;;;;;;;;;;;;17232:13;;:43;;;-1:-1:-1;;;;;17232:43:65;;;;;;;;;;-1:-1:-1;;;;;17232:13:65;;;;:28;;:43;;;;;:13;;:43;;;;;;;;:13;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;17232:43:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17232:43:65;;;;;;39:16:-1;36:1;17:17;2:54;101:4;17232:43:65;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;17232:43:65;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;17232:43:65;;;;;;17220:55;;17311:9;:16;17297:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;17297:31:65;;17286:42;;17368:9;:16;17354:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;17354:31:65;;17339:46;;17401:9;17396:199;17416:9;:16;17412:1;:20;17396:199;;;17468:13;;17494:12;;-1:-1:-1;;;;;17468:13:65;;;;:25;;17494:9;;17504:1;;17494:12;;;;;;;;;;;;17508:13;17468:54;;;;;;;;;;;;;-1:-1:-1;;;;;17468:54:65;-1:-1:-1;;;;;17468:54:65;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17468:54:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17468:54:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17468:54:65;17454:11;;:8;;17463:1;;17454:11;;;;;;;;;;;:68;;;;;17555:14;:28;17570:9;17580:1;17570:12;;;;;;;;;;;;;;-1:-1:-1;;;;;17555:28:65;-1:-1:-1;;;;;17555:28:65;;;;;;;;;;;;;17537:12;17550:1;17537:15;;;;;;;;;;;;;;;;;:46;17434:3;;17396:199;;;;16956:646;;;;;:::o;1552:27:155:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1552:27:155;;;;;;;;;;;;;;;;;;;;:::o;17816:244:65:-;17944:9;:16;17902:4;;17927:33;;17919:62;;;;;-1:-1:-1;;;;;17919:62:65;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;17919:62:65;;;;;;;;;;;;;;;17999:9;18009:14;17999:25;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17999:53:65;;;;:42;:25;;;;;:42;;;;:53;;;;;;;;;-1:-1:-1;17816:244:65;;;;:::o;1726:93:91:-;1761:25;:23;:25::i;:::-;1797:14;:12;:14::i;4849:530:65:-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;4996:12:65;:19;4975:10;:17;:40;4967:77;;;;;-1:-1:-1;;;;;4967:77:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;5124:40;5139:10;5151:12;5124:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5124:40:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5124:40:65;;;;;;;;;;;;;;;;;;;5180:9;5175:197;5199:10;:17;5195:1;:21;5175:197;;;952:2;937;929:26;5246:12;5259:1;5246:15;;;;;;;;;;;;;;:22;;5238:60;;;;;-1:-1:-1;;;;;5238:60:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;5345:12;5358:1;5345:15;;;;;;;;;;;;;;5313:14;:29;5328:10;5339:1;5328:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5313:29:65;;;;;;;;;;;-1:-1:-1;5313:29:65;:47;5218:3;;5175:197;;2414:347:91;2480:25;:23;:25::i;:::-;-1:-1:-1;;;;;2524:28:91;;2516:56;;;;;-1:-1:-1;;;;;2516:56:91;;;;;;;;;;;;-1:-1:-1;;;;;2516:56:91;;;;;;;;;;;;;;;2649:30;;;-1:-1:-1;;;;;2649:30:91;;2673:4;2649:30;;;;;;2605:14;;2583:12;;-1:-1:-1;;;;;2649:15:91;;;;;:30;;;;;;;;;;;;;;:15;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;2649:30:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2649:30:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2649:30:91;2698:35;;;-1:-1:-1;;;;;2698:35:91;;2713:10;2698:35;;;;;;;;;;;;2649:30;;-1:-1:-1;;;;;;2698:14:91;;;;;:35;;;;;2649:30;;2698:35;;;;;;;;-1:-1:-1;2698:14:91;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;2698:35:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2698:35:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2698:35:91;2690:63;;;;;-1:-1:-1;;;;;2690:63:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:347;;;:::o;218:49:69:-;;;;;;;;;;;;;-1:-1:-1;;;;;218:49:69;;:::o;396:45:157:-;-1:-1:-1;;;;;396:45:157;:::o;2602:130:65:-;2669:25;:23;:25::i;9942:817:66:-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;10055:9:66;:16;10038:33;;10030:62;;;;;-1:-1:-1;;;;;10030:62:66;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10030:62:66;;;;;;;;;;;;;;;10182:9;10192:14;10182:25;;;;;;;;;;;;;;;;;;:32;;;10175:3;:39;;10167:77;;;;;-1:-1:-1;;;;;10167:77:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;10264:9;10274:14;10264:25;;;;;;;;;;;;;;;;:35;:25;;;;;:35;;;;10263:36;10255:64;;;;;-1:-1:-1;;;;;10255:64:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;10368:4;10330:9;10340:14;10330:25;;;;;;;;;;;;;;;;;;;;;:35;;:42;;-1:-1:-1;;10330:42:66;;;;;;;;;;;10411:9;:25;;10421:14;;10411:25;;;;;;;;;;;;;;;;10383:53;;10447:23;10473:43;10493:8;:22;;;10473:8;:15;;;:19;;:43;;;;:::i;:::-;10542:14;:30;;;;;;;;;;;10447:69;;-1:-1:-1;;;;;;10542:30:66;10535:47;10583:19;:17;:19::i;:::-;10604:15;10535:85;;;;;;;;;;;;;-1:-1:-1;;;;;10535:85:66;-1:-1:-1;;;;;10535:85:66;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10535:85:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10535:85:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10535:85:66;10527:113;;;;;-1:-1:-1;;;;;10527:113:66;;;;;;;;;;;;-1:-1:-1;;;;;10527:113:66;;;;;;;;;;;;;;;10703:14;:30;;;;;;;;;;;;;;10679:6;10656:95;;;;;;;-1:-1:-1;;;;;10703:30:66;;;;;;10679:6;;;;;10656:95;;;;;;;;1021:1:91;;9942:817:66;;:::o;12631:788:65:-;12692:25;12728:26;12765:24;12800;12835:31;12877:22;12942:9;:16;;;;12928:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;12928:31:65;-1:-1:-1;12996:9:65;:16;12982:31;;;;;;;;;;;;;;;;12917:42;;-1:-1:-1;12982:31:65;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;12982:31:65;-1:-1:-1;13048:9:65;:16;13034:31;;;;;;;;;;;;;;;;12970:43;;-1:-1:-1;13034:31:65;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;13034:31:65;-1:-1:-1;13100:9:65;:16;13086:31;;;;;;;;;;;;;;;;13024:41;;-1:-1:-1;13086:31:65;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;13086:31:65;-1:-1:-1;13159:9:65;:16;13145:31;;;;;;;;;;;;;;;;13076:41;;-1:-1:-1;13145:31:65;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;13145:31:65;-1:-1:-1;13209:9:65;:16;13195:31;;;;;;;;;;;;;;;;13128:48;;-1:-1:-1;13195:31:65;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;13195:31:65;-1:-1:-1;13187:39:65;-1:-1:-1;13242:9:65;13237:175;13261:9;:16;13257:20;;13237:175;;;13382:18;13398:1;13382:15;:18::i;:::-;13300:8;13309:1;13300:11;;;;;;;;;;;;;13313:9;13323:1;13313:12;;;;;;;;;;;;;13327:7;13335:1;13327:10;;;;;;;;;;;;;13339:7;13347:1;13339:10;;;;;;;;;;;;;13351:14;13366:1;13351:17;;;;;;;;;;;;;13370:5;13376:1;13370:8;;;;;;;;;;;;;;;;;13299:101;;;;;;;;;;;;;;;;;;;;;13279:3;;13237:175;;;;12631:788;;;;;;:::o;1893:309:66:-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;2112:82:66;2141:9;2152:7;2161:6;2169:7;2178:8;2112:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2112:82:66;;;;;;;;;;;;;;;;;;;;;2188:5;2112:28;:82::i;:::-;1893:309;;;;;;:::o;282:35:157:-;;;-1:-1:-1;;;;;282:35:157;;:::o;1643:25:155:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1643:25:155;;-1:-1:-1;1643:25:155;:::o;18631:240:65:-;18740:16;;;18754:1;18740:16;;;18677;18740;;;;;18677;;;18740;18754:1;18740:16;;;;;105:10:-1;18740:16:65;88:34:-1;136:17;;-1:-1;18740:16:65;18706:50;;-1:-1:-1;;;;;18767:14:65;18782:1;18767:17;;;;;;;;;;;;;:25;;;;;-1:-1:-1;;;;;18803:14:65;18818:1;18803:17;;;;;;;;;;;;;;;;;:28;18849:14;-1:-1:-1;18631:240:65;:::o;251:22:157:-;;;-1:-1:-1;;;;;251:22:157;;:::o;3982:632:65:-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;4100:22:65;;4080:9;:16;:42;;4072:82;;;;;-1:-1:-1;;;;;4072:82:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;4170:9;4165:294;4189:9;:16;4185:1;:20;4165:294;;;4259:1;-1:-1:-1;;;;;4235:26:65;:9;4245:1;4235:12;;;;;;;;;;;;;;-1:-1:-1;;;;;4235:26:65;;;4227:54;;;;;-1:-1:-1;;;;;4227:54:65;;;;;;;;;;;;-1:-1:-1;;;;;4227:54:65;;;;;;;;;;;;;;;4317:1;4313:5;;4296:152;4324:9;:16;4320:1;:20;4296:152;;;4390:9;4400:1;4390:12;;;;;;;;;;;;;;-1:-1:-1;;;;;4374:28:65;:9;4384:1;4374:12;;;;;;;;;;;;;;-1:-1:-1;;;;;4374:28:65;;;4366:66;;;;;-1:-1:-1;;;;;4366:66:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;4342:3;;4296:152;;;-1:-1:-1;4207:3:65;;4165:294;;;-1:-1:-1;4469:20:65;;;;:8;;:20;;;;;:::i;:::-;;4569:37;4597:8;4569:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4569:37:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3982:632;;:::o;7098:1067::-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;7380:35:65;7400:14;7380:19;:35::i;:::-;7426:25;7454:9;7464:14;7454:25;;;;;;;;;;;;;;;;;;;;7513:21;;7574:13;;:62;;;-1:-1:-1;;;;;7574:62:65;;;;;;;;;;;;;;;;;;;;;;7454:25;;-1:-1:-1;7513:21:65;;7545:26;;-1:-1:-1;;;;;7574:13:65;;;;:34;;:62;;;;;7454:25;7574:62;;;;;:13;:62;;;5:2:-1;;;;30:1;27;20:12;5:2;7574:62:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7574:62:65;;;;;;39:16:-1;36:1;17:17;2:54;101:4;7574:62:65;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;7574:62:65;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;7574:62:65;;-1:-1:-1;7870:9:65;;-1:-1:-1;;;;7865:293:65;7889:9;:16;7885:1;:20;7865:293;;;7927:21;7967:9;7977:1;7967:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8002:23:65;;;;;;:16;;;:23;;;;;;;;7967:12;;-1:-1:-1;8002:23:65;;8001:24;8000:65;;;;-1:-1:-1;;;;;;8032:32:65;;;;;;:25;;;:32;;;;;;;;8031:33;8000:65;7996:151;;;8086:45;8099:5;8106:8;8116:14;8086:12;:45::i;:::-;-1:-1:-1;7907:3:65;;7865:293;;2994:104;3046:16;3082:8;3075:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3075:15:65;;;;;;;;;;;;;;;;;;;;;;;2994:104;:::o;14865:1759::-;14951:26;14988:27;15026:28;15065:31;15107:29;15147:30;15220:9;:16;;;;15203:14;:33;15195:62;;;;;-1:-1:-1;;;;;15195:62:65;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15195:62:65;;;;;;;;;;;;;;;15301:25;15329:9;15339:14;15329:25;;;;;;;;;;;;;;;;;;;;15388:21;;15432:13;;:42;;;-1:-1:-1;;;;;15432:42:65;;;;;;;;;;15329:25;;-1:-1:-1;15388:21:65;;-1:-1:-1;;;;;15432:13:65;;;;:28;;:42;;;;;15329:25;15432:42;;;;;;:13;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;15432:42:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15432:42:65;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15432:42:65;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;15432:42:65;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;15432:42:65;;;;;;15420:54;;15512:9;:16;15501:28;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15501:28:65;;15485:44;;15568:9;:16;15557:28;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15557:28:65;;15540:45;;15627:9;:16;15613:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15613:31:65;;15596:48;;15684:9;:16;15670:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15670:31:65;;15655:46;;15742:9;:16;15728:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15728:31:65;;15712:47;;15775:9;15770:847;15790:9;:16;15786:1;:20;15770:847;;;15847:8;:16;;:30;15864:9;15874:1;15864:12;;;;;;;;;;;;;;-1:-1:-1;;;;;15847:30:65;-1:-1:-1;;;;;15847:30:65;;;;;;;;;;;;;;;;;;;;;;15828:13;15842:1;15828:16;;;;;;;;;;;;;:49;;;;;;;;;;;15912:8;:25;;:39;15938:9;15948:1;15938:12;;;;;;;;;;;;;;-1:-1:-1;;;;;15912:39:65;-1:-1:-1;;;;;15912:39:65;;;;;;;;;;;;;;;;;;;;;;15892:14;15907:1;15892:17;;;;;;;;:59;;;:17;;;;;;;;;;;:59;15985:13;;16011:12;;-1:-1:-1;;;;;15985:13:65;;;;:25;;16011:9;;16021:1;;16011:12;;;;;;;;;;;;16025:8;:21;;;15985:62;;;;;;;;;;;;;-1:-1:-1;;;;;15985:62:65;-1:-1:-1;;;;;15985:62:65;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15985:62:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15985:62:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15985:62:65;15966:16;;:13;;15980:1;;15966:16;;;;;;;;;;;:81;;;;;16067:14;16082:1;16067:17;;;;;;;;;;;;;;16062:544;;16109:13;16123:1;16109:16;;;;;;;;;;;;;;16105:486;;;16170:8;:17;;:31;16188:9;16198:1;16188:12;;;;;;;;;;;;;;-1:-1:-1;;;;;16170:31:65;-1:-1:-1;;;;;16170:31:65;;;;;;;;;;;;;16150:14;16165:1;16150:17;;;;;;;;;;;;;:51;;;;;16242:86;16310:14;16325:1;16310:17;;;;;;;;;;;;;;16242:63;16284:8;:20;;;16242:37;16263:8;:15;;;16242:13;16256:1;16242:16;;;;;;;;;;;;;;:20;;:37;;;;:::i;:63::-;:67;:86;:67;:86;:::i;:::-;16224:12;16237:1;16224:15;;;;;;;;;;;;;:104;;;;;16105:486;;;16378:13;16393:16;16413:47;16431:14;16447:9;16457:1;16447:12;;;;;;;;;;;;;;16413:17;:47::i;:::-;16377:83;;;;16503:8;16483:14;16498:1;16483:17;;;;;;;;;;;;;;;;;:28;16552:19;:5;16562:8;16552:19;:9;:19;:::i;:::-;16534:12;16547:1;16534:15;;;;;;;;;;;;;:37;;;;;16105:486;;;15808:3;;15770:847;;;;14865:1759;;;;;;;;;:::o;2085:119:91:-;2170:13;;:25;;;-1:-1:-1;;;;;2170:25:91;;;;2129:10;;-1:-1:-1;;;;;2170:13:91;;:23;;:25;;;;;;;;;;;;;;:13;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;2170:25:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2170:25:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2170:25:91;;-1:-1:-1;2085:119:91;:::o;3684:129:65:-;3746:7;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;950:60:91;;;;;;;;;;;;;;;3773:13:65;;;;;;;;;-1:-1:-1;;;;;3773:13:65;-1:-1:-1;;;;;3773:30:65;;:32;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3773:32:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3773:32:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3773:32:65;;-1:-1:-1;1021:1:91;3684:129:65;;:::o;1038:340:91:-;1113:4;1130:12;1172:13;;;;;;;;;-1:-1:-1;;;;;1172:13:91;-1:-1:-1;;;;;1156:37:91;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1156:39:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1156:39:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1156:39:91;1234:7;;-1:-1:-1;;;;;1145:50:91;;;;;;;;;-1:-1:-1;1234:7:91;1223:18;1145:50;;1259:20;;;1270:9;1259:20;:111;;;-1:-1:-1;1308:13:91;;1283:87;;;-1:-1:-1;;;;;1283:87:91;;-1:-1:-1;;;;;1283:87:91;;;;;;;1357:4;1283:87;;;;;;;;;;;;1308:13;;;;;1283:56;;:87;;;;;;;;;;;;;;1308:13;1283:87;;;5:2:-1;;;;30:1;27;20:12;5:2;1283:87:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1283:87:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1283:87:91;1259:111;1252:118;1038:340;-1:-1:-1;;;;;1038:340:91:o;1386:153::-;1484:13;;;;;;;;;-1:-1:-1;;;;;1484:13:91;-1:-1:-1;;;;;1468:37:91;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1468:39:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1468:39:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1468:39:91;-1:-1:-1;;;;;1454:53:91;:10;:53;1446:85;;;;;-1:-1:-1;;;;;1446:85:91;;;;;;;;;;;;;;;;;;;;;;;;;;;5637:2273:66;5956:22;;5936:9;:16;:42;;5928:82;;;;;-1:-1:-1;;;;;5928:82:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;6039:9;6029:7;:19;6021:54;;;;;-1:-1:-1;;;;;6021:54:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;6168:3;6158:7;:13;6150:40;;;;;-1:-1:-1;;;;;6150:40:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;6219:1;6209:7;:11;6201:40;;;;;-1:-1:-1;;;;;6201:40:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6260:20:66;;6252:46;;;;;-1:-1:-1;;;;;6252:46:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;6334:13;;;;;;;;;-1:-1:-1;;;;;6334:13:66;-1:-1:-1;;;;;6334:33:66;;:35;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6334:35:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6334:35:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6334:35:66;6317:52;;;6309:83;;;;;-1:-1:-1;;;;;6309:83:66;;;;;;;;;;;;-1:-1:-1;;;;;6309:83:66;;;;;;;;;;;;;;;6411:63;;;-1:-1:-1;;;;;6411:63:66;;6439:10;6411:63;;;;6459:4;6411:63;;;;;;;;;;;;-1:-1:-1;;;;;6411:27:66;;;;;:63;;;;;;;;;;;;;;-1:-1:-1;6411:27:66;:63;;;5:2:-1;;;;30:1;27;20:12;5:2;6411:63:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6411:63:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6411:63:66;6403:97;;;;;-1:-1:-1;;;;;6403:97:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;6519:19;6511:28;;;;;;6574:9;:16;6625:13;;:42;;;-1:-1:-1;;;;;6625:42:66;;;;;;;;;;6550:21;;-1:-1:-1;;;;;6625:13:66;;:27;;:42;;;;;;;;;;;;;;:13;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;6625:42:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6625:42:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6625:42:66;;-1:-1:-1;6686:17:66;6678:44;;;;;-1:-1:-1;;;;;6678:44:66;;;;;;;;;;;;-1:-1:-1;;;;;6678:44:66;;;;;;;;;;;;;;;6799:335;;;;;;;;;;;6858:3;6799:335;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6799:335:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6770:9;27:10:-1;;6799:335:66;23:18:-1;;45:23;;6770:375:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6770:375:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7158:416:66;7182:9;:16;7178:1;:20;7158:416;;;7252:1;-1:-1:-1;;;;;7228:26:66;:9;7238:1;7228:12;;;;;;;;;;;;;;-1:-1:-1;;;;;7228:26:66;;;7220:54;;;;;-1:-1:-1;;;;;7220:54:66;;;;;;;;;;;;-1:-1:-1;;;;;7220:54:66;;;;;;;;;;;;;;;7298:9;7308:13;7298:24;;;;;;;;;;;;;;;;;;:41;;:55;7340:9;7350:1;7340:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7298:55:66;;;;;;;;;;;-1:-1:-1;7298:55:66;;;;7297:56;7289:90;;;;;-1:-1:-1;;;;;7289:90:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;7430:13;;7456:12;;7411:74;;-1:-1:-1;;;;;7430:13:66;;:25;;7456:9;;7466:1;;7456:12;;;;;;;;;;;;7470:13;7430:54;;;;;;;;;;;;;-1:-1:-1;;;;;7430:54:66;-1:-1:-1;;;;;7430:54:66;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7430:54:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7430:54:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7430:54:66;7411:14;;:74;:18;:74;:::i;:::-;7394:91;;7558:4;7500:9;7510:13;7500:24;;;;;;;;;;;;;;;;;;:41;;:55;7542:9;7552:1;7542:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7500:55:66;;;;;;;;;;;-1:-1:-1;7500:55:66;:62;;-1:-1:-1;;7500:62:66;;;;;;;;;;-1:-1:-1;7200:3:66;7158:416;;;;7608:14;7592:13;:30;7584:57;;;;;-1:-1:-1;;;;;7584:57:66;;;;;;;;;;;;-1:-1:-1;;;;;7584:57:66;;;;;;;;;;;;;;;7707:14;7691:13;:30;7652:9;7662:13;7652:24;;;;;;;;;;;;;;;;;;;;;;;;:36;;:69;;;;7732:29;;;;;;;;;;:38;;-1:-1:-1;;;;;;7732:38:66;-1:-1:-1;;;;;7732:38:66;;;;;7781:121;7814:13;7829:9;7840:7;7732:38;7857:7;7866:13;7732:29;7896:5;7781:32;:121::i;:::-;5637:2273;;;;;;;;;;:::o;1354:531:65:-;1457:9;:16;1440:33;;1432:62;;;;;-1:-1:-1;;;;;1432:62:65;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1432:62:65;;;;;;;;;;;;;;;1514:9;1524:14;1514:25;;;;;;;;;;;;;;;;:35;:25;;;;;:35;;;;1513:36;1505:67;;;;;-1:-1:-1;;;;;1505:67:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;1662:9;1672:14;1662:25;;;;;;;;;;;;;;;;;;:34;;;1655:3;:41;;1647:81;;;;;-1:-1:-1;;;;;1647:81:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;1817:9;1827:14;1817:25;;;;;;;;;;;;;;;;;;:32;;;1811:3;:38;1803:74;;;;;-1:-1:-1;;;;;1803:74:65;;;;;;;;;;;;;;;;;;;;;;;;;;;8948:823:66;9067:13;9082:16;9102:41;9120:14;9136:6;9102:17;:41::i;:::-;-1:-1:-1;;;;;9154:25:66;;;;;;:17;;;:25;;;;;:32;;-1:-1:-1;;9154:32:66;9182:4;9154:32;;;9233:23;;;;9066:77;;-1:-1:-1;9066:77:66;-1:-1:-1;9223:34:66;;9066:77;;9223:34;:9;:34;:::i;:::-;9197:23;;;:60;9268:26;9297:19;:5;9307:8;9297:19;:9;:19;:::i;:::-;9268:48;-1:-1:-1;9331:22:66;;9327:158;;9385:14;:30;;;;;;;;;;;;9378:75;;-1:-1:-1;;;;;9378:75:66;;-1:-1:-1;;;;;9378:75:66;;;;;;;;;;;;;;;9385:30;;;;;9378:47;;:75;;;;;9385:30;;9378:75;;;;;;;;;;9385:30;9378:75;;;5:2:-1;;;;30:1;27;20:12;5:2;9378:75:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9378:75:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9378:75:66;9370:103;;;;;-1:-1:-1;;;;;9370:103:66;;;;;;;;;;;;-1:-1:-1;;;;;9370:103:66;;;;;;;;;;;;;;;9499:12;;9495:160;;9554:23;;;;:37;;9582:8;9554:37;:27;:37;:::i;:::-;9528:23;;;:63;-1:-1:-1;;;;;9606:26:66;;;;;;:18;;;:26;;;;;:37;;;9495:160;9715:14;:30;;;;;;;;;;;;;9670:93;;;;;;;;;;;;;-1:-1:-1;;;;;9715:30:66;;;;9730:14;;9670:93;;;;;;;;;;;;;;;8948:823;;;;;;:::o;1211:145:168:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:168;;;1211:145::o;1015:172:3:-;603:6;;-1:-1:-1;;;603:6:3;;;;595:41;;;;;-1:-1:-1;;;;;595:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:6;:14;;-1:-1:-1;;;;;;1066:14:3;;;1160:19;;;1168:10;1160:19;;;;;;;;;;;;;1015:172::o;231:421:168:-;289:7;529:6;525:45;;-1:-1:-1;558:1:168;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;;644:1;231:421;-1:-1:-1;;;231:421:168:o;782:296::-;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;;782:296;-1:-1:-1;;;;782:296:168:o;2740:131:65:-;2820:6;;2810:26;;-1:-1:-1;;;;;2810:26:65;;;;2820:6;;2810:26;;2820:6;;2810:26;2847:6;:16;;-1:-1:-1;;;;;;2847:16:65;-1:-1:-1;;;;;2847:16:65;;;;;;;;;;2740:131::o;749:170:3:-;402:6;;-1:-1:-1;;;402:6:3;;;;401:7;393:38;;;;;-1:-1:-1;;;;;393:38:3;;;;;;;;;;;;-1:-1:-1;;;;;393:38:3;;;;;;;;;;;;;;;801:6;:13;;-1:-1:-1;;;;;;801:13:3;-1:-1:-1;;;801:13:3;;;894:17;;;900:10;894:17;;;;;;;;;;;;;749:170::o;1439:145:168:-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;8077:636:66;8454:251;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8689:5;;-1:-1:-1;;;;;8454:251:66;;;8491:10;;8454:251;;;;;;;;;;8077:636;;;;;;;;:::o;293:11249::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;293:11249:66;-1:-1:-1;;;;;293:11249:66;;;;;;;;;;;-1:-1:-1;293:11249:66;;;;;;;-1:-1:-1;293:11249:66;;;;-1:-1:-1;293:11249:66;;;;;;;;;;-1:-1:-1;;;;;;293:11249:66;;;;;;",
  "source": "pragma solidity 0.5.8;\r\n\r\nimport \"../DividendCheckpoint.sol\";\r\nimport \"./ERC20DividendCheckpointStorage.sol\";\r\nimport \"../../../../interfaces/IOwnable.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/**\r\n * @title Checkpoint module for issuing ERC20 dividends\r\n */\r\ncontract ERC20DividendCheckpoint is ERC20DividendCheckpointStorage, DividendCheckpoint {\r\n    using SafeMath for uint256;\r\n\r\n    event ERC20DividendDeposited(\r\n        address indexed _depositor,\r\n        uint256 _checkpointId,\r\n        uint256 _maturity,\r\n        uint256 _expiry,\r\n        address indexed _token,\r\n        uint256 _amount,\r\n        uint256 _totalSupply,\r\n        uint256 _dividendIndex,\r\n        bytes32 indexed _name\r\n    );\r\n    event ERC20DividendClaimed(address indexed _payee, uint256 indexed _dividendIndex, address indexed _token, uint256 _amount, uint256 _withheld);\r\n    event ERC20DividendReclaimed(address indexed _claimer, uint256 indexed _dividendIndex, address indexed _token, uint256 _claimedAmount);\r\n    event ERC20DividendWithholdingWithdrawn(\r\n        address indexed _claimer,\r\n        uint256 indexed _dividendIndex,\r\n        address indexed _token,\r\n        uint256 _withheldAmount\r\n    );\r\n\r\n    /**\r\n     * @notice Constructor\r\n     * @param _securityToken Address of the security token\r\n     */\r\n    constructor(address _securityToken, address _polyToken) public Module(_securityToken, _polyToken) {\r\n\r\n    }\r\n\r\n    /**\r\n     * @notice Creates a dividend and checkpoint for the dividend\r\n     * @param _maturity Time from which dividend can be paid\r\n     * @param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n     * @param _token Address of ERC20 token in which dividend is to be denominated\r\n     * @param _amount Amount of specified token for dividend\r\n     * @param _name Name/Title for identification\r\n     */\r\n    function createDividend(\r\n        uint256 _maturity,\r\n        uint256 _expiry,\r\n        address _token,\r\n        uint256 _amount,\r\n        bytes32 _name\r\n    )\r\n        external\r\n        withPerm(ADMIN)\r\n    {\r\n        createDividendWithExclusions(_maturity, _expiry, _token, _amount, excluded, _name);\r\n    }\r\n\r\n    /**\r\n     * @notice Creates a dividend with a provided checkpoint\r\n     * @param _maturity Time from which dividend can be paid\r\n     * @param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n     * @param _token Address of ERC20 token in which dividend is to be denominated\r\n     * @param _amount Amount of specified token for dividend\r\n     * @param _checkpointId Checkpoint id from which to create dividends\r\n     * @param _name Name/Title for identification\r\n     */\r\n    function createDividendWithCheckpoint(\r\n        uint256 _maturity,\r\n        uint256 _expiry,\r\n        address _token,\r\n        uint256 _amount,\r\n        uint256 _checkpointId,\r\n        bytes32 _name\r\n    )\r\n        external\r\n        withPerm(ADMIN)\r\n    {\r\n        _createDividendWithCheckpointAndExclusions(_maturity, _expiry, _token, _amount, _checkpointId, excluded, _name);\r\n    }\r\n\r\n    /**\r\n     * @notice Creates a dividend and checkpoint for the dividend\r\n     * @param _maturity Time from which dividend can be paid\r\n     * @param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n     * @param _token Address of ERC20 token in which dividend is to be denominated\r\n     * @param _amount Amount of specified token for dividend\r\n     * @param _excluded List of addresses to exclude\r\n     * @param _name Name/Title for identification\r\n     */\r\n    function createDividendWithExclusions(\r\n        uint256 _maturity,\r\n        uint256 _expiry,\r\n        address _token,\r\n        uint256 _amount,\r\n        address[] memory _excluded,\r\n        bytes32 _name\r\n    )\r\n        public\r\n        withPerm(ADMIN)\r\n    {\r\n        uint256 checkpointId = securityToken.createCheckpoint();\r\n        _createDividendWithCheckpointAndExclusions(_maturity, _expiry, _token, _amount, checkpointId, _excluded, _name);\r\n    }\r\n\r\n    /**\r\n     * @notice Creates a dividend with a provided checkpoint\r\n     * @param _maturity Time from which dividend can be paid\r\n     * @param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n     * @param _token Address of ERC20 token in which dividend is to be denominated\r\n     * @param _amount Amount of specified token for dividend\r\n     * @param _checkpointId Checkpoint id from which to create dividends\r\n     * @param _excluded List of addresses to exclude\r\n     * @param _name Name/Title for identification\r\n     */\r\n    function createDividendWithCheckpointAndExclusions(\r\n        uint256 _maturity,\r\n        uint256 _expiry,\r\n        address _token,\r\n        uint256 _amount,\r\n        uint256 _checkpointId,\r\n        address[] memory _excluded,\r\n        bytes32 _name\r\n    )\r\n        public\r\n        withPerm(ADMIN)\r\n    {\r\n        _createDividendWithCheckpointAndExclusions(_maturity, _expiry, _token, _amount, _checkpointId, _excluded, _name);\r\n    }\r\n\r\n    /**\r\n     * @notice Creates a dividend with a provided checkpoint\r\n     * @param _maturity Time from which dividend can be paid\r\n     * @param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n     * @param _token Address of ERC20 token in which dividend is to be denominated\r\n     * @param _amount Amount of specified token for dividend\r\n     * @param _checkpointId Checkpoint id from which to create dividends\r\n     * @param _excluded List of addresses to exclude\r\n     * @param _name Name/Title for identification\r\n     */\r\n    function _createDividendWithCheckpointAndExclusions(\r\n        uint256 _maturity,\r\n        uint256 _expiry,\r\n        address _token,\r\n        uint256 _amount,\r\n        uint256 _checkpointId,\r\n        address[] memory _excluded,\r\n        bytes32 _name\r\n    )\r\n        internal\r\n    {\r\n        require(_excluded.length <= EXCLUDED_ADDRESS_LIMIT, \"Too many addresses excluded\");\r\n        require(_expiry > _maturity, \"Expiry before maturity\");\r\n        /*solium-disable-next-line security/no-block-members*/\r\n        require(_expiry > now, \"Expiry in past\");\r\n        require(_amount > 0, \"No dividend sent\");\r\n        require(_token != address(0), \"Invalid token\");\r\n        require(_checkpointId <= securityToken.currentCheckpointId(), \"Invalid checkpoint\");\r\n        require(IERC20(_token).transferFrom(msg.sender, address(this), _amount), \"insufficent allowance\");\r\n        require(_name != bytes32(0));\r\n        uint256 dividendIndex = dividends.length;\r\n        uint256 currentSupply = securityToken.totalSupplyAt(_checkpointId);\r\n        require(currentSupply > 0, \"Invalid supply\");\r\n        uint256 excludedSupply = 0;\r\n        dividends.push(\r\n            Dividend(\r\n                _checkpointId,\r\n                now, /*solium-disable-line security/no-block-members*/\r\n                _maturity,\r\n                _expiry,\r\n                _amount,\r\n                0,\r\n                0,\r\n                false,\r\n                0,\r\n                0,\r\n                _name\r\n            )\r\n        );\r\n\r\n        for (uint256 j = 0; j < _excluded.length; j++) {\r\n            require(_excluded[j] != address(0), \"Invalid address\");\r\n            require(!dividends[dividendIndex].dividendExcluded[_excluded[j]], \"duped exclude address\");\r\n            excludedSupply = excludedSupply.add(securityToken.balanceOfAt(_excluded[j], _checkpointId));\r\n            dividends[dividendIndex].dividendExcluded[_excluded[j]] = true;\r\n        }\r\n        require(currentSupply > excludedSupply, \"Invalid supply\");\r\n        dividends[dividendIndex].totalSupply = currentSupply - excludedSupply;\r\n        dividendTokens[dividendIndex] = _token;\r\n        _emitERC20DividendDepositedEvent(_checkpointId, _maturity, _expiry, _token, _amount, currentSupply, dividendIndex, _name);\r\n    }\r\n\r\n    /**\r\n     * @notice Emits the ERC20DividendDeposited event.\r\n     * Seperated into a different function as a workaround for stack too deep error\r\n     */\r\n    function _emitERC20DividendDepositedEvent(\r\n        uint256 _checkpointId,\r\n        uint256 _maturity,\r\n        uint256 _expiry,\r\n        address _token,\r\n        uint256 _amount,\r\n        uint256 currentSupply,\r\n        uint256 dividendIndex,\r\n        bytes32 _name\r\n    )\r\n        internal\r\n    {\r\n        /*solium-disable-next-line security/no-block-members*/\r\n        emit ERC20DividendDeposited(\r\n            msg.sender,\r\n            _checkpointId,\r\n            _maturity,\r\n            _expiry,\r\n            _token,\r\n            _amount,\r\n            currentSupply,\r\n            dividendIndex,\r\n            _name\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice Internal function for paying dividends\r\n     * @param _payee Address of investor\r\n     * @param _dividend Storage with previously issued dividends\r\n     * @param _dividendIndex Dividend to pay\r\n     */\r\n    function _payDividend(address payable _payee, Dividend storage _dividend, uint256 _dividendIndex) internal {\r\n        (uint256 claim, uint256 withheld) = calculateDividend(_dividendIndex, _payee);\r\n        _dividend.claimed[_payee] = true;\r\n        _dividend.claimedAmount = claim.add(_dividend.claimedAmount);\r\n        uint256 claimAfterWithheld = claim.sub(withheld);\r\n        if (claimAfterWithheld > 0) {\r\n            require(IERC20(dividendTokens[_dividendIndex]).transfer(_payee, claimAfterWithheld), \"transfer failed\");\r\n        }\r\n        if (withheld > 0) {\r\n            _dividend.totalWithheld = _dividend.totalWithheld.add(withheld);\r\n            _dividend.withheld[_payee] = withheld;\r\n        }\r\n        emit ERC20DividendClaimed(_payee, _dividendIndex, dividendTokens[_dividendIndex], claim, withheld);\r\n    }\r\n\r\n    /**\r\n     * @notice Issuer can reclaim remaining unclaimed dividend amounts, for expired dividends\r\n     * @param _dividendIndex Dividend to reclaim\r\n     */\r\n    function reclaimDividend(uint256 _dividendIndex) external withPerm(OPERATOR) {\r\n        require(_dividendIndex < dividends.length, \"Invalid dividend\");\r\n        /*solium-disable-next-line security/no-block-members*/\r\n        require(now >= dividends[_dividendIndex].expiry, \"Dividend expiry in future\");\r\n        require(!dividends[_dividendIndex].reclaimed, \"already claimed\");\r\n        dividends[_dividendIndex].reclaimed = true;\r\n        Dividend storage dividend = dividends[_dividendIndex];\r\n        uint256 remainingAmount = dividend.amount.sub(dividend.claimedAmount);\r\n        require(IERC20(dividendTokens[_dividendIndex]).transfer(getTreasuryWallet(), remainingAmount), \"transfer failed\");\r\n        emit ERC20DividendReclaimed(wallet, _dividendIndex, dividendTokens[_dividendIndex], remainingAmount);\r\n    }\r\n\r\n    /**\r\n     * @notice Allows issuer to withdraw withheld tax\r\n     * @param _dividendIndex Dividend to withdraw from\r\n     */\r\n    function withdrawWithholding(uint256 _dividendIndex) external withPerm(OPERATOR) {\r\n        require(_dividendIndex < dividends.length, \"Invalid dividend\");\r\n        Dividend storage dividend = dividends[_dividendIndex];\r\n        uint256 remainingWithheld = dividend.totalWithheld.sub(dividend.totalWithheldWithdrawn);\r\n        dividend.totalWithheldWithdrawn = dividend.totalWithheld;\r\n        require(IERC20(dividendTokens[_dividendIndex]).transfer(getTreasuryWallet(), remainingWithheld), \"transfer failed\");\r\n        emit ERC20DividendWithholdingWithdrawn(wallet, _dividendIndex, dividendTokens[_dividendIndex], remainingWithheld);\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:/mspace/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpoint.sol",
  "ast": {
    "absolutePath": "/C/mspace/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpoint.sol",
    "exportedSymbols": {
      "ERC20DividendCheckpoint": [
        24956
      ]
    },
    "id": 24957,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24262,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:66"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/modules/Checkpoint/Dividend/DividendCheckpoint.sol",
        "file": "../DividendCheckpoint.sol",
        "id": 24263,
        "nodeType": "ImportDirective",
        "scope": 24957,
        "sourceUnit": 24261,
        "src": "26:35:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpointStorage.sol",
        "file": "./ERC20DividendCheckpointStorage.sol",
        "id": 24264,
        "nodeType": "ImportDirective",
        "scope": 24957,
        "sourceUnit": 25145,
        "src": "63:46:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/interfaces/IOwnable.sol",
        "file": "../../../../interfaces/IOwnable.sol",
        "id": 24265,
        "nodeType": "ImportDirective",
        "scope": 24957,
        "sourceUnit": 14322,
        "src": "111:45:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 24266,
        "nodeType": "ImportDirective",
        "scope": 24957,
        "sourceUnit": 58648,
        "src": "158:64:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24267,
              "name": "ERC20DividendCheckpointStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 25144,
              "src": "329:30:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20DividendCheckpointStorage_$25144",
                "typeString": "contract ERC20DividendCheckpointStorage"
              }
            },
            "id": 24268,
            "nodeType": "InheritanceSpecifier",
            "src": "329:30:66"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24269,
              "name": "DividendCheckpoint",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24260,
              "src": "361:18:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DividendCheckpoint_$24260",
                "typeString": "contract DividendCheckpoint"
              }
            },
            "id": 24270,
            "nodeType": "InheritanceSpecifier",
            "src": "361:18:66"
          }
        ],
        "contractDependencies": [
          1769,
          13966,
          24260,
          25144,
          25921,
          31060,
          53432,
          53487
        ],
        "contractKind": "contract",
        "documentation": "@title Checkpoint module for issuing ERC20 dividends\r",
        "fullyImplemented": true,
        "id": 24956,
        "linearizedBaseContracts": [
          24956,
          24260,
          31060,
          1769,
          53487,
          13966,
          25921,
          53432,
          25144
        ],
        "name": "ERC20DividendCheckpoint",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 24273,
            "libraryName": {
              "contractScope": null,
              "id": 24271,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 58086,
              "src": "393:8:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$58086",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "387:27:66",
            "typeName": {
              "id": 24272,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "406:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24293,
            "name": "ERC20DividendDeposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24275,
                  "indexed": true,
                  "name": "_depositor",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "461:26:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24277,
                  "indexed": false,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "498:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24279,
                  "indexed": false,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "530:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24281,
                  "indexed": false,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "558:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24283,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "584:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24285,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "617:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24287,
                  "indexed": false,
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "643:20:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24289,
                  "indexed": false,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "674:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24291,
                  "indexed": true,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "707:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24290,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "450:285:66"
            },
            "src": "422:314:66"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24305,
            "name": "ERC20DividendClaimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24295,
                  "indexed": true,
                  "name": "_payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 24305,
                  "src": "769:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24297,
                  "indexed": true,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24305,
                  "src": "793:30:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24299,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24305,
                  "src": "825:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24301,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24305,
                  "src": "849:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24303,
                  "indexed": false,
                  "name": "_withheld",
                  "nodeType": "VariableDeclaration",
                  "scope": 24305,
                  "src": "866:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "768:116:66"
            },
            "src": "742:143:66"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24315,
            "name": "ERC20DividendReclaimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24307,
                  "indexed": true,
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "scope": 24315,
                  "src": "920:24:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24309,
                  "indexed": true,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24315,
                  "src": "946:30:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24311,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24315,
                  "src": "978:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24313,
                  "indexed": false,
                  "name": "_claimedAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24315,
                  "src": "1002:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:106:66"
            },
            "src": "891:135:66"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24325,
            "name": "ERC20DividendWithholdingWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24317,
                  "indexed": true,
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1082:24:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1082:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24319,
                  "indexed": true,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1117:30:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24321,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1158:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1158:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24323,
                  "indexed": false,
                  "name": "_withheldAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1191:23:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1191:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1071:150:66"
            },
            "src": "1032:190:66"
          },
          {
            "body": {
              "id": 24336,
              "nodeType": "Block",
              "src": "1434:10:66",
              "statements": []
            },
            "documentation": "@notice Constructor\r\n@param _securityToken Address of the security token\r",
            "id": 24337,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24332,
                    "name": "_securityToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24327,
                    "src": "1406:14:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24333,
                    "name": "_polyToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24329,
                    "src": "1422:10:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 24334,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24331,
                  "name": "Module",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 31060,
                  "src": "1399:6:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Module_$31060_$",
                    "typeString": "type(contract Module)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1399:34:66"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24327,
                  "name": "_securityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 24337,
                  "src": "1348:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24329,
                  "name": "_polyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 24337,
                  "src": "1372:18:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1347:44:66"
            },
            "returnParameters": {
              "id": 24335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1434:0:66"
            },
            "scope": 24956,
            "src": "1336:108:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24362,
              "nodeType": "Block",
              "src": "2101:101:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24354,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24339,
                        "src": "2141:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24355,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24341,
                        "src": "2152:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24356,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24343,
                        "src": "2161:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24357,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24345,
                        "src": "2169:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24358,
                        "name": "excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53423,
                        "src": "2178:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24359,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24347,
                        "src": "2188:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24353,
                      "name": "createDividendWithExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24428,
                      "src": "2112:28:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:82:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24361,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:82:66"
                }
              ]
            },
            "documentation": "@notice Creates a dividend and checkpoint for the dividend\r\n@param _maturity Time from which dividend can be paid\r\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n@param _token Address of ERC20 token in which dividend is to be denominated\r\n@param _amount Amount of specified token for dividend\r\n@param _name Name/Title for identification\r",
            "id": 24363,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24350,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53453,
                    "src": "2089:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24349,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30887,
                  "src": "2080:8:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2080:15:66"
              }
            ],
            "name": "createDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24339,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24363,
                  "src": "1927:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24341,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24363,
                  "src": "1955:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24343,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24363,
                  "src": "1981:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24345,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24363,
                  "src": "2006:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24347,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24363,
                  "src": "2032:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24346,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1916:136:66"
            },
            "returnParameters": {
              "id": 24352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2101:0:66"
            },
            "scope": 24956,
            "src": "1893:309:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24391,
              "nodeType": "Block",
              "src": "2974:130:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24382,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24365,
                        "src": "3028:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24383,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24367,
                        "src": "3039:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24384,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24369,
                        "src": "3048:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24385,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24371,
                        "src": "3056:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24386,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24373,
                        "src": "3065:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24387,
                        "name": "excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53423,
                        "src": "3080:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24388,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24375,
                        "src": "3090:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24381,
                      "name": "_createDividendWithCheckpointAndExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24684,
                      "src": "2985:42:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:111:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24390,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:111:66"
                }
              ]
            },
            "documentation": "@notice Creates a dividend with a provided checkpoint\r\n@param _maturity Time from which dividend can be paid\r\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n@param _token Address of ERC20 token in which dividend is to be denominated\r\n@param _amount Amount of specified token for dividend\r\n@param _checkpointId Checkpoint id from which to create dividends\r\n@param _name Name/Title for identification\r",
            "id": 24392,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24378,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53453,
                    "src": "2962:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24379,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24377,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30887,
                  "src": "2953:8:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2953:15:66"
              }
            ],
            "name": "createDividendWithCheckpoint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24365,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24392,
                  "src": "2768:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24367,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24392,
                  "src": "2796:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2796:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24369,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24392,
                  "src": "2822:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2822:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24371,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24392,
                  "src": "2847:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2847:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24373,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24392,
                  "src": "2873:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24375,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24392,
                  "src": "2905:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24374,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2757:168:66"
            },
            "returnParameters": {
              "id": 24380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2974:0:66"
            },
            "scope": 24956,
            "src": "2720:384:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24427,
              "nodeType": "Block",
              "src": "3864:196:66",
              "statements": [
                {
                  "assignments": [
                    24412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24412,
                      "name": "checkpointId",
                      "nodeType": "VariableDeclaration",
                      "scope": 24427,
                      "src": "3875:20:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24411,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3875:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24416,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24413,
                        "name": "securityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53450,
                        "src": "3898:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISecurityToken_$15514",
                          "typeString": "contract ISecurityToken"
                        }
                      },
                      "id": 24414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createCheckpoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15114,
                      "src": "3898:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 24415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3898:32:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3875:55:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24418,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24394,
                        "src": "3984:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24419,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24396,
                        "src": "3995:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24420,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24398,
                        "src": "4004:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24421,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24400,
                        "src": "4012:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24422,
                        "name": "checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24412,
                        "src": "4021:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24423,
                        "name": "_excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24403,
                        "src": "4035:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24424,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24405,
                        "src": "4046:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24417,
                      "name": "_createDividendWithCheckpointAndExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24684,
                      "src": "3941:42:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3941:111:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24426,
                  "nodeType": "ExpressionStatement",
                  "src": "3941:111:66"
                }
              ]
            },
            "documentation": "@notice Creates a dividend and checkpoint for the dividend\r\n@param _maturity Time from which dividend can be paid\r\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n@param _token Address of ERC20 token in which dividend is to be denominated\r\n@param _amount Amount of specified token for dividend\r\n@param _excluded List of addresses to exclude\r\n@param _name Name/Title for identification\r",
            "id": 24428,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24408,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53453,
                    "src": "3852:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24409,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24407,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30887,
                  "src": "3843:8:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3843:15:66"
              }
            ],
            "name": "createDividendWithExclusions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24394,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24428,
                  "src": "3655:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3655:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24396,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24428,
                  "src": "3683:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3683:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24398,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24428,
                  "src": "3709:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24400,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24428,
                  "src": "3734:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24403,
                  "name": "_excluded",
                  "nodeType": "VariableDeclaration",
                  "scope": 24428,
                  "src": "3760:26:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24401,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3760:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24402,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3760:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24405,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24428,
                  "src": "3797:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24404,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3644:173:66"
            },
            "returnParameters": {
              "id": 24410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3864:0:66"
            },
            "scope": 24956,
            "src": "3607:453:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24459,
              "nodeType": "Block",
              "src": "4934:131:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24450,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24430,
                        "src": "4988:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24451,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24432,
                        "src": "4999:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24452,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24434,
                        "src": "5008:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24453,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24436,
                        "src": "5016:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24454,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24438,
                        "src": "5025:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24455,
                        "name": "_excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24441,
                        "src": "5040:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24456,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24443,
                        "src": "5051:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24449,
                      "name": "_createDividendWithCheckpointAndExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24684,
                      "src": "4945:42:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4945:112:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24458,
                  "nodeType": "ExpressionStatement",
                  "src": "4945:112:66"
                }
              ]
            },
            "documentation": "@notice Creates a dividend with a provided checkpoint\r\n@param _maturity Time from which dividend can be paid\r\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n@param _token Address of ERC20 token in which dividend is to be denominated\r\n@param _amount Amount of specified token for dividend\r\n@param _checkpointId Checkpoint id from which to create dividends\r\n@param _excluded List of addresses to exclude\r\n@param _name Name/Title for identification\r",
            "id": 24460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24446,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53453,
                    "src": "4922:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24447,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24445,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30887,
                  "src": "4913:8:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4913:15:66"
              }
            ],
            "name": "createDividendWithCheckpointAndExclusions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24430,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4693:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4693:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24432,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4721:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4721:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24434,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4747:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4747:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24436,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4772:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4772:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24438,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4798:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4798:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24441,
                  "name": "_excluded",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4830:26:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24439,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4830:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24440,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4830:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24443,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4867:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24442,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4867:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4682:205:66"
            },
            "returnParameters": {
              "id": 24448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4934:0:66"
            },
            "scope": 24956,
            "src": "4632:433:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24683,
              "nodeType": "Block",
              "src": "5917:1993:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24479,
                            "name": "_excluded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24473,
                            "src": "5936:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 24480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5936:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24481,
                          "name": "EXCLUDED_ADDRESS_LIMIT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53382,
                          "src": "5956:22:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5936:42:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206d616e7920616464726573736573206578636c75646564",
                        "id": 24483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5980:29:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad6bbeab65aafa09c5a0199f3b6d3d9c624f5f0ceaea9d4127455caa2aae8d8a",
                          "typeString": "literal_string \"Too many addresses excluded\""
                        },
                        "value": "Too many addresses excluded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad6bbeab65aafa09c5a0199f3b6d3d9c624f5f0ceaea9d4127455caa2aae8d8a",
                          "typeString": "literal_string \"Too many addresses excluded\""
                        }
                      ],
                      "id": 24478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "5928:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5928:82:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24485,
                  "nodeType": "ExpressionStatement",
                  "src": "5928:82:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24487,
                          "name": "_expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24464,
                          "src": "6029:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24488,
                          "name": "_maturity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24462,
                          "src": "6039:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6029:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "457870697279206265666f7265206d61747572697479",
                        "id": 24490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6050:24:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbca1011afa52143eca812b4ae6f8974f984300173f590981c28739222360343",
                          "typeString": "literal_string \"Expiry before maturity\""
                        },
                        "value": "Expiry before maturity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fbca1011afa52143eca812b4ae6f8974f984300173f590981c28739222360343",
                          "typeString": "literal_string \"Expiry before maturity\""
                        }
                      ],
                      "id": 24486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6021:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6021:54:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24492,
                  "nodeType": "ExpressionStatement",
                  "src": "6021:54:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24494,
                          "name": "_expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24464,
                          "src": "6158:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24495,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58714,
                          "src": "6168:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6158:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45787069727920696e2070617374",
                        "id": 24497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6173:16:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5b1a1253580801d00b7d14a8b965c659307370d61e1ad288af320f704f0b823",
                          "typeString": "literal_string \"Expiry in past\""
                        },
                        "value": "Expiry in past"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5b1a1253580801d00b7d14a8b965c659307370d61e1ad288af320f704f0b823",
                          "typeString": "literal_string \"Expiry in past\""
                        }
                      ],
                      "id": 24493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6150:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6150:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24499,
                  "nodeType": "ExpressionStatement",
                  "src": "6150:40:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24501,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24468,
                          "src": "6209:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 24502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6219:1:66",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6209:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f206469766964656e642073656e74",
                        "id": 24504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6222:18:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9cbf26dfbb8cb09305cf1aba4b80647de75c687df55e6fabf58881042dc3708",
                          "typeString": "literal_string \"No dividend sent\""
                        },
                        "value": "No dividend sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9cbf26dfbb8cb09305cf1aba4b80647de75c687df55e6fabf58881042dc3708",
                          "typeString": "literal_string \"No dividend sent\""
                        }
                      ],
                      "id": 24500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6201:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6201:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24506,
                  "nodeType": "ExpressionStatement",
                  "src": "6201:40:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24508,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24466,
                          "src": "6260:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 24510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6278:1:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6270:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 24511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6270:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6260:20:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e",
                        "id": 24513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6282:15:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                          "typeString": "literal_string \"Invalid token\""
                        },
                        "value": "Invalid token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                          "typeString": "literal_string \"Invalid token\""
                        }
                      ],
                      "id": 24507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6252:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6252:46:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24515,
                  "nodeType": "ExpressionStatement",
                  "src": "6252:46:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24517,
                          "name": "_checkpointId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24470,
                          "src": "6317:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 24518,
                              "name": "securityToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53450,
                              "src": "6334:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISecurityToken_$15514",
                                "typeString": "contract ISecurityToken"
                              }
                            },
                            "id": 24519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentCheckpointId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15161,
                            "src": "6334:33:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 24520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6334:35:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6317:52:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420636865636b706f696e74",
                        "id": 24522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6371:20:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85c3ad96722524d748760d17bf67fbf55547212e2fce9ee84f25b8f3f7079401",
                          "typeString": "literal_string \"Invalid checkpoint\""
                        },
                        "value": "Invalid checkpoint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85c3ad96722524d748760d17bf67fbf55547212e2fce9ee84f25b8f3f7079401",
                          "typeString": "literal_string \"Invalid checkpoint\""
                        }
                      ],
                      "id": 24516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6309:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6309:83:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24524,
                  "nodeType": "ExpressionStatement",
                  "src": "6309:83:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 24530,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58712,
                              "src": "6439:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 24531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6439:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24533,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58932,
                                "src": "6459:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20DividendCheckpoint_$24956",
                                  "typeString": "contract ERC20DividendCheckpoint"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20DividendCheckpoint_$24956",
                                  "typeString": "contract ERC20DividendCheckpoint"
                                }
                              ],
                              "id": 24532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6451:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 24534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6451:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24535,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24468,
                            "src": "6466:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24527,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24466,
                                "src": "6418:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24526,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58647,
                              "src": "6411:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$58647_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6411:14:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$58647",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 24529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58609,
                          "src": "6411:27:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 24536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6411:63:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e737566666963656e7420616c6c6f77616e6365",
                        "id": 24537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6476:23:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_850703b0894be396621274c59866cd886dcc5ebf12c7027eae9eea3d00afbb3a",
                          "typeString": "literal_string \"insufficent allowance\""
                        },
                        "value": "insufficent allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_850703b0894be396621274c59866cd886dcc5ebf12c7027eae9eea3d00afbb3a",
                          "typeString": "literal_string \"insufficent allowance\""
                        }
                      ],
                      "id": 24525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6403:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6403:97:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24539,
                  "nodeType": "ExpressionStatement",
                  "src": "6403:97:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 24545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24541,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24475,
                          "src": "6519:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 24543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6536:1:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6528:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": "bytes32"
                          },
                          "id": 24544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6528:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6519:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58715,
                      "src": "6511:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 24546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6511:28:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24547,
                  "nodeType": "ExpressionStatement",
                  "src": "6511:28:66"
                },
                {
                  "assignments": [
                    24549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24549,
                      "name": "dividendIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 24683,
                      "src": "6550:21:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24548,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6550:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24552,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 24550,
                      "name": "dividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53420,
                      "src": "6574:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                      }
                    },
                    "id": 24551,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "6574:16:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6550:40:66"
                },
                {
                  "assignments": [
                    24554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24554,
                      "name": "currentSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 24683,
                      "src": "6601:21:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24553,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6601:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24559,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24557,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24470,
                        "src": "6653:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24555,
                        "name": "securityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53450,
                        "src": "6625:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISecurityToken_$15514",
                          "typeString": "contract ISecurityToken"
                        }
                      },
                      "id": 24556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupplyAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15100,
                      "src": "6625:27:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 24558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6625:42:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6601:66:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24561,
                          "name": "currentSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24554,
                          "src": "6686:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 24562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6702:1:66",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6686:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420737570706c79",
                        "id": 24564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6705:16:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        },
                        "value": "Invalid supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        }
                      ],
                      "id": 24560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6678:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6678:44:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24566,
                  "nodeType": "ExpressionStatement",
                  "src": "6678:44:66"
                },
                {
                  "assignments": [
                    24568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24568,
                      "name": "excludedSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 24683,
                      "src": "6733:22:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24567,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6733:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24570,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 24569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6758:1:66",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6733:26:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24575,
                            "name": "_checkpointId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24470,
                            "src": "6826:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24576,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58714,
                            "src": "6858:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24577,
                            "name": "_maturity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24462,
                            "src": "6930:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24578,
                            "name": "_expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24464,
                            "src": "6958:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24579,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24468,
                            "src": "6984:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7010:1:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7030:1:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 24582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7050:5:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7074:1:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7094:1:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "id": 24585,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24475,
                            "src": "7114:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 24574,
                          "name": "Dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53417,
                          "src": "6799:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Dividend_$53417_storage_ptr_$",
                            "typeString": "type(struct DividendCheckpointStorage.Dividend storage pointer)"
                          }
                        },
                        "id": 24586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6799:335:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_memory",
                          "typeString": "struct DividendCheckpointStorage.Dividend memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dividend_$53417_memory",
                          "typeString": "struct DividendCheckpointStorage.Dividend memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24571,
                        "name": "dividends",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53420,
                        "src": "6770:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                        }
                      },
                      "id": 24573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6770:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Dividend_$53417_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct DividendCheckpointStorage.Dividend storage ref) returns (uint256)"
                      }
                    },
                    "id": 24587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6770:375:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24588,
                  "nodeType": "ExpressionStatement",
                  "src": "6770:375:66"
                },
                {
                  "body": {
                    "id": 24648,
                    "nodeType": "Block",
                    "src": "7205:369:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 24607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24601,
                                  "name": "_excluded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24473,
                                  "src": "7228:9:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 24603,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24602,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24590,
                                  "src": "7238:1:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7228:12:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 24605,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7252:1:66",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 24604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7244:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 24606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7244:10:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "7228:26:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "496e76616c69642061646472657373",
                              "id": 24608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7256:17:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              },
                              "value": "Invalid address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              }
                            ],
                            "id": 24600,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              58715,
                              58716
                            ],
                            "referencedDeclaration": 58716,
                            "src": "7220:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7220:54:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24610,
                        "nodeType": "ExpressionStatement",
                        "src": "7220:54:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 24620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "7297:56:66",
                              "subExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 24612,
                                      "name": "dividends",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 53420,
                                      "src": "7298:9:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                                      }
                                    },
                                    "id": 24614,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 24613,
                                      "name": "dividendIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24549,
                                      "src": "7308:13:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7298:24:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                                      "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                                    }
                                  },
                                  "id": 24615,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "dividendExcluded",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 53410,
                                  "src": "7298:41:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 24619,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 24616,
                                    "name": "_excluded",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24473,
                                    "src": "7340:9:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 24618,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 24617,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24590,
                                    "src": "7350:1:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7340:12:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7298:55:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6475706564206578636c7564652061646472657373",
                              "id": 24621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7355:23:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5c43bf177bb2d67887c9da2b9093f5b7102c9d207af587dfa41389d59a8e17d",
                                "typeString": "literal_string \"duped exclude address\""
                              },
                              "value": "duped exclude address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5c43bf177bb2d67887c9da2b9093f5b7102c9d207af587dfa41389d59a8e17d",
                                "typeString": "literal_string \"duped exclude address\""
                              }
                            ],
                            "id": 24611,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              58715,
                              58716
                            ],
                            "referencedDeclaration": 58716,
                            "src": "7289:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7289:90:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24623,
                        "nodeType": "ExpressionStatement",
                        "src": "7289:90:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 24624,
                            "name": "excludedSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24568,
                            "src": "7394:14:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 24629,
                                      "name": "_excluded",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24473,
                                      "src": "7456:9:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 24631,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 24630,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24590,
                                      "src": "7466:1:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7456:12:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 24632,
                                    "name": "_checkpointId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24470,
                                    "src": "7470:13:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 24627,
                                    "name": "securityToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53450,
                                    "src": "7430:13:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISecurityToken_$15514",
                                      "typeString": "contract ISecurityToken"
                                    }
                                  },
                                  "id": 24628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOfAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15109,
                                  "src": "7430:25:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (address,uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 24633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7430:54:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 24625,
                                "name": "excludedSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24568,
                                "src": "7411:14:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 24626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58065,
                              "src": "7411:18:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 24634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7411:74:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7394:91:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24636,
                        "nodeType": "ExpressionStatement",
                        "src": "7394:91:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24637,
                                  "name": "dividends",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53420,
                                  "src": "7500:9:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                                    "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                                  }
                                },
                                "id": 24639,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24638,
                                  "name": "dividendIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24549,
                                  "src": "7510:13:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7500:24:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                                  "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                                }
                              },
                              "id": 24640,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dividendExcluded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53410,
                              "src": "7500:41:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24644,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 24641,
                                "name": "_excluded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24473,
                                "src": "7542:9:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 24643,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 24642,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24590,
                                "src": "7552:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7542:12:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7500:55:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 24645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7558:4:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7500:62:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24647,
                        "nodeType": "ExpressionStatement",
                        "src": "7500:62:66"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24593,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24590,
                      "src": "7178:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24594,
                        "name": "_excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24473,
                        "src": "7182:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7182:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7178:20:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24649,
                  "initializationExpression": {
                    "assignments": [
                      24590
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24590,
                        "name": "j",
                        "nodeType": "VariableDeclaration",
                        "scope": 24649,
                        "src": "7163:9:66",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24589,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7163:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 24592,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7175:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7163:13:66"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 24598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7200:3:66",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 24597,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24590,
                        "src": "7200:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24599,
                    "nodeType": "ExpressionStatement",
                    "src": "7200:3:66"
                  },
                  "nodeType": "ForStatement",
                  "src": "7158:416:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24651,
                          "name": "currentSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24554,
                          "src": "7592:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24652,
                          "name": "excludedSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24568,
                          "src": "7608:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7592:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420737570706c79",
                        "id": 24654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7624:16:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        },
                        "value": "Invalid supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        }
                      ],
                      "id": 24650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "7584:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7584:57:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24656,
                  "nodeType": "ExpressionStatement",
                  "src": "7584:57:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24657,
                          "name": "dividends",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53420,
                          "src": "7652:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                          }
                        },
                        "id": 24659,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24658,
                          "name": "dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24549,
                          "src": "7662:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7652:24:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                        }
                      },
                      "id": 24660,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53396,
                      "src": "7652:36:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 24663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 24661,
                        "name": "currentSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24554,
                        "src": "7691:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 24662,
                        "name": "excludedSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24568,
                        "src": "7707:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7691:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7652:69:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24665,
                  "nodeType": "ExpressionStatement",
                  "src": "7652:69:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24666,
                        "name": "dividendTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25143,
                        "src": "7732:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 24668,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 24667,
                        "name": "dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24549,
                        "src": "7747:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7732:29:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 24669,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24466,
                      "src": "7764:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7732:38:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24671,
                  "nodeType": "ExpressionStatement",
                  "src": "7732:38:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24673,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24470,
                        "src": "7814:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24674,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24462,
                        "src": "7829:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24675,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24464,
                        "src": "7840:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24676,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24466,
                        "src": "7849:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24677,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24468,
                        "src": "7857:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24678,
                        "name": "currentSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24554,
                        "src": "7866:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24679,
                        "name": "dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24549,
                        "src": "7881:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24680,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24475,
                        "src": "7896:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24672,
                      "name": "_emitERC20DividendDepositedEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24717,
                      "src": "7781:32:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address,uint256,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 24681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7781:121:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24682,
                  "nodeType": "ExpressionStatement",
                  "src": "7781:121:66"
                }
              ]
            },
            "documentation": "@notice Creates a dividend with a provided checkpoint\r\n@param _maturity Time from which dividend can be paid\r\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n@param _token Address of ERC20 token in which dividend is to be denominated\r\n@param _amount Amount of specified token for dividend\r\n@param _checkpointId Checkpoint id from which to create dividends\r\n@param _excluded List of addresses to exclude\r\n@param _name Name/Title for identification\r",
            "id": 24684,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createDividendWithCheckpointAndExclusions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24462,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5699:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5699:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24464,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5727:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5727:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24466,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5753:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5753:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24468,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5778:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5778:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24470,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5804:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5804:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24473,
                  "name": "_excluded",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5836:26:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24471,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5836:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24472,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5836:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24475,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5873:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24474,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5873:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5688:205:66"
            },
            "returnParameters": {
              "id": 24477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5917:0:66"
            },
            "scope": 24956,
            "src": "5637:2273:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24716,
              "nodeType": "Block",
              "src": "8374:339:66",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24704,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58712,
                          "src": "8491:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8491:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24706,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24686,
                        "src": "8516:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24707,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24688,
                        "src": "8544:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24708,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24690,
                        "src": "8568:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24709,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24692,
                        "src": "8590:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24710,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24694,
                        "src": "8611:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24711,
                        "name": "currentSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24696,
                        "src": "8633:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24712,
                        "name": "dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24698,
                        "src": "8661:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24713,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24700,
                        "src": "8689:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24703,
                      "name": "ERC20DividendDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24293,
                      "src": "8454:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,address,uint256,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 24714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8454:251:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24715,
                  "nodeType": "EmitStatement",
                  "src": "8449:256:66"
                }
              ]
            },
            "documentation": "@notice Emits the ERC20DividendDeposited event.\r\nSeperated into a different function as a workaround for stack too deep error\r",
            "id": 24717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20DividendDepositedEvent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24686,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8129:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8129:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24688,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8161:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8161:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24690,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8189:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8189:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24692,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8215:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8215:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24694,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8240:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8240:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24696,
                  "name": "currentSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8266:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8266:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24698,
                  "name": "dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8298:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8298:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24700,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8330:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24699,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8330:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8118:232:66"
            },
            "returnParameters": {
              "id": 24702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8374:0:66"
            },
            "scope": 24956,
            "src": "8077:636:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24811,
              "nodeType": "Block",
              "src": "9055:716:66",
              "statements": [
                {
                  "assignments": [
                    24727,
                    24729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24727,
                      "name": "claim",
                      "nodeType": "VariableDeclaration",
                      "scope": 24811,
                      "src": "9067:13:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24726,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9067:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24729,
                      "name": "withheld",
                      "nodeType": "VariableDeclaration",
                      "scope": 24811,
                      "src": "9082:16:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24728,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9082:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24734,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24731,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24723,
                        "src": "9120:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24732,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24719,
                        "src": "9136:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 24730,
                      "name": "calculateDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23562,
                      "src": "9102:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 24733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9102:41:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9066:77:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24735,
                          "name": "_dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24721,
                          "src": "9154:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24738,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53406,
                        "src": "9154:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 24739,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 24737,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24719,
                        "src": "9172:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9154:25:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 24740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9182:4:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9154:32:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24742,
                  "nodeType": "ExpressionStatement",
                  "src": "9154:32:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24743,
                        "name": "_dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24721,
                        "src": "9197:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                        }
                      },
                      "id": 24745,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53394,
                      "src": "9197:23:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24748,
                            "name": "_dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24721,
                            "src": "9233:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                            }
                          },
                          "id": 24749,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53394,
                          "src": "9233:23:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 24746,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24727,
                          "src": "9223:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58065,
                        "src": "9223:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 24750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9223:34:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9197:60:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24752,
                  "nodeType": "ExpressionStatement",
                  "src": "9197:60:66"
                },
                {
                  "assignments": [
                    24754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24754,
                      "name": "claimAfterWithheld",
                      "nodeType": "VariableDeclaration",
                      "scope": 24811,
                      "src": "9268:26:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9268:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24759,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24757,
                        "name": "withheld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24729,
                        "src": "9307:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24755,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24727,
                        "src": "9297:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 24756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58041,
                      "src": "9297:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 24758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9297:19:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9268:48:66"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24760,
                      "name": "claimAfterWithheld",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24754,
                      "src": "9331:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9352:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9331:22:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 24777,
                  "nodeType": "IfStatement",
                  "src": "9327:158:66",
                  "trueBody": {
                    "id": 24776,
                    "nodeType": "Block",
                    "src": "9355:130:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 24770,
                                  "name": "_payee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24719,
                                  "src": "9426:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 24771,
                                  "name": "claimAfterWithheld",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24754,
                                  "src": "9434:18:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 24765,
                                        "name": "dividendTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25143,
                                        "src": "9385:14:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                          "typeString": "mapping(uint256 => address)"
                                        }
                                      },
                                      "id": 24767,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 24766,
                                        "name": "_dividendIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24723,
                                        "src": "9400:14:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9385:30:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 24764,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58647,
                                    "src": "9378:6:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$58647_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 24768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9378:38:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$58647",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 24769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58589,
                                "src": "9378:47:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 24772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9378:75:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7472616e73666572206661696c6564",
                              "id": 24773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9455:17:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                                "typeString": "literal_string \"transfer failed\""
                              },
                              "value": "transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                                "typeString": "literal_string \"transfer failed\""
                              }
                            ],
                            "id": 24763,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              58715,
                              58716
                            ],
                            "referencedDeclaration": 58716,
                            "src": "9370:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9370:103:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24775,
                        "nodeType": "ExpressionStatement",
                        "src": "9370:103:66"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24778,
                      "name": "withheld",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24729,
                      "src": "9499:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9510:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9499:12:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 24800,
                  "nodeType": "IfStatement",
                  "src": "9495:160:66",
                  "trueBody": {
                    "id": 24799,
                    "nodeType": "Block",
                    "src": "9513:142:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 24781,
                              "name": "_dividend",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24721,
                              "src": "9528:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                                "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                              }
                            },
                            "id": 24783,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalWithheld",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53400,
                            "src": "9528:23:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24787,
                                "name": "withheld",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24729,
                                "src": "9582:8:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 24784,
                                  "name": "_dividend",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24721,
                                  "src": "9554:9:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                                    "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                                  }
                                },
                                "id": 24785,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalWithheld",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 53400,
                                "src": "9554:23:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 24786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58065,
                              "src": "9554:27:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 24788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9554:37:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9528:63:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24790,
                        "nodeType": "ExpressionStatement",
                        "src": "9528:63:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 24791,
                                "name": "_dividend",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24721,
                                "src": "9606:9:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                                  "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                                }
                              },
                              "id": 24794,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withheld",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53414,
                              "src": "9606:18:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 24795,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24793,
                              "name": "_payee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24719,
                              "src": "9625:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9606:26:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 24796,
                            "name": "withheld",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24729,
                            "src": "9635:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9606:37:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24798,
                        "nodeType": "ExpressionStatement",
                        "src": "9606:37:66"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24802,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24719,
                        "src": "9691:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24803,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24723,
                        "src": "9699:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24804,
                          "name": "dividendTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25143,
                          "src": "9715:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 24806,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24805,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24723,
                          "src": "9730:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9715:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24807,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24727,
                        "src": "9747:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24808,
                        "name": "withheld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24729,
                        "src": "9754:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24801,
                      "name": "ERC20DividendClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24305,
                      "src": "9670:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 24809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9670:93:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24810,
                  "nodeType": "EmitStatement",
                  "src": "9665:98:66"
                }
              ]
            },
            "documentation": "@notice Internal function for paying dividends\r\n@param _payee Address of investor\r\n@param _dividend Storage with previously issued dividends\r\n@param _dividendIndex Dividend to pay\r",
            "id": 24812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24719,
                  "name": "_payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 24812,
                  "src": "8970:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 24718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8970:15:66",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24721,
                  "name": "_dividend",
                  "nodeType": "VariableDeclaration",
                  "scope": 24812,
                  "src": "8994:26:66",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                    "typeString": "struct DividendCheckpointStorage.Dividend"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 24720,
                    "name": "Dividend",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 53417,
                    "src": "8994:8:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                      "typeString": "struct DividendCheckpointStorage.Dividend"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24723,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24812,
                  "src": "9022:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9022:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8969:76:66"
            },
            "returnParameters": {
              "id": 24725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9055:0:66"
            },
            "scope": 24956,
            "src": "8948:823:66",
            "stateMutability": "nonpayable",
            "superFunction": 23479,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24892,
              "nodeType": "Block",
              "src": "10019:740:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24821,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24814,
                          "src": "10038:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24822,
                            "name": "dividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53420,
                            "src": "10055:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                            }
                          },
                          "id": 24823,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10055:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10038:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206469766964656e64",
                        "id": 24825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10073:18:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        },
                        "value": "Invalid dividend"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        }
                      ],
                      "id": 24820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "10030:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10030:62:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24827,
                  "nodeType": "ExpressionStatement",
                  "src": "10030:62:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24829,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58714,
                          "src": "10175:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 24830,
                              "name": "dividends",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53420,
                              "src": "10182:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                                "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                              }
                            },
                            "id": 24832,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24831,
                              "name": "_dividendIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24814,
                              "src": "10192:14:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10182:25:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                            }
                          },
                          "id": 24833,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53390,
                          "src": "10182:32:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10175:39:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4469766964656e642065787069727920696e20667574757265",
                        "id": 24835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10216:27:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c19756747eccd4f83d088119f0f002cf6ad1200cd3e28d3f70bd8b846cf8e2b9",
                          "typeString": "literal_string \"Dividend expiry in future\""
                        },
                        "value": "Dividend expiry in future"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c19756747eccd4f83d088119f0f002cf6ad1200cd3e28d3f70bd8b846cf8e2b9",
                          "typeString": "literal_string \"Dividend expiry in future\""
                        }
                      ],
                      "id": 24828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "10167:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10167:77:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24837,
                  "nodeType": "ExpressionStatement",
                  "src": "10167:77:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10263:36:66",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 24839,
                              "name": "dividends",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53420,
                              "src": "10264:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                                "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                              }
                            },
                            "id": 24841,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24840,
                              "name": "_dividendIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24814,
                              "src": "10274:14:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10264:25:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                            }
                          },
                          "id": 24842,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reclaimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53398,
                          "src": "10264:35:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "616c726561647920636c61696d6564",
                        "id": 24844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10301:17:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        },
                        "value": "already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        }
                      ],
                      "id": 24838,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "10255:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10255:64:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24846,
                  "nodeType": "ExpressionStatement",
                  "src": "10255:64:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24847,
                          "name": "dividends",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53420,
                          "src": "10330:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                          }
                        },
                        "id": 24849,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24848,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24814,
                          "src": "10340:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10330:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                        }
                      },
                      "id": 24850,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reclaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53398,
                      "src": "10330:35:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 24851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10368:4:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10330:42:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24853,
                  "nodeType": "ExpressionStatement",
                  "src": "10330:42:66"
                },
                {
                  "assignments": [
                    24855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24855,
                      "name": "dividend",
                      "nodeType": "VariableDeclaration",
                      "scope": 24892,
                      "src": "10383:25:66",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                        "typeString": "struct DividendCheckpointStorage.Dividend"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 24854,
                        "name": "Dividend",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 53417,
                        "src": "10383:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24859,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 24856,
                      "name": "dividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53420,
                      "src": "10411:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                      }
                    },
                    "id": 24858,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 24857,
                      "name": "_dividendIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24814,
                      "src": "10421:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10411:25:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                      "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10383:53:66"
                },
                {
                  "assignments": [
                    24861
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24861,
                      "name": "remainingAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 24892,
                      "src": "10447:23:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24860,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10447:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24868,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24865,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24855,
                          "src": "10493:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24866,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53394,
                        "src": "10493:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24862,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24855,
                          "src": "10473:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24863,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53392,
                        "src": "10473:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 24864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58041,
                      "src": "10473:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 24867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10473:43:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10447:69:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24876,
                              "name": "getTreasuryWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23087,
                              "src": "10583:17:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10583:19:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24878,
                            "name": "remainingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24861,
                            "src": "10604:15:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24871,
                                  "name": "dividendTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25143,
                                  "src": "10542:14:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 24873,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24872,
                                  "name": "_dividendIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24814,
                                  "src": "10557:14:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10542:30:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24870,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58647,
                              "src": "10535:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$58647_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10535:38:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$58647",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 24875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58589,
                          "src": "10535:47:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 24879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10535:85:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 24880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10622:17:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 24869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "10527:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10527:113:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24882,
                  "nodeType": "ExpressionStatement",
                  "src": "10527:113:66"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24884,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53379,
                        "src": "10679:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24885,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24814,
                        "src": "10687:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24886,
                          "name": "dividendTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25143,
                          "src": "10703:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 24888,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24887,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24814,
                          "src": "10718:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10703:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24889,
                        "name": "remainingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24861,
                        "src": "10735:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24883,
                      "name": "ERC20DividendReclaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24315,
                      "src": "10656:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 24890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10656:95:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24891,
                  "nodeType": "EmitStatement",
                  "src": "10651:100:66"
                }
              ]
            },
            "documentation": "@notice Issuer can reclaim remaining unclaimed dividend amounts, for expired dividends\r\n@param _dividendIndex Dividend to reclaim\r",
            "id": 24893,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24817,
                    "name": "OPERATOR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53456,
                    "src": "10009:8:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24818,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24816,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30887,
                  "src": "10000:8:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10000:18:66"
              }
            ],
            "name": "reclaimDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24814,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24893,
                  "src": "9967:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9967:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9966:24:66"
            },
            "returnParameters": {
              "id": 24819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10019:0:66"
            },
            "scope": 24956,
            "src": "9942:817:66",
            "stateMutability": "nonpayable",
            "superFunction": 23484,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24954,
              "nodeType": "Block",
              "src": "10977:560:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24902,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24895,
                          "src": "10996:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24903,
                            "name": "dividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53420,
                            "src": "11013:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                            }
                          },
                          "id": 24904,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11013:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10996:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206469766964656e64",
                        "id": 24906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11031:18:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        },
                        "value": "Invalid dividend"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        }
                      ],
                      "id": 24901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "10988:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10988:62:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24908,
                  "nodeType": "ExpressionStatement",
                  "src": "10988:62:66"
                },
                {
                  "assignments": [
                    24910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24910,
                      "name": "dividend",
                      "nodeType": "VariableDeclaration",
                      "scope": 24954,
                      "src": "11061:25:66",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                        "typeString": "struct DividendCheckpointStorage.Dividend"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 24909,
                        "name": "Dividend",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 53417,
                        "src": "11061:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24914,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 24911,
                      "name": "dividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53420,
                      "src": "11089:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                      }
                    },
                    "id": 24913,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 24912,
                      "name": "_dividendIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24895,
                      "src": "11099:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11089:25:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                      "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11061:53:66"
                },
                {
                  "assignments": [
                    24916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24916,
                      "name": "remainingWithheld",
                      "nodeType": "VariableDeclaration",
                      "scope": 24954,
                      "src": "11125:25:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24915,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11125:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24923,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24920,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24910,
                          "src": "11180:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24921,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalWithheldWithdrawn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53402,
                        "src": "11180:31:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24917,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24910,
                          "src": "11153:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24918,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalWithheld",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53400,
                        "src": "11153:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 24919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58041,
                      "src": "11153:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 24922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11153:59:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11125:87:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24924,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24910,
                        "src": "11223:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                        }
                      },
                      "id": 24926,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalWithheldWithdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53402,
                      "src": "11223:31:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24927,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24910,
                        "src": "11257:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                        }
                      },
                      "id": 24928,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalWithheld",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53400,
                      "src": "11257:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11223:56:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24930,
                  "nodeType": "ExpressionStatement",
                  "src": "11223:56:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24938,
                              "name": "getTreasuryWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23087,
                              "src": "11346:17:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11346:19:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24940,
                            "name": "remainingWithheld",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24916,
                            "src": "11367:17:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24933,
                                  "name": "dividendTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25143,
                                  "src": "11305:14:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 24935,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24934,
                                  "name": "_dividendIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24895,
                                  "src": "11320:14:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11305:30:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24932,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58647,
                              "src": "11298:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$58647_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11298:38:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$58647",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 24937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58589,
                          "src": "11298:47:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 24941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11298:87:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 24942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11387:17:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 24931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "11290:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11290:115:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24944,
                  "nodeType": "ExpressionStatement",
                  "src": "11290:115:66"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24946,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53379,
                        "src": "11455:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24947,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24895,
                        "src": "11463:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24948,
                          "name": "dividendTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25143,
                          "src": "11479:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 24950,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24949,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24895,
                          "src": "11494:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11479:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24951,
                        "name": "remainingWithheld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24916,
                        "src": "11511:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24945,
                      "name": "ERC20DividendWithholdingWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24325,
                      "src": "11421:33:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 24952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11421:108:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24953,
                  "nodeType": "EmitStatement",
                  "src": "11416:113:66"
                }
              ]
            },
            "documentation": "@notice Allows issuer to withdraw withheld tax\r\n@param _dividendIndex Dividend to withdraw from\r",
            "id": 24955,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24898,
                    "name": "OPERATOR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53456,
                    "src": "10967:8:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24899,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24897,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30887,
                  "src": "10958:8:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10958:18:66"
              }
            ],
            "name": "withdrawWithholding",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24895,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24955,
                  "src": "10925:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10925:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10924:24:66"
            },
            "returnParameters": {
              "id": 24900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10977:0:66"
            },
            "scope": 24956,
            "src": "10896:641:66",
            "stateMutability": "nonpayable",
            "superFunction": 23650,
            "visibility": "external"
          }
        ],
        "scope": 24957,
        "src": "293:11249:66"
      }
    ],
    "src": "0:11544:66"
  },
  "legacyAST": {
    "absolutePath": "/C/mspace/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpoint.sol",
    "exportedSymbols": {
      "ERC20DividendCheckpoint": [
        24956
      ]
    },
    "id": 24957,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24262,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:66"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/modules/Checkpoint/Dividend/DividendCheckpoint.sol",
        "file": "../DividendCheckpoint.sol",
        "id": 24263,
        "nodeType": "ImportDirective",
        "scope": 24957,
        "sourceUnit": 24261,
        "src": "26:35:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpointStorage.sol",
        "file": "./ERC20DividendCheckpointStorage.sol",
        "id": 24264,
        "nodeType": "ImportDirective",
        "scope": 24957,
        "sourceUnit": 25145,
        "src": "63:46:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/interfaces/IOwnable.sol",
        "file": "../../../../interfaces/IOwnable.sol",
        "id": 24265,
        "nodeType": "ImportDirective",
        "scope": 24957,
        "sourceUnit": 14322,
        "src": "111:45:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 24266,
        "nodeType": "ImportDirective",
        "scope": 24957,
        "sourceUnit": 58648,
        "src": "158:64:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24267,
              "name": "ERC20DividendCheckpointStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 25144,
              "src": "329:30:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20DividendCheckpointStorage_$25144",
                "typeString": "contract ERC20DividendCheckpointStorage"
              }
            },
            "id": 24268,
            "nodeType": "InheritanceSpecifier",
            "src": "329:30:66"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24269,
              "name": "DividendCheckpoint",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24260,
              "src": "361:18:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DividendCheckpoint_$24260",
                "typeString": "contract DividendCheckpoint"
              }
            },
            "id": 24270,
            "nodeType": "InheritanceSpecifier",
            "src": "361:18:66"
          }
        ],
        "contractDependencies": [
          1769,
          13966,
          24260,
          25144,
          25921,
          31060,
          53432,
          53487
        ],
        "contractKind": "contract",
        "documentation": "@title Checkpoint module for issuing ERC20 dividends\r",
        "fullyImplemented": true,
        "id": 24956,
        "linearizedBaseContracts": [
          24956,
          24260,
          31060,
          1769,
          53487,
          13966,
          25921,
          53432,
          25144
        ],
        "name": "ERC20DividendCheckpoint",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 24273,
            "libraryName": {
              "contractScope": null,
              "id": 24271,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 58086,
              "src": "393:8:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$58086",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "387:27:66",
            "typeName": {
              "id": 24272,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "406:7:66",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24293,
            "name": "ERC20DividendDeposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24275,
                  "indexed": true,
                  "name": "_depositor",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "461:26:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24277,
                  "indexed": false,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "498:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24279,
                  "indexed": false,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "530:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24281,
                  "indexed": false,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "558:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24283,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "584:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24285,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "617:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24287,
                  "indexed": false,
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "643:20:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24289,
                  "indexed": false,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "674:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24291,
                  "indexed": true,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24293,
                  "src": "707:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24290,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "450:285:66"
            },
            "src": "422:314:66"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24305,
            "name": "ERC20DividendClaimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24295,
                  "indexed": true,
                  "name": "_payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 24305,
                  "src": "769:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24297,
                  "indexed": true,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24305,
                  "src": "793:30:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24299,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24305,
                  "src": "825:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24301,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24305,
                  "src": "849:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24303,
                  "indexed": false,
                  "name": "_withheld",
                  "nodeType": "VariableDeclaration",
                  "scope": 24305,
                  "src": "866:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "768:116:66"
            },
            "src": "742:143:66"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24315,
            "name": "ERC20DividendReclaimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24307,
                  "indexed": true,
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "scope": 24315,
                  "src": "920:24:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24309,
                  "indexed": true,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24315,
                  "src": "946:30:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24311,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24315,
                  "src": "978:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24313,
                  "indexed": false,
                  "name": "_claimedAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24315,
                  "src": "1002:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "919:106:66"
            },
            "src": "891:135:66"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24325,
            "name": "ERC20DividendWithholdingWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24317,
                  "indexed": true,
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1082:24:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1082:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24319,
                  "indexed": true,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1117:30:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24321,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1158:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1158:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24323,
                  "indexed": false,
                  "name": "_withheldAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1191:23:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1191:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1071:150:66"
            },
            "src": "1032:190:66"
          },
          {
            "body": {
              "id": 24336,
              "nodeType": "Block",
              "src": "1434:10:66",
              "statements": []
            },
            "documentation": "@notice Constructor\r\n@param _securityToken Address of the security token\r",
            "id": 24337,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24332,
                    "name": "_securityToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24327,
                    "src": "1406:14:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24333,
                    "name": "_polyToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24329,
                    "src": "1422:10:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 24334,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24331,
                  "name": "Module",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 31060,
                  "src": "1399:6:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Module_$31060_$",
                    "typeString": "type(contract Module)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1399:34:66"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24327,
                  "name": "_securityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 24337,
                  "src": "1348:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24329,
                  "name": "_polyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 24337,
                  "src": "1372:18:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1347:44:66"
            },
            "returnParameters": {
              "id": 24335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1434:0:66"
            },
            "scope": 24956,
            "src": "1336:108:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24362,
              "nodeType": "Block",
              "src": "2101:101:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24354,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24339,
                        "src": "2141:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24355,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24341,
                        "src": "2152:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24356,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24343,
                        "src": "2161:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24357,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24345,
                        "src": "2169:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24358,
                        "name": "excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53423,
                        "src": "2178:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24359,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24347,
                        "src": "2188:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24353,
                      "name": "createDividendWithExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24428,
                      "src": "2112:28:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:82:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24361,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:82:66"
                }
              ]
            },
            "documentation": "@notice Creates a dividend and checkpoint for the dividend\r\n@param _maturity Time from which dividend can be paid\r\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n@param _token Address of ERC20 token in which dividend is to be denominated\r\n@param _amount Amount of specified token for dividend\r\n@param _name Name/Title for identification\r",
            "id": 24363,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24350,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53453,
                    "src": "2089:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24349,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30887,
                  "src": "2080:8:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2080:15:66"
              }
            ],
            "name": "createDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24339,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24363,
                  "src": "1927:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24341,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24363,
                  "src": "1955:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24343,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24363,
                  "src": "1981:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24345,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24363,
                  "src": "2006:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24347,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24363,
                  "src": "2032:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24346,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1916:136:66"
            },
            "returnParameters": {
              "id": 24352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2101:0:66"
            },
            "scope": 24956,
            "src": "1893:309:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24391,
              "nodeType": "Block",
              "src": "2974:130:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24382,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24365,
                        "src": "3028:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24383,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24367,
                        "src": "3039:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24384,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24369,
                        "src": "3048:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24385,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24371,
                        "src": "3056:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24386,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24373,
                        "src": "3065:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24387,
                        "name": "excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53423,
                        "src": "3080:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24388,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24375,
                        "src": "3090:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24381,
                      "name": "_createDividendWithCheckpointAndExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24684,
                      "src": "2985:42:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:111:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24390,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:111:66"
                }
              ]
            },
            "documentation": "@notice Creates a dividend with a provided checkpoint\r\n@param _maturity Time from which dividend can be paid\r\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n@param _token Address of ERC20 token in which dividend is to be denominated\r\n@param _amount Amount of specified token for dividend\r\n@param _checkpointId Checkpoint id from which to create dividends\r\n@param _name Name/Title for identification\r",
            "id": 24392,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24378,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53453,
                    "src": "2962:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24379,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24377,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30887,
                  "src": "2953:8:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2953:15:66"
              }
            ],
            "name": "createDividendWithCheckpoint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24365,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24392,
                  "src": "2768:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24367,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24392,
                  "src": "2796:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2796:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24369,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24392,
                  "src": "2822:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2822:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24371,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24392,
                  "src": "2847:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2847:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24373,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24392,
                  "src": "2873:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24375,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24392,
                  "src": "2905:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24374,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2757:168:66"
            },
            "returnParameters": {
              "id": 24380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2974:0:66"
            },
            "scope": 24956,
            "src": "2720:384:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24427,
              "nodeType": "Block",
              "src": "3864:196:66",
              "statements": [
                {
                  "assignments": [
                    24412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24412,
                      "name": "checkpointId",
                      "nodeType": "VariableDeclaration",
                      "scope": 24427,
                      "src": "3875:20:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24411,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3875:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24416,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24413,
                        "name": "securityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53450,
                        "src": "3898:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISecurityToken_$15514",
                          "typeString": "contract ISecurityToken"
                        }
                      },
                      "id": 24414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createCheckpoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15114,
                      "src": "3898:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 24415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3898:32:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3875:55:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24418,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24394,
                        "src": "3984:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24419,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24396,
                        "src": "3995:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24420,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24398,
                        "src": "4004:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24421,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24400,
                        "src": "4012:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24422,
                        "name": "checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24412,
                        "src": "4021:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24423,
                        "name": "_excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24403,
                        "src": "4035:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24424,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24405,
                        "src": "4046:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24417,
                      "name": "_createDividendWithCheckpointAndExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24684,
                      "src": "3941:42:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3941:111:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24426,
                  "nodeType": "ExpressionStatement",
                  "src": "3941:111:66"
                }
              ]
            },
            "documentation": "@notice Creates a dividend and checkpoint for the dividend\r\n@param _maturity Time from which dividend can be paid\r\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n@param _token Address of ERC20 token in which dividend is to be denominated\r\n@param _amount Amount of specified token for dividend\r\n@param _excluded List of addresses to exclude\r\n@param _name Name/Title for identification\r",
            "id": 24428,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24408,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53453,
                    "src": "3852:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24409,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24407,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30887,
                  "src": "3843:8:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3843:15:66"
              }
            ],
            "name": "createDividendWithExclusions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24394,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24428,
                  "src": "3655:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3655:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24396,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24428,
                  "src": "3683:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3683:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24398,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24428,
                  "src": "3709:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24400,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24428,
                  "src": "3734:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24403,
                  "name": "_excluded",
                  "nodeType": "VariableDeclaration",
                  "scope": 24428,
                  "src": "3760:26:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24401,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3760:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24402,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3760:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24405,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24428,
                  "src": "3797:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24404,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3644:173:66"
            },
            "returnParameters": {
              "id": 24410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3864:0:66"
            },
            "scope": 24956,
            "src": "3607:453:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24459,
              "nodeType": "Block",
              "src": "4934:131:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24450,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24430,
                        "src": "4988:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24451,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24432,
                        "src": "4999:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24452,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24434,
                        "src": "5008:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24453,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24436,
                        "src": "5016:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24454,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24438,
                        "src": "5025:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24455,
                        "name": "_excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24441,
                        "src": "5040:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24456,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24443,
                        "src": "5051:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24449,
                      "name": "_createDividendWithCheckpointAndExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24684,
                      "src": "4945:42:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4945:112:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24458,
                  "nodeType": "ExpressionStatement",
                  "src": "4945:112:66"
                }
              ]
            },
            "documentation": "@notice Creates a dividend with a provided checkpoint\r\n@param _maturity Time from which dividend can be paid\r\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n@param _token Address of ERC20 token in which dividend is to be denominated\r\n@param _amount Amount of specified token for dividend\r\n@param _checkpointId Checkpoint id from which to create dividends\r\n@param _excluded List of addresses to exclude\r\n@param _name Name/Title for identification\r",
            "id": 24460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24446,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53453,
                    "src": "4922:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24447,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24445,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30887,
                  "src": "4913:8:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4913:15:66"
              }
            ],
            "name": "createDividendWithCheckpointAndExclusions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24430,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4693:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4693:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24432,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4721:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4721:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24434,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4747:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4747:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24436,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4772:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4772:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24438,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4798:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4798:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24441,
                  "name": "_excluded",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4830:26:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24439,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4830:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24440,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4830:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24443,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24460,
                  "src": "4867:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24442,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4867:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4682:205:66"
            },
            "returnParameters": {
              "id": 24448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4934:0:66"
            },
            "scope": 24956,
            "src": "4632:433:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24683,
              "nodeType": "Block",
              "src": "5917:1993:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24479,
                            "name": "_excluded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24473,
                            "src": "5936:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 24480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5936:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24481,
                          "name": "EXCLUDED_ADDRESS_LIMIT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53382,
                          "src": "5956:22:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5936:42:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206d616e7920616464726573736573206578636c75646564",
                        "id": 24483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5980:29:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad6bbeab65aafa09c5a0199f3b6d3d9c624f5f0ceaea9d4127455caa2aae8d8a",
                          "typeString": "literal_string \"Too many addresses excluded\""
                        },
                        "value": "Too many addresses excluded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad6bbeab65aafa09c5a0199f3b6d3d9c624f5f0ceaea9d4127455caa2aae8d8a",
                          "typeString": "literal_string \"Too many addresses excluded\""
                        }
                      ],
                      "id": 24478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "5928:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5928:82:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24485,
                  "nodeType": "ExpressionStatement",
                  "src": "5928:82:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24487,
                          "name": "_expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24464,
                          "src": "6029:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24488,
                          "name": "_maturity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24462,
                          "src": "6039:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6029:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "457870697279206265666f7265206d61747572697479",
                        "id": 24490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6050:24:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbca1011afa52143eca812b4ae6f8974f984300173f590981c28739222360343",
                          "typeString": "literal_string \"Expiry before maturity\""
                        },
                        "value": "Expiry before maturity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fbca1011afa52143eca812b4ae6f8974f984300173f590981c28739222360343",
                          "typeString": "literal_string \"Expiry before maturity\""
                        }
                      ],
                      "id": 24486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6021:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6021:54:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24492,
                  "nodeType": "ExpressionStatement",
                  "src": "6021:54:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24494,
                          "name": "_expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24464,
                          "src": "6158:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24495,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58714,
                          "src": "6168:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6158:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45787069727920696e2070617374",
                        "id": 24497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6173:16:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5b1a1253580801d00b7d14a8b965c659307370d61e1ad288af320f704f0b823",
                          "typeString": "literal_string \"Expiry in past\""
                        },
                        "value": "Expiry in past"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5b1a1253580801d00b7d14a8b965c659307370d61e1ad288af320f704f0b823",
                          "typeString": "literal_string \"Expiry in past\""
                        }
                      ],
                      "id": 24493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6150:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6150:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24499,
                  "nodeType": "ExpressionStatement",
                  "src": "6150:40:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24501,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24468,
                          "src": "6209:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 24502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6219:1:66",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6209:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f206469766964656e642073656e74",
                        "id": 24504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6222:18:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9cbf26dfbb8cb09305cf1aba4b80647de75c687df55e6fabf58881042dc3708",
                          "typeString": "literal_string \"No dividend sent\""
                        },
                        "value": "No dividend sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9cbf26dfbb8cb09305cf1aba4b80647de75c687df55e6fabf58881042dc3708",
                          "typeString": "literal_string \"No dividend sent\""
                        }
                      ],
                      "id": 24500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6201:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6201:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24506,
                  "nodeType": "ExpressionStatement",
                  "src": "6201:40:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24508,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24466,
                          "src": "6260:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 24510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6278:1:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6270:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 24511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6270:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6260:20:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e",
                        "id": 24513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6282:15:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                          "typeString": "literal_string \"Invalid token\""
                        },
                        "value": "Invalid token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                          "typeString": "literal_string \"Invalid token\""
                        }
                      ],
                      "id": 24507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6252:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6252:46:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24515,
                  "nodeType": "ExpressionStatement",
                  "src": "6252:46:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24517,
                          "name": "_checkpointId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24470,
                          "src": "6317:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 24518,
                              "name": "securityToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53450,
                              "src": "6334:13:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISecurityToken_$15514",
                                "typeString": "contract ISecurityToken"
                              }
                            },
                            "id": 24519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentCheckpointId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15161,
                            "src": "6334:33:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 24520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6334:35:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6317:52:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420636865636b706f696e74",
                        "id": 24522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6371:20:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85c3ad96722524d748760d17bf67fbf55547212e2fce9ee84f25b8f3f7079401",
                          "typeString": "literal_string \"Invalid checkpoint\""
                        },
                        "value": "Invalid checkpoint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85c3ad96722524d748760d17bf67fbf55547212e2fce9ee84f25b8f3f7079401",
                          "typeString": "literal_string \"Invalid checkpoint\""
                        }
                      ],
                      "id": 24516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6309:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6309:83:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24524,
                  "nodeType": "ExpressionStatement",
                  "src": "6309:83:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 24530,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58712,
                              "src": "6439:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 24531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6439:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24533,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58932,
                                "src": "6459:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20DividendCheckpoint_$24956",
                                  "typeString": "contract ERC20DividendCheckpoint"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20DividendCheckpoint_$24956",
                                  "typeString": "contract ERC20DividendCheckpoint"
                                }
                              ],
                              "id": 24532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6451:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 24534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6451:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24535,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24468,
                            "src": "6466:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24527,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24466,
                                "src": "6418:6:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24526,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58647,
                              "src": "6411:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$58647_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6411:14:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$58647",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 24529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58609,
                          "src": "6411:27:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 24536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6411:63:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e737566666963656e7420616c6c6f77616e6365",
                        "id": 24537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6476:23:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_850703b0894be396621274c59866cd886dcc5ebf12c7027eae9eea3d00afbb3a",
                          "typeString": "literal_string \"insufficent allowance\""
                        },
                        "value": "insufficent allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_850703b0894be396621274c59866cd886dcc5ebf12c7027eae9eea3d00afbb3a",
                          "typeString": "literal_string \"insufficent allowance\""
                        }
                      ],
                      "id": 24525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6403:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6403:97:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24539,
                  "nodeType": "ExpressionStatement",
                  "src": "6403:97:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 24545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24541,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24475,
                          "src": "6519:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 24543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6536:1:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6528:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": "bytes32"
                          },
                          "id": 24544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6528:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6519:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58715,
                      "src": "6511:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 24546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6511:28:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24547,
                  "nodeType": "ExpressionStatement",
                  "src": "6511:28:66"
                },
                {
                  "assignments": [
                    24549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24549,
                      "name": "dividendIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 24683,
                      "src": "6550:21:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24548,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6550:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24552,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 24550,
                      "name": "dividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53420,
                      "src": "6574:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                      }
                    },
                    "id": 24551,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "6574:16:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6550:40:66"
                },
                {
                  "assignments": [
                    24554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24554,
                      "name": "currentSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 24683,
                      "src": "6601:21:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24553,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6601:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24559,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24557,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24470,
                        "src": "6653:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24555,
                        "name": "securityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53450,
                        "src": "6625:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISecurityToken_$15514",
                          "typeString": "contract ISecurityToken"
                        }
                      },
                      "id": 24556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupplyAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15100,
                      "src": "6625:27:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 24558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6625:42:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6601:66:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24561,
                          "name": "currentSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24554,
                          "src": "6686:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 24562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6702:1:66",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6686:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420737570706c79",
                        "id": 24564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6705:16:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        },
                        "value": "Invalid supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        }
                      ],
                      "id": 24560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "6678:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6678:44:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24566,
                  "nodeType": "ExpressionStatement",
                  "src": "6678:44:66"
                },
                {
                  "assignments": [
                    24568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24568,
                      "name": "excludedSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 24683,
                      "src": "6733:22:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24567,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6733:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24570,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 24569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6758:1:66",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6733:26:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24575,
                            "name": "_checkpointId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24470,
                            "src": "6826:13:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24576,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58714,
                            "src": "6858:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24577,
                            "name": "_maturity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24462,
                            "src": "6930:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24578,
                            "name": "_expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24464,
                            "src": "6958:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24579,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24468,
                            "src": "6984:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7010:1:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7030:1:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 24582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7050:5:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7074:1:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7094:1:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "id": 24585,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24475,
                            "src": "7114:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 24574,
                          "name": "Dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53417,
                          "src": "6799:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Dividend_$53417_storage_ptr_$",
                            "typeString": "type(struct DividendCheckpointStorage.Dividend storage pointer)"
                          }
                        },
                        "id": 24586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6799:335:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_memory",
                          "typeString": "struct DividendCheckpointStorage.Dividend memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dividend_$53417_memory",
                          "typeString": "struct DividendCheckpointStorage.Dividend memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24571,
                        "name": "dividends",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53420,
                        "src": "6770:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                        }
                      },
                      "id": 24573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6770:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Dividend_$53417_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct DividendCheckpointStorage.Dividend storage ref) returns (uint256)"
                      }
                    },
                    "id": 24587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6770:375:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24588,
                  "nodeType": "ExpressionStatement",
                  "src": "6770:375:66"
                },
                {
                  "body": {
                    "id": 24648,
                    "nodeType": "Block",
                    "src": "7205:369:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 24607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24601,
                                  "name": "_excluded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24473,
                                  "src": "7228:9:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 24603,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24602,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24590,
                                  "src": "7238:1:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7228:12:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 24605,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7252:1:66",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 24604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7244:7:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 24606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7244:10:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "7228:26:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "496e76616c69642061646472657373",
                              "id": 24608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7256:17:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              },
                              "value": "Invalid address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              }
                            ],
                            "id": 24600,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              58715,
                              58716
                            ],
                            "referencedDeclaration": 58716,
                            "src": "7220:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7220:54:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24610,
                        "nodeType": "ExpressionStatement",
                        "src": "7220:54:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 24620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "7297:56:66",
                              "subExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 24612,
                                      "name": "dividends",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 53420,
                                      "src": "7298:9:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                                      }
                                    },
                                    "id": 24614,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 24613,
                                      "name": "dividendIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24549,
                                      "src": "7308:13:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7298:24:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                                      "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                                    }
                                  },
                                  "id": 24615,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "dividendExcluded",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 53410,
                                  "src": "7298:41:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 24619,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 24616,
                                    "name": "_excluded",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24473,
                                    "src": "7340:9:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 24618,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 24617,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24590,
                                    "src": "7350:1:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7340:12:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7298:55:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6475706564206578636c7564652061646472657373",
                              "id": 24621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7355:23:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5c43bf177bb2d67887c9da2b9093f5b7102c9d207af587dfa41389d59a8e17d",
                                "typeString": "literal_string \"duped exclude address\""
                              },
                              "value": "duped exclude address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5c43bf177bb2d67887c9da2b9093f5b7102c9d207af587dfa41389d59a8e17d",
                                "typeString": "literal_string \"duped exclude address\""
                              }
                            ],
                            "id": 24611,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              58715,
                              58716
                            ],
                            "referencedDeclaration": 58716,
                            "src": "7289:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7289:90:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24623,
                        "nodeType": "ExpressionStatement",
                        "src": "7289:90:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 24624,
                            "name": "excludedSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24568,
                            "src": "7394:14:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 24629,
                                      "name": "_excluded",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24473,
                                      "src": "7456:9:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 24631,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 24630,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24590,
                                      "src": "7466:1:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7456:12:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 24632,
                                    "name": "_checkpointId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24470,
                                    "src": "7470:13:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 24627,
                                    "name": "securityToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53450,
                                    "src": "7430:13:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISecurityToken_$15514",
                                      "typeString": "contract ISecurityToken"
                                    }
                                  },
                                  "id": 24628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOfAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15109,
                                  "src": "7430:25:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (address,uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 24633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7430:54:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 24625,
                                "name": "excludedSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24568,
                                "src": "7411:14:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 24626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58065,
                              "src": "7411:18:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 24634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7411:74:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7394:91:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24636,
                        "nodeType": "ExpressionStatement",
                        "src": "7394:91:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24637,
                                  "name": "dividends",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53420,
                                  "src": "7500:9:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                                    "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                                  }
                                },
                                "id": 24639,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24638,
                                  "name": "dividendIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24549,
                                  "src": "7510:13:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7500:24:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                                  "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                                }
                              },
                              "id": 24640,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dividendExcluded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53410,
                              "src": "7500:41:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24644,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 24641,
                                "name": "_excluded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24473,
                                "src": "7542:9:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 24643,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 24642,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24590,
                                "src": "7552:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7542:12:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7500:55:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 24645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7558:4:66",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7500:62:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24647,
                        "nodeType": "ExpressionStatement",
                        "src": "7500:62:66"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24593,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24590,
                      "src": "7178:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24594,
                        "name": "_excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24473,
                        "src": "7182:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7182:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7178:20:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24649,
                  "initializationExpression": {
                    "assignments": [
                      24590
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24590,
                        "name": "j",
                        "nodeType": "VariableDeclaration",
                        "scope": 24649,
                        "src": "7163:9:66",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24589,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7163:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 24592,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7175:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7163:13:66"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 24598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7200:3:66",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 24597,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24590,
                        "src": "7200:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24599,
                    "nodeType": "ExpressionStatement",
                    "src": "7200:3:66"
                  },
                  "nodeType": "ForStatement",
                  "src": "7158:416:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24651,
                          "name": "currentSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24554,
                          "src": "7592:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24652,
                          "name": "excludedSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24568,
                          "src": "7608:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7592:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420737570706c79",
                        "id": 24654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7624:16:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        },
                        "value": "Invalid supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        }
                      ],
                      "id": 24650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "7584:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7584:57:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24656,
                  "nodeType": "ExpressionStatement",
                  "src": "7584:57:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24657,
                          "name": "dividends",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53420,
                          "src": "7652:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                          }
                        },
                        "id": 24659,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24658,
                          "name": "dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24549,
                          "src": "7662:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7652:24:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                        }
                      },
                      "id": 24660,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53396,
                      "src": "7652:36:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 24663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 24661,
                        "name": "currentSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24554,
                        "src": "7691:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 24662,
                        "name": "excludedSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24568,
                        "src": "7707:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7691:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7652:69:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24665,
                  "nodeType": "ExpressionStatement",
                  "src": "7652:69:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24666,
                        "name": "dividendTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25143,
                        "src": "7732:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 24668,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 24667,
                        "name": "dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24549,
                        "src": "7747:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7732:29:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 24669,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24466,
                      "src": "7764:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7732:38:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24671,
                  "nodeType": "ExpressionStatement",
                  "src": "7732:38:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24673,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24470,
                        "src": "7814:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24674,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24462,
                        "src": "7829:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24675,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24464,
                        "src": "7840:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24676,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24466,
                        "src": "7849:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24677,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24468,
                        "src": "7857:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24678,
                        "name": "currentSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24554,
                        "src": "7866:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24679,
                        "name": "dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24549,
                        "src": "7881:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24680,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24475,
                        "src": "7896:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24672,
                      "name": "_emitERC20DividendDepositedEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24717,
                      "src": "7781:32:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address,uint256,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 24681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7781:121:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24682,
                  "nodeType": "ExpressionStatement",
                  "src": "7781:121:66"
                }
              ]
            },
            "documentation": "@notice Creates a dividend with a provided checkpoint\r\n@param _maturity Time from which dividend can be paid\r\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\r\n@param _token Address of ERC20 token in which dividend is to be denominated\r\n@param _amount Amount of specified token for dividend\r\n@param _checkpointId Checkpoint id from which to create dividends\r\n@param _excluded List of addresses to exclude\r\n@param _name Name/Title for identification\r",
            "id": 24684,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createDividendWithCheckpointAndExclusions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24462,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5699:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5699:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24464,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5727:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5727:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24466,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5753:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5753:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24468,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5778:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5778:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24470,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5804:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5804:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24473,
                  "name": "_excluded",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5836:26:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24471,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5836:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24472,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5836:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24475,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24684,
                  "src": "5873:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24474,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5873:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5688:205:66"
            },
            "returnParameters": {
              "id": 24477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5917:0:66"
            },
            "scope": 24956,
            "src": "5637:2273:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24716,
              "nodeType": "Block",
              "src": "8374:339:66",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24704,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58712,
                          "src": "8491:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8491:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24706,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24686,
                        "src": "8516:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24707,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24688,
                        "src": "8544:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24708,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24690,
                        "src": "8568:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24709,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24692,
                        "src": "8590:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24710,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24694,
                        "src": "8611:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24711,
                        "name": "currentSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24696,
                        "src": "8633:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24712,
                        "name": "dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24698,
                        "src": "8661:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24713,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24700,
                        "src": "8689:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24703,
                      "name": "ERC20DividendDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24293,
                      "src": "8454:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,address,uint256,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 24714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8454:251:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24715,
                  "nodeType": "EmitStatement",
                  "src": "8449:256:66"
                }
              ]
            },
            "documentation": "@notice Emits the ERC20DividendDeposited event.\r\nSeperated into a different function as a workaround for stack too deep error\r",
            "id": 24717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20DividendDepositedEvent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24686,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8129:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8129:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24688,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8161:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8161:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24690,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8189:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8189:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24692,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8215:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8215:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24694,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8240:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8240:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24696,
                  "name": "currentSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8266:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8266:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24698,
                  "name": "dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8298:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8298:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24700,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24717,
                  "src": "8330:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24699,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8330:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8118:232:66"
            },
            "returnParameters": {
              "id": 24702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8374:0:66"
            },
            "scope": 24956,
            "src": "8077:636:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24811,
              "nodeType": "Block",
              "src": "9055:716:66",
              "statements": [
                {
                  "assignments": [
                    24727,
                    24729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24727,
                      "name": "claim",
                      "nodeType": "VariableDeclaration",
                      "scope": 24811,
                      "src": "9067:13:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24726,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9067:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24729,
                      "name": "withheld",
                      "nodeType": "VariableDeclaration",
                      "scope": 24811,
                      "src": "9082:16:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24728,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9082:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24734,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24731,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24723,
                        "src": "9120:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24732,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24719,
                        "src": "9136:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 24730,
                      "name": "calculateDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23562,
                      "src": "9102:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 24733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9102:41:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9066:77:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24735,
                          "name": "_dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24721,
                          "src": "9154:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24738,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53406,
                        "src": "9154:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 24739,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 24737,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24719,
                        "src": "9172:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9154:25:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 24740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9182:4:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9154:32:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24742,
                  "nodeType": "ExpressionStatement",
                  "src": "9154:32:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24743,
                        "name": "_dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24721,
                        "src": "9197:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                        }
                      },
                      "id": 24745,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53394,
                      "src": "9197:23:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24748,
                            "name": "_dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24721,
                            "src": "9233:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                            }
                          },
                          "id": 24749,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53394,
                          "src": "9233:23:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 24746,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24727,
                          "src": "9223:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58065,
                        "src": "9223:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 24750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9223:34:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9197:60:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24752,
                  "nodeType": "ExpressionStatement",
                  "src": "9197:60:66"
                },
                {
                  "assignments": [
                    24754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24754,
                      "name": "claimAfterWithheld",
                      "nodeType": "VariableDeclaration",
                      "scope": 24811,
                      "src": "9268:26:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9268:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24759,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24757,
                        "name": "withheld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24729,
                        "src": "9307:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24755,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24727,
                        "src": "9297:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 24756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58041,
                      "src": "9297:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 24758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9297:19:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9268:48:66"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24760,
                      "name": "claimAfterWithheld",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24754,
                      "src": "9331:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9352:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9331:22:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 24777,
                  "nodeType": "IfStatement",
                  "src": "9327:158:66",
                  "trueBody": {
                    "id": 24776,
                    "nodeType": "Block",
                    "src": "9355:130:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 24770,
                                  "name": "_payee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24719,
                                  "src": "9426:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 24771,
                                  "name": "claimAfterWithheld",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24754,
                                  "src": "9434:18:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 24765,
                                        "name": "dividendTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25143,
                                        "src": "9385:14:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                          "typeString": "mapping(uint256 => address)"
                                        }
                                      },
                                      "id": 24767,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 24766,
                                        "name": "_dividendIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24723,
                                        "src": "9400:14:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9385:30:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 24764,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58647,
                                    "src": "9378:6:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$58647_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 24768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9378:38:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$58647",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 24769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58589,
                                "src": "9378:47:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 24772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9378:75:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7472616e73666572206661696c6564",
                              "id": 24773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9455:17:66",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                                "typeString": "literal_string \"transfer failed\""
                              },
                              "value": "transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                                "typeString": "literal_string \"transfer failed\""
                              }
                            ],
                            "id": 24763,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              58715,
                              58716
                            ],
                            "referencedDeclaration": 58716,
                            "src": "9370:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9370:103:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24775,
                        "nodeType": "ExpressionStatement",
                        "src": "9370:103:66"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24778,
                      "name": "withheld",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24729,
                      "src": "9499:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9510:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9499:12:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 24800,
                  "nodeType": "IfStatement",
                  "src": "9495:160:66",
                  "trueBody": {
                    "id": 24799,
                    "nodeType": "Block",
                    "src": "9513:142:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 24781,
                              "name": "_dividend",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24721,
                              "src": "9528:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                                "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                              }
                            },
                            "id": 24783,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalWithheld",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53400,
                            "src": "9528:23:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24787,
                                "name": "withheld",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24729,
                                "src": "9582:8:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 24784,
                                  "name": "_dividend",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24721,
                                  "src": "9554:9:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                                    "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                                  }
                                },
                                "id": 24785,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalWithheld",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 53400,
                                "src": "9554:23:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 24786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58065,
                              "src": "9554:27:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 24788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9554:37:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9528:63:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24790,
                        "nodeType": "ExpressionStatement",
                        "src": "9528:63:66"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 24791,
                                "name": "_dividend",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24721,
                                "src": "9606:9:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                                  "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                                }
                              },
                              "id": 24794,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withheld",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53414,
                              "src": "9606:18:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 24795,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24793,
                              "name": "_payee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24719,
                              "src": "9625:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9606:26:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 24796,
                            "name": "withheld",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24729,
                            "src": "9635:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9606:37:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24798,
                        "nodeType": "ExpressionStatement",
                        "src": "9606:37:66"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24802,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24719,
                        "src": "9691:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24803,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24723,
                        "src": "9699:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24804,
                          "name": "dividendTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25143,
                          "src": "9715:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 24806,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24805,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24723,
                          "src": "9730:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9715:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24807,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24727,
                        "src": "9747:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24808,
                        "name": "withheld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24729,
                        "src": "9754:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24801,
                      "name": "ERC20DividendClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24305,
                      "src": "9670:20:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 24809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9670:93:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24810,
                  "nodeType": "EmitStatement",
                  "src": "9665:98:66"
                }
              ]
            },
            "documentation": "@notice Internal function for paying dividends\r\n@param _payee Address of investor\r\n@param _dividend Storage with previously issued dividends\r\n@param _dividendIndex Dividend to pay\r",
            "id": 24812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24719,
                  "name": "_payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 24812,
                  "src": "8970:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 24718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8970:15:66",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24721,
                  "name": "_dividend",
                  "nodeType": "VariableDeclaration",
                  "scope": 24812,
                  "src": "8994:26:66",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                    "typeString": "struct DividendCheckpointStorage.Dividend"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 24720,
                    "name": "Dividend",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 53417,
                    "src": "8994:8:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                      "typeString": "struct DividendCheckpointStorage.Dividend"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24723,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24812,
                  "src": "9022:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9022:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8969:76:66"
            },
            "returnParameters": {
              "id": 24725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9055:0:66"
            },
            "scope": 24956,
            "src": "8948:823:66",
            "stateMutability": "nonpayable",
            "superFunction": 23479,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24892,
              "nodeType": "Block",
              "src": "10019:740:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24821,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24814,
                          "src": "10038:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24822,
                            "name": "dividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53420,
                            "src": "10055:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                            }
                          },
                          "id": 24823,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10055:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10038:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206469766964656e64",
                        "id": 24825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10073:18:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        },
                        "value": "Invalid dividend"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        }
                      ],
                      "id": 24820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "10030:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10030:62:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24827,
                  "nodeType": "ExpressionStatement",
                  "src": "10030:62:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24829,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58714,
                          "src": "10175:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 24830,
                              "name": "dividends",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53420,
                              "src": "10182:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                                "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                              }
                            },
                            "id": 24832,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24831,
                              "name": "_dividendIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24814,
                              "src": "10192:14:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10182:25:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                            }
                          },
                          "id": 24833,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53390,
                          "src": "10182:32:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10175:39:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4469766964656e642065787069727920696e20667574757265",
                        "id": 24835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10216:27:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c19756747eccd4f83d088119f0f002cf6ad1200cd3e28d3f70bd8b846cf8e2b9",
                          "typeString": "literal_string \"Dividend expiry in future\""
                        },
                        "value": "Dividend expiry in future"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c19756747eccd4f83d088119f0f002cf6ad1200cd3e28d3f70bd8b846cf8e2b9",
                          "typeString": "literal_string \"Dividend expiry in future\""
                        }
                      ],
                      "id": 24828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "10167:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10167:77:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24837,
                  "nodeType": "ExpressionStatement",
                  "src": "10167:77:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10263:36:66",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 24839,
                              "name": "dividends",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53420,
                              "src": "10264:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                                "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                              }
                            },
                            "id": 24841,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24840,
                              "name": "_dividendIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24814,
                              "src": "10274:14:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10264:25:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                            }
                          },
                          "id": 24842,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reclaimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53398,
                          "src": "10264:35:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "616c726561647920636c61696d6564",
                        "id": 24844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10301:17:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        },
                        "value": "already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        }
                      ],
                      "id": 24838,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "10255:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10255:64:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24846,
                  "nodeType": "ExpressionStatement",
                  "src": "10255:64:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24847,
                          "name": "dividends",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53420,
                          "src": "10330:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                          }
                        },
                        "id": 24849,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24848,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24814,
                          "src": "10340:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10330:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                        }
                      },
                      "id": 24850,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reclaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53398,
                      "src": "10330:35:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 24851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10368:4:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10330:42:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24853,
                  "nodeType": "ExpressionStatement",
                  "src": "10330:42:66"
                },
                {
                  "assignments": [
                    24855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24855,
                      "name": "dividend",
                      "nodeType": "VariableDeclaration",
                      "scope": 24892,
                      "src": "10383:25:66",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                        "typeString": "struct DividendCheckpointStorage.Dividend"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 24854,
                        "name": "Dividend",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 53417,
                        "src": "10383:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24859,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 24856,
                      "name": "dividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53420,
                      "src": "10411:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                      }
                    },
                    "id": 24858,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 24857,
                      "name": "_dividendIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24814,
                      "src": "10421:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10411:25:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                      "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10383:53:66"
                },
                {
                  "assignments": [
                    24861
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24861,
                      "name": "remainingAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 24892,
                      "src": "10447:23:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24860,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10447:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24868,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24865,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24855,
                          "src": "10493:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24866,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53394,
                        "src": "10493:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24862,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24855,
                          "src": "10473:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24863,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53392,
                        "src": "10473:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 24864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58041,
                      "src": "10473:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 24867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10473:43:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10447:69:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24876,
                              "name": "getTreasuryWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23087,
                              "src": "10583:17:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10583:19:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24878,
                            "name": "remainingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24861,
                            "src": "10604:15:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24871,
                                  "name": "dividendTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25143,
                                  "src": "10542:14:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 24873,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24872,
                                  "name": "_dividendIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24814,
                                  "src": "10557:14:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10542:30:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24870,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58647,
                              "src": "10535:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$58647_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10535:38:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$58647",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 24875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58589,
                          "src": "10535:47:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 24879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10535:85:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 24880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10622:17:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 24869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "10527:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10527:113:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24882,
                  "nodeType": "ExpressionStatement",
                  "src": "10527:113:66"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24884,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53379,
                        "src": "10679:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24885,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24814,
                        "src": "10687:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24886,
                          "name": "dividendTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25143,
                          "src": "10703:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 24888,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24887,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24814,
                          "src": "10718:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10703:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24889,
                        "name": "remainingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24861,
                        "src": "10735:15:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24883,
                      "name": "ERC20DividendReclaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24315,
                      "src": "10656:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 24890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10656:95:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24891,
                  "nodeType": "EmitStatement",
                  "src": "10651:100:66"
                }
              ]
            },
            "documentation": "@notice Issuer can reclaim remaining unclaimed dividend amounts, for expired dividends\r\n@param _dividendIndex Dividend to reclaim\r",
            "id": 24893,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24817,
                    "name": "OPERATOR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53456,
                    "src": "10009:8:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24818,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24816,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30887,
                  "src": "10000:8:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10000:18:66"
              }
            ],
            "name": "reclaimDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24814,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24893,
                  "src": "9967:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9967:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9966:24:66"
            },
            "returnParameters": {
              "id": 24819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10019:0:66"
            },
            "scope": 24956,
            "src": "9942:817:66",
            "stateMutability": "nonpayable",
            "superFunction": 23484,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24954,
              "nodeType": "Block",
              "src": "10977:560:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24902,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24895,
                          "src": "10996:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24903,
                            "name": "dividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53420,
                            "src": "11013:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                            }
                          },
                          "id": 24904,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11013:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10996:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206469766964656e64",
                        "id": 24906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11031:18:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        },
                        "value": "Invalid dividend"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        }
                      ],
                      "id": 24901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "10988:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10988:62:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24908,
                  "nodeType": "ExpressionStatement",
                  "src": "10988:62:66"
                },
                {
                  "assignments": [
                    24910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24910,
                      "name": "dividend",
                      "nodeType": "VariableDeclaration",
                      "scope": 24954,
                      "src": "11061:25:66",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                        "typeString": "struct DividendCheckpointStorage.Dividend"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 24909,
                        "name": "Dividend",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 53417,
                        "src": "11061:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24914,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 24911,
                      "name": "dividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53420,
                      "src": "11089:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dividend_$53417_storage_$dyn_storage",
                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                      }
                    },
                    "id": 24913,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 24912,
                      "name": "_dividendIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24895,
                      "src": "11099:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11089:25:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dividend_$53417_storage",
                      "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11061:53:66"
                },
                {
                  "assignments": [
                    24916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24916,
                      "name": "remainingWithheld",
                      "nodeType": "VariableDeclaration",
                      "scope": 24954,
                      "src": "11125:25:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24915,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11125:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24923,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24920,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24910,
                          "src": "11180:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24921,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalWithheldWithdrawn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53402,
                        "src": "11180:31:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24917,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24910,
                          "src": "11153:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24918,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalWithheld",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53400,
                        "src": "11153:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 24919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58041,
                      "src": "11153:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 24922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11153:59:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11125:87:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24924,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24910,
                        "src": "11223:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                        }
                      },
                      "id": 24926,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalWithheldWithdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53402,
                      "src": "11223:31:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24927,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24910,
                        "src": "11257:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$53417_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                        }
                      },
                      "id": 24928,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalWithheld",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53400,
                      "src": "11257:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11223:56:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24930,
                  "nodeType": "ExpressionStatement",
                  "src": "11223:56:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24938,
                              "name": "getTreasuryWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23087,
                              "src": "11346:17:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11346:19:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24940,
                            "name": "remainingWithheld",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24916,
                            "src": "11367:17:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24933,
                                  "name": "dividendTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25143,
                                  "src": "11305:14:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 24935,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24934,
                                  "name": "_dividendIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24895,
                                  "src": "11320:14:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11305:30:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24932,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58647,
                              "src": "11298:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$58647_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11298:38:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$58647",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 24937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58589,
                          "src": "11298:47:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 24941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11298:87:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 24942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11387:17:66",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 24931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58716,
                      "src": "11290:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11290:115:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24944,
                  "nodeType": "ExpressionStatement",
                  "src": "11290:115:66"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24946,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53379,
                        "src": "11455:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24947,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24895,
                        "src": "11463:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24948,
                          "name": "dividendTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25143,
                          "src": "11479:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 24950,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24949,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24895,
                          "src": "11494:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11479:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24951,
                        "name": "remainingWithheld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24916,
                        "src": "11511:17:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24945,
                      "name": "ERC20DividendWithholdingWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24325,
                      "src": "11421:33:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 24952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11421:108:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24953,
                  "nodeType": "EmitStatement",
                  "src": "11416:113:66"
                }
              ]
            },
            "documentation": "@notice Allows issuer to withdraw withheld tax\r\n@param _dividendIndex Dividend to withdraw from\r",
            "id": 24955,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24898,
                    "name": "OPERATOR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53456,
                    "src": "10967:8:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24899,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24897,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30887,
                  "src": "10958:8:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10958:18:66"
              }
            ],
            "name": "withdrawWithholding",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24895,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24955,
                  "src": "10925:22:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10925:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10924:24:66"
            },
            "returnParameters": {
              "id": 24900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10977:0:66"
            },
            "scope": 24956,
            "src": "10896:641:66",
            "stateMutability": "nonpayable",
            "superFunction": 23650,
            "visibility": "external"
          }
        ],
        "scope": 24957,
        "src": "293:11249:66"
      }
    ],
    "src": "0:11544:66"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xd7853DB61fA2D5B5ef36dAC176487e636ca826e7",
      "transactionHash": "0x2729e7abd0e4cf28ca3f8d134a6ee61d3e830770eca4a39beeadfa3738545878"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-05T22:53:44.703Z",
  "devdoc": {
    "methods": {
      "calculateDividend(uint256,address)": {
        "params": {
          "_dividendIndex": "Dividend to calculate\r",
          "_payee": "Affected investor address\r"
        },
        "return": "claim, withheld amounts\r"
      },
      "changeWallet(address)": {
        "params": {
          "_wallet": "Ethereum account address to receive reclaimed dividends and tax\r"
        }
      },
      "configure(address)": {
        "params": {
          "_wallet": "Ethereum account address to receive reclaimed dividends and tax\r"
        }
      },
      "constructor": {
        "params": {
          "_securityToken": "Address of the security token\r"
        }
      },
      "createCheckpoint()": {
        "return": "Checkpoint ID\r"
      },
      "createDividend(uint256,uint256,address,uint256,bytes32)": {
        "params": {
          "_amount": "Amount of specified token for dividend\r",
          "_expiry": "Time until dividend can no longer be paid, and can be reclaimed by issuer\r",
          "_maturity": "Time from which dividend can be paid\r",
          "_name": "Name/Title for identification\r",
          "_token": "Address of ERC20 token in which dividend is to be denominated\r"
        }
      },
      "createDividendWithCheckpoint(uint256,uint256,address,uint256,uint256,bytes32)": {
        "params": {
          "_amount": "Amount of specified token for dividend\r",
          "_checkpointId": "Checkpoint id from which to create dividends\r",
          "_expiry": "Time until dividend can no longer be paid, and can be reclaimed by issuer\r",
          "_maturity": "Time from which dividend can be paid\r",
          "_name": "Name/Title for identification\r",
          "_token": "Address of ERC20 token in which dividend is to be denominated\r"
        }
      },
      "createDividendWithCheckpointAndExclusions(uint256,uint256,address,uint256,uint256,address[],bytes32)": {
        "params": {
          "_amount": "Amount of specified token for dividend\r",
          "_checkpointId": "Checkpoint id from which to create dividends\r",
          "_excluded": "List of addresses to exclude\r",
          "_expiry": "Time until dividend can no longer be paid, and can be reclaimed by issuer\r",
          "_maturity": "Time from which dividend can be paid\r",
          "_name": "Name/Title for identification\r",
          "_token": "Address of ERC20 token in which dividend is to be denominated\r"
        }
      },
      "createDividendWithExclusions(uint256,uint256,address,uint256,address[],bytes32)": {
        "params": {
          "_amount": "Amount of specified token for dividend\r",
          "_excluded": "List of addresses to exclude\r",
          "_expiry": "Time until dividend can no longer be paid, and can be reclaimed by issuer\r",
          "_maturity": "Time from which dividend can be paid\r",
          "_name": "Name/Title for identification\r",
          "_token": "Address of ERC20 token in which dividend is to be denominated\r"
        }
      },
      "getCheckpointData(uint256)": {
        "params": {
          "_checkpointId": "Checkpoint Id to query for\r"
        },
        "return": "address[] list of investors\ruint256[] investor balances\ruint256[] investor withheld percentages\r"
      },
      "getDefaultExcluded()": {
        "return": "List of excluded addresses\r"
      },
      "getDividendData(uint256)": {
        "return": "uint256 timestamp of dividend creation\ruint256 timestamp of dividend maturity\ruint256 timestamp of dividend expiry\ruint256 amount of dividend\ruint256 claimed amount of dividend\rbytes32 name of dividend\r"
      },
      "getDividendIndex(uint256)": {
        "params": {
          "_checkpointId": "Checkpoint id to query\r"
        },
        "return": "uint256[]\r"
      },
      "getDividendProgress(uint256)": {
        "params": {
          "_dividendIndex": "Dividend to withdraw from\r"
        },
        "return": "address[] list of investors\rbool[] whether investor has claimed\rbool[] whether investor is excluded\ruint256[] amount of withheld tax (estimate if not claimed)\ruint256[] amount of claim (estimate if not claimeed)\ruint256[] investor balance\r"
      },
      "getDividendsData()": {
        "return": "uint256[] timestamp of dividends creation\ruint256[] timestamp of dividends maturity\ruint256[] timestamp of dividends expiry\ruint256[] amount of dividends\ruint256[] claimed amount of dividends\rbytes32[] name of dividends\r"
      },
      "getInitFunction()": {
        "return": "bytes4\r"
      },
      "getPermissions()": {
        "return": "bytes32 array\r"
      },
      "isClaimed(address,uint256)": {
        "params": {
          "_dividendIndex": "Dividend to withdraw from\r"
        },
        "return": "bool whether the address has claimed\r"
      },
      "isExcluded(address,uint256)": {
        "params": {
          "_dividendIndex": "Dividend to withdraw from\r"
        },
        "return": "bool whether the address is excluded\r"
      },
      "pullDividendPayment(uint256)": {
        "params": {
          "_dividendIndex": "Dividend to pull\r"
        }
      },
      "pushDividendPayment(uint256,uint256,uint256)": {
        "params": {
          "_dividendIndex": "Dividend to push\r",
          "_end": "Index in investor list at which to stop pushing dividends\r",
          "_start": "Index in investor list at which to start pushing dividends\r"
        }
      },
      "pushDividendPaymentToAddresses(uint256,address[])": {
        "params": {
          "_dividendIndex": "Dividend to push\r",
          "_payees": "Addresses to which to push the dividend\r"
        }
      },
      "reclaimDividend(uint256)": {
        "params": {
          "_dividendIndex": "Dividend to reclaim\r"
        }
      },
      "reclaimERC20(address)": {
        "details": "We duplicate here due to the overriden owner & onlyOwner\r",
        "params": {
          "_tokenContract": "The address of the token contract\r"
        }
      },
      "reclaimETH()": {
        "details": "We duplicate here due to the overriden owner & onlyOwner\r"
      },
      "setDefaultExcluded(address[])": {
        "params": {
          "_excluded": "Addresses of investors\r"
        }
      },
      "setWithholding(address[],uint256[])": {
        "params": {
          "_investors": "Addresses of investors\r",
          "_withholding": "Withholding tax for individual investors (multiplied by 10**16)\r"
        }
      },
      "setWithholdingFixed(address[],uint256)": {
        "params": {
          "_investors": "Addresses of investor\r",
          "_withholding": "Withholding tax for all investors (multiplied by 10**16)\r"
        }
      },
      "updateDividendDates(uint256,uint256,uint256)": {
        "details": "NB - setting the maturity of a currently matured dividend to a future date\rwill effectively refreeze claims on that dividend until the new maturity date passes\r dev NB - setting the expiry date to a past date will mean no more payments can be pulled\ror pushed out of a dividend\r",
        "params": {
          "_dividendIndex": "Dividend to withdraw from\r",
          "_expiry": "updated expiry date\r",
          "_maturity": "updated maturity date\r"
        }
      },
      "withdrawWithholding(uint256)": {
        "params": {
          "_dividendIndex": "Dividend to withdraw from\r"
        }
      }
    },
    "title": "Checkpoint module for issuing ERC20 dividends\r"
  },
  "userdoc": {
    "methods": {
      "calculateDividend(uint256,address)": {
        "notice": "Calculate amount of dividends claimable\r"
      },
      "changeWallet(address)": {
        "notice": "Function used to change wallet address\r"
      },
      "configure(address)": {
        "notice": "Function used to intialize the contract variables\r"
      },
      "constructor": "Constructor\r",
      "createCheckpoint()": {
        "notice": "Creates a checkpoint on the security token\r"
      },
      "createDividend(uint256,uint256,address,uint256,bytes32)": {
        "notice": "Creates a dividend and checkpoint for the dividend\r"
      },
      "createDividendWithCheckpoint(uint256,uint256,address,uint256,uint256,bytes32)": {
        "notice": "Creates a dividend with a provided checkpoint\r"
      },
      "createDividendWithCheckpointAndExclusions(uint256,uint256,address,uint256,uint256,address[],bytes32)": {
        "notice": "Creates a dividend with a provided checkpoint\r"
      },
      "createDividendWithExclusions(uint256,uint256,address,uint256,address[],bytes32)": {
        "notice": "Creates a dividend and checkpoint for the dividend\r"
      },
      "getCheckpointData(uint256)": {
        "notice": "Retrieves list of investors, their balances, and their current withholding tax percentage\r"
      },
      "getDataStore()": {
        "notice": "used to return the data store address of securityToken\r"
      },
      "getDefaultExcluded()": {
        "notice": "Return the default excluded addresses\r"
      },
      "getDividendData(uint256)": {
        "notice": "Get static dividend data\r"
      },
      "getDividendIndex(uint256)": {
        "notice": "Get the index according to the checkpoint id\r"
      },
      "getDividendProgress(uint256)": {
        "notice": "Retrieves list of investors, their claim status and whether they are excluded\r"
      },
      "getDividendsData()": {
        "notice": "Get static dividend data\r"
      },
      "getInitFunction()": {
        "notice": "Init function i.e generalise function to maintain the structure of the module contract\r"
      },
      "getPermissions()": {
        "notice": "Return the permissions flag that are associated with this module\r"
      },
      "getTreasuryWallet()": {
        "notice": "Returns the treasury wallet address\r"
      },
      "isClaimed(address,uint256)": {
        "notice": "Checks whether an address has claimed a dividend\r"
      },
      "isExcluded(address,uint256)": {
        "notice": "Checks whether an address is excluded from claiming a dividend\r"
      },
      "pause()": {
        "notice": "Pause (overridden function)\r"
      },
      "pullDividendPayment(uint256)": {
        "notice": "Investors can pull their own dividends\r"
      },
      "pushDividendPayment(uint256,uint256,uint256)": {
        "notice": "Issuer can push dividends using the investor list from the security token\r"
      },
      "pushDividendPaymentToAddresses(uint256,address[])": {
        "notice": "Issuer can push dividends to provided addresses\r"
      },
      "reclaimDividend(uint256)": {
        "notice": "Issuer can reclaim remaining unclaimed dividend amounts, for expired dividends\r"
      },
      "reclaimERC20(address)": {
        "notice": "Reclaims ERC20Basic compatible tokens\r"
      },
      "reclaimETH()": {
        "notice": "Reclaims ETH\r"
      },
      "setDefaultExcluded(address[])": {
        "notice": "Function to clear and set list of excluded addresses used for future dividends\r"
      },
      "setWithholding(address[],uint256[])": {
        "notice": "Function to set withholding tax rates for investors\r"
      },
      "setWithholdingFixed(address[],uint256)": {
        "notice": "Function to set withholding tax rates for investors\r"
      },
      "unpause()": {
        "notice": "Unpause (overridden function)\r"
      },
      "updateDividendDates(uint256,uint256,uint256)": {
        "notice": "Allows issuer to change maturity / expiry dates for dividends\r"
      },
      "withdrawWithholding(uint256)": {
        "notice": "Allows issuer to withdraw withheld tax\r"
      }
    }
  }
}