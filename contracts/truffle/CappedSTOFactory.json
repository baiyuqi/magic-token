{
  "contractName": "CappedSTOFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_module",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_setupCost",
          "type": "uint256"
        }
      ],
      "name": "changeSetupCost",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tagsData",
          "type": "bytes32[]"
        }
      ],
      "name": "changeTags",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setupCostInPoly",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_title",
          "type": "string"
        }
      ],
      "name": "changeTitle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_version",
          "type": "string"
        },
        {
          "name": "_logicContract",
          "type": "address"
        },
        {
          "name": "_upgradeData",
          "type": "bytes"
        }
      ],
      "name": "setLogicContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isCostInPoly",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "title",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "latestUpgrade",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "logicContracts",
      "outputs": [
        {
          "name": "version",
          "type": "string"
        },
        {
          "name": "logicContract",
          "type": "address"
        },
        {
          "name": "upgradeData",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "polymathRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "setupCost",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLowerSTVersionBounds",
      "outputs": [
        {
          "name": "",
          "type": "uint8[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTags",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "modules",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "moduleToSecurityToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTypes",
      "outputs": [
        {
          "name": "",
          "type": "uint8[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_setupCost",
          "type": "uint256"
        },
        {
          "name": "_isCostInPoly",
          "type": "bool"
        }
      ],
      "name": "changeCostAndType",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_upgrade",
          "type": "uint256"
        },
        {
          "name": "_version",
          "type": "string"
        },
        {
          "name": "_logicContract",
          "type": "address"
        },
        {
          "name": "_upgradeData",
          "type": "bytes"
        }
      ],
      "name": "updateLogicContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "changeDescription",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUpperSTVersionBounds",
      "outputs": [
        {
          "name": "",
          "type": "uint8[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_boundType",
          "type": "string"
        },
        {
          "name": "_newVersion",
          "type": "uint8[]"
        }
      ],
      "name": "changeSTVersionBounds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_setupCost",
          "type": "uint256"
        },
        {
          "name": "_logicContract",
          "type": "address"
        },
        {
          "name": "_polymathRegistry",
          "type": "address"
        },
        {
          "name": "_isCostInPoly",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_version",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_upgrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_logicContract",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_upgradeData",
          "type": "bytes"
        }
      ],
      "name": "LogicContractSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_module",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_securityToken",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_version",
          "type": "uint256"
        }
      ],
      "name": "ModuleUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_oldSetupCost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_newSetupCost",
          "type": "uint256"
        }
      ],
      "name": "ChangeSetupCost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_isOldCostInPoly",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "_isNewCostInPoly",
          "type": "bool"
        }
      ],
      "name": "ChangeCostType",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_module",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_moduleName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "_moduleFactory",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_creator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_setupCost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_setupCostInPoly",
          "type": "uint256"
        }
      ],
      "name": "GenerateModuleFromFactory",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_boundType",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_major",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "_minor",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "_patch",
          "type": "uint8"
        }
      ],
      "name": "ChangeSTVersionBound",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_setupCost\",\"type\":\"uint256\"}],\"name\":\"changeSetupCost\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tagsData\",\"type\":\"bytes32[]\"}],\"name\":\"changeTags\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setupCostInPoly\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_title\",\"type\":\"string\"}],\"name\":\"changeTitle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_version\",\"type\":\"string\"},{\"name\":\"_logicContract\",\"type\":\"address\"},{\"name\":\"_upgradeData\",\"type\":\"bytes\"}],\"name\":\"setLogicContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isCostInPoly\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestUpgrade\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"logicContracts\",\"outputs\":[{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"logicContract\",\"type\":\"address\"},{\"name\":\"upgradeData\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"polymathRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"setupCost\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLowerSTVersionBounds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTags\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"modules\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"moduleToSecurityToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTypes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_setupCost\",\"type\":\"uint256\"},{\"name\":\"_isCostInPoly\",\"type\":\"bool\"}],\"name\":\"changeCostAndType\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgrade\",\"type\":\"uint256\"},{\"name\":\"_version\",\"type\":\"string\"},{\"name\":\"_logicContract\",\"type\":\"address\"},{\"name\":\"_upgradeData\",\"type\":\"bytes\"}],\"name\":\"updateLogicContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"changeDescription\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUpperSTVersionBounds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_boundType\",\"type\":\"string\"},{\"name\":\"_newVersion\",\"type\":\"uint8[]\"}],\"name\":\"changeSTVersionBounds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_setupCost\",\"type\":\"uint256\"},{\"name\":\"_logicContract\",\"type\":\"address\"},{\"name\":\"_polymathRegistry\",\"type\":\"address\"},{\"name\":\"_isCostInPoly\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_version\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_upgrade\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_logicContract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_upgradeData\",\"type\":\"bytes\"}],\"name\":\"LogicContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_module\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_securityToken\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_version\",\"type\":\"uint256\"}],\"name\":\"ModuleUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldSetupCost\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newSetupCost\",\"type\":\"uint256\"}],\"name\":\"ChangeSetupCost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_isOldCostInPoly\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_isNewCostInPoly\",\"type\":\"bool\"}],\"name\":\"ChangeCostType\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_module\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_moduleName\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_moduleFactory\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_setupCost\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_setupCostInPoly\",\"type\":\"uint256\"}],\"name\":\"GenerateModuleFromFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_boundType\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_major\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"_minor\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"_patch\",\"type\":\"uint8\"}],\"name\":\"ChangeSTVersionBound\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"changeCostAndType(uint256,bool)\":{\"params\":{\"_isCostInPoly\":\"new setup cost currency. USD or POLY\\r\",\"_setupCost\":\"new setup cost\\r\"}},\"changeDescription(string)\":{\"params\":{\"_description\":\"New description that will replace the old one.\\r\"}},\"changeName(bytes32)\":{\"params\":{\"_name\":\"New name that will replace the old one.\\r\"}},\"changeSTVersionBounds(string,uint8[])\":{\"params\":{\"_boundType\":\"Type of bound\\r\",\"_newVersion\":\"new version array\\r\"}},\"changeSetupCost(uint256)\":{\"params\":{\"_setupCost\":\"new setup cost\\r\"}},\"changeTags(bytes32[])\":{\"params\":{\"_tagsData\":\"New list of tags\\r\"}},\"changeTitle(string)\":{\"params\":{\"_title\":\"New Title that will replace the old one.\\r\"}},\"constructor\":{\"params\":{\"_isCostInPoly\":\"true = cost in Poly, false = USD\\r\",\"_logicContract\":\"Contract address that contains the logic related to `description`\\r\",\"_polymathRegistry\":\"Address of the Polymath registry\\r\",\"_setupCost\":\"Setup cost of the module\\r\"}},\"deploy(bytes)\":{\"params\":{\"_data\":\"Data used for the intialization of the module factory variables\\r\"},\"return\":\"address Contract address of the Module\\r\"},\"getLowerSTVersionBounds()\":{\"return\":\"lower bound\\r\"},\"getUpperSTVersionBounds()\":{\"return\":\"upper bound\\r\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setLogicContract(string,address,bytes)\":{\"params\":{\"_logicContract\":\"Address of deployed module logic contract referenced from proxy\\r\",\"_upgradeData\":\"Data to be passed in call to upgradeToAndCall when a token upgrades its module\\r\",\"_version\":\"Version of upgraded module\\r\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"updateLogicContract(uint256,string,address,bytes)\":{\"params\":{\"_logicContract\":\"Address of deployed module logic contract referenced from proxy\\r\",\"_upgrade\":\"logic contract to upgrade\\r\",\"_upgradeData\":\"Data to be passed in call to upgradeToAndCall when a token upgrades its module\\r\",\"_version\":\"Version of upgraded module\\r\"}},\"upgrade(address)\":{\"params\":{\"_module\":\"Address of (proxy) module to be upgraded\\r\"}}},\"title\":\"Factory for deploying CappedSTO module\\r\"},\"userdoc\":{\"methods\":{\"changeCostAndType(uint256,bool)\":{\"notice\":\"Used to change the currency and amount of setup cost\\r\"},\"changeDescription(string)\":{\"notice\":\"Updates the description of the ModuleFactory\\r\"},\"changeName(bytes32)\":{\"notice\":\"Updates the name of the ModuleFactory\\r\"},\"changeSTVersionBounds(string,uint8[])\":{\"notice\":\"Function use to change the lower and upper bound of the compatible version st\\r\"},\"changeSetupCost(uint256)\":{\"notice\":\"Used to change the fee of the setup cost\\r\"},\"changeTags(bytes32[])\":{\"notice\":\"Updates the tags of the ModuleFactory\\r\"},\"changeTitle(string)\":{\"notice\":\"Updates the title of the ModuleFactory\\r\"},\"constructor\":\"Constructor\\r\",\"deploy(bytes)\":{\"notice\":\"Used to launch the Module with the help of factory\\r\"},\"getLowerSTVersionBounds()\":{\"notice\":\"Used to get the lower bound\\r\"},\"getTags()\":{\"notice\":\"Get the tags related to the module factory\\r\"},\"getTypes()\":{\"notice\":\"Type of the Module factory\\r\"},\"getUpperSTVersionBounds()\":{\"notice\":\"Used to get the upper bound\\r\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setLogicContract(string,address,bytes)\":{\"notice\":\"Used to upgrade the module factory\\r\"},\"setupCostInPoly()\":{\"notice\":\"Get the setup cost of the module\\r\"},\"updateLogicContract(uint256,string,address,bytes)\":{\"notice\":\"Used to update an existing token logic contract\\r\"},\"upgrade(address)\":{\"notice\":\"Used by a security token to upgrade a given module\\r\"},\"version()\":{\"notice\":\"Get the version related to the module factory\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/C/mspace/polymath-core/contracts/modules/STO/Capped/CappedSTOFactory.sol\":\"CappedSTOFactory\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/mspace/polymath-core/contracts/Pausable.sol\":{\"keccak256\":\"0x1532ed18c39de5d1fd35a244895d495d444566146125e0587d8e536337b68a49\",\"urls\":[\"bzzr://6f570268839a2980c2edf1200ca406ba7faffa5c4c726fa5972c411470636163\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModule.sol\":{\"keccak256\":\"0xbe5b025f519bd373776ae04da7c99e5baeecc51ae5cfd56e304ccf65fb743f9f\",\"urls\":[\"bzzr://6ff0aa2de2d6b1a9801a7f3baa2500326cb94702c5a30ff3adbbcae060b14413\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModuleFactory.sol\":{\"keccak256\":\"0x233b5044aafc5a57bff374d32be347b5f58e0f7b4194084f5ac812963cee108b\",\"urls\":[\"bzzr://6d78d7157910cab1a9544e09476b2b96c23ec2fedc1c8c2ae12c755e0454b99e\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModuleRegistry.sol\":{\"keccak256\":\"0x21d5fbfb49b074ed60509fc7fbe372923bddb28d812af5516f074acbb2389dfa\",\"urls\":[\"bzzr://717fca3ac9e7f785a77d192c96abd9b5ba74010bd47ec046ce2a470f96c6cab0\"]},\"/C/mspace/polymath-core/contracts/interfaces/IOracle.sol\":{\"keccak256\":\"0x23b25f1032ed5c51f37acedbf91f0a9ea2c5ab19621e90aacefaf0ad280f628f\",\"urls\":[\"bzzr://4083f9b06d3a58fad3e0e5e92f68fbe768a92ae2092cd78082b116434e9dba94\"]},\"/C/mspace/polymath-core/contracts/interfaces/IPolymathRegistry.sol\":{\"keccak256\":\"0x6b6fbd0f55c6f2905e308c235a10b121c5779aa8bcfa1f07ccca4d8e19de7bc9\",\"urls\":[\"bzzr://700dab32ed439b1ea8d672742947abc2759093fb0a21144e05de7abc2954ecc1\"]},\"/C/mspace/polymath-core/contracts/interfaces/ISecurityToken.sol\":{\"keccak256\":\"0x3cf35b60d39aa6e45f9fdca61d1f9baeecbf91647dce9df7e61b4f1ae603d684\",\"urls\":[\"bzzr://5b51ef4a80ff96a6c53e29b7e342640faa3268f3679657bd3e28d2bf7f4f2e24\"]},\"/C/mspace/polymath-core/contracts/libraries/DecimalMath.sol\":{\"keccak256\":\"0x1d0b76f8fe8da427cf177f243d94bdb2d61719841a721ac2563ccbcc34d66621\",\"urls\":[\"bzzr://a5d44c088f155a81ecb9742696dbebb436e0aed906ec4978bb8c4c0dc633a87b\"]},\"/C/mspace/polymath-core/contracts/libraries/Util.sol\":{\"keccak256\":\"0x0641ec6587995396e7134d2910eddf3ea0f1504840f0cc1cd83273aa579ac9fc\",\"urls\":[\"bzzr://5cfdd07fa855d44dd5495c4d5e64476ab5b27da1da09cfde532088599b59b86e\"]},\"/C/mspace/polymath-core/contracts/libraries/VersionUtils.sol\":{\"keccak256\":\"0x3406ffb981fc8ef803ff1b4e397bc7a457c3ed60231070cb64137f01054f4042\",\"urls\":[\"bzzr://07e703fd8f5ff93ce888b1a388a985cdccd1c7e8bf3ba2b051c10a0898b71b9d\"]},\"/C/mspace/polymath-core/contracts/modules/ModuleFactory.sol\":{\"keccak256\":\"0x573d8b181146be8b8fc47449920c49f6e2cb16f4b7560e38435dd659628f2a2e\",\"urls\":[\"bzzr://a7df0056a005f9d33b358be4bc0fc98db9afc7286f556961cb1d7531df2722d0\"]},\"/C/mspace/polymath-core/contracts/modules/STO/Capped/CappedSTOFactory.sol\":{\"keccak256\":\"0x48d3d481cced27e17e638902fa1abaca117f15b2739f0eb145f97717cc1fba70\",\"urls\":[\"bzzr://00cc56aee9aa9f8ace0e4eafdac02d6a3ef7983991be524b5733a6df824544f4\"]},\"/C/mspace/polymath-core/contracts/modules/STO/Capped/CappedSTOProxy.sol\":{\"keccak256\":\"0x858166e7e47eb69883b00e51175b322a54da4e43c191b17a411636e6b1156492\",\"urls\":[\"bzzr://33707dfeaa4715ec899e2ffff39cd07bd0a92a2d2cc11dac21c56b8ca549c28e\"]},\"/C/mspace/polymath-core/contracts/modules/STO/Capped/CappedSTOStorage.sol\":{\"keccak256\":\"0x52f6792dfae4cde32c35dbc75dd96327d1e34dea4e7c5d78f4a739e9ea2d288e\",\"urls\":[\"bzzr://3b4987028652e6ee4e332c53b61cff39c6a4a1cedf71a84ee269ce0629ae128f\"]},\"/C/mspace/polymath-core/contracts/modules/UpgradableModuleFactory.sol\":{\"keccak256\":\"0x9704cd486feeb4220126df7ede3eee7850413d7b93d2b7dbb1ade74fbfc2d68e\",\"urls\":[\"bzzr://e83f7efc722e0066e4846eb2f9516f7127b1f5bee3557c90bc5ab8e9b4b40959\"]},\"/C/mspace/polymath-core/contracts/proxy/OwnedUpgradeabilityProxy.sol\":{\"keccak256\":\"0x30f2ca755ec4bb6ab45450aaa110dc49ecd9d2dda1dadfbfaa187ceec56567f8\",\"urls\":[\"bzzr://f350eef96981e9d153a1f01bd77b9c41c9e49c108f37037c613124867fe459f5\"]},\"/C/mspace/polymath-core/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xd9f5cbe44a9d354154b7cf09f00acd21761bfd7f1152658d810cb27c1432897e\",\"urls\":[\"bzzr://63192e45362ec47fa547eb922501636ec393b9f3617fd3ae5fde2ba34953b743\"]},\"/C/mspace/polymath-core/contracts/proxy/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x5b42dc77069af1d968271f56f49771d0b7dfd63fa47ee575c9b6aaa82d0abce3\",\"urls\":[\"bzzr://9bd9a55021d446f61f2932266681181c8df0d3f84100ac35b65c3bd328dff80c\"]},\"/C/mspace/polymath-core/contracts/storage/modules/ModuleStorage.sol\":{\"keccak256\":\"0xd65d5566179b3e69a8cf490312df6eeaab33a985cf04403f82a00e8ce23ab9a7\",\"urls\":[\"bzzr://931c9fd648267e95414b95d7c055a3477131c4815295bd0d37b8af9c2f00ddac\"]},\"/C/mspace/polymath-core/contracts/storage/modules/STO/STOStorage.sol\":{\"keccak256\":\"0x8ec8864dd4ee05bdaf4a89ec242e7c64075acc7d9cc405f3ac46684b9bf66ff7\",\"urls\":[\"bzzr://0d9b45d8cf06cafa05f8a227e823f63778c65c903817b63cea184537bf30bbe4\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125\",\"urls\":[\"bzzr://3bc299fd722679f1313dc1387e2efc0591dcddc3727b6a7ccc98132c6e02f323\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "165:1997:99:-;;;549:1034;8:9:-1;5:2;;;30:1;27;20:12;5:2;549:1034:99;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;549:1034:99;;;;;;;;;;;;;;;;;1445:465:140;;;;;;;;;;;;;;;;;;-1:-1:-1;515:19:169;;-1:-1:-1;;;;;;515:19:169;524:10;515:19;;;;549:40;;:1034:99;;;;;;;;1445:465:140;;549:1034:99;;;;;;;;;;;;;;-1:-1:-1;;;;;582:6:169;;;;;-1:-1:-1;549:40:169;;-1:-1:-1;;549:40:169;1382:9:92;:22;;;;1415:16;:55;;-1:-1:-1;;;;;;1415:55:92;-1:-1:-1;;;;;1415:55:92;;;;;;-1:-1:-1;1481:28:92;;-1:-1:-1;;1481:28:92;;;;;;;;;;;1724::140;;1716:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1798:13;;;1783:29;;;;:14;:29;;;;;;;;:43;;:60;;-1:-1:-1;;;;;;1783:60:140;-1:-1:-1;;;;;1783:60:140;;;;;1869:13;;1854:29;;;;;:48;;;;;;;;:::i;:::-;-1:-1:-1;;832:18:99;:4;:18;-1:-1:-1;;861:20:99;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;861:5:99;;-1:-1:-1;861:20:99;:::i;:::-;;892:329;;;;;;;;;;;;;;;;;;;;;:11;;:329;;;;;;:::i;:::-;-1:-1:-1;1232:9:99;27:10:-1;;39:1;23:18;;;45:23;;;1232:17:99;;;;;;;;;;;;;;1247:1;1232:17;;;;;;;;;;;;;;1260:8;27:10:-1;;23:18;;;45:23;;-1:-1;1260:23:99;;;;;;;;;27:10:-1;;23:18;;;45:23;;1294:20:99;;;;;27:10:-1;;23:18;;;45:23;;1325:21:99;;;;;27:10:-1;;23:18;;;45:23;;;1357:20:99;;;;;;;1429:47;;-1:-1:-1;;;1429:17:99;;;;;:47;;:::i;:::-;1388:38;;;;;;:24;:38;;;;;;;;;;;;;;;;;:88;;-1:-1:-1;;1388:88:99;;;;;;;;;;;;1528:47;1552:1;-1:-1:-1;;1528:17:99;1388:38;1528:17;;;;;:47;;:::i;:::-;1487:38;;;;;;:24;:38;;;;;;;;;;;;;;:88;;;;;;;-1:-1:-1;;1487:88:99;;;;;;;;;-1:-1:-1;165:1997:99;;-1:-1:-1;;;165:1997:99;1248:175:41;1401:14;;;;1378;;;1396:1;1378:19;1353:14;;1371:2;1353:20;1352:46;;;;:63;;1248:175::o;165:1997:99:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;165:1997:99;;;-1:-1:-1;165:1997:99;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "165:1997:99:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;165:1997:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1816:341;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1816:341:99;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1816:341:99;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1816:341:99;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1816:341:99;;-1:-1:-1;1816:341:99;-1:-1:-1;1816:341:99;:::i;:::-;;;;-1:-1:-1;;;;;1816:341:99;;;;;;;;;;;;;;689:19:92;;;:::i;:::-;;;;;;;;;;;;;;;;4721:793:140;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4721:793:140;-1:-1:-1;;;;;4721:793:140;;:::i;:::-;;2165:157:92;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2165:157:92;;:::i;3844:160::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3844:160:92;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3844:160:92;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3844:160:92;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3844:160:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3844:160:92;;-1:-1:-1;3844:160:92;;-1:-1:-1;;;;;3844:160:92:i;6005:262::-;;;:::i;2945:153::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2945:153:92;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2945:153:92;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2945:153:92;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2945:153:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2945:153:92;;-1:-1:-1;2945:153:92;;-1:-1:-1;;;;;2945:153:92:i;2239:551:140:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2239:551:140;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2239:551:140;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2239:551:140;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2239:551:140;;;;-1:-1:-1;;;;;2239:551:140;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2239:551:140;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2239:551:140;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2239:551:140;;-1:-1:-1;2239:551:140;-1:-1:-1;2239:551:140;:::i;826:24:92:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;715:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;715:19:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6040:119:140;;;:::i;1086:28::-;;;:::i;701:56::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;701:56:140;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;701:56:140;-1:-1:-1;;;;;701:56:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;701:56:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;701:56:140;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;701:56:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1423:137:169;;;:::i;741:25:92:-;;;:::i;611:41::-;;;:::i;857:24::-;;;:::i;5516:158::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5516:158:92;;;;;;;;;;;;;;;;;3584:138;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3584:138:92;;:::i;659:77:169:-;;;:::i;979:90::-;;;:::i;1764:93:92:-;;;:::i;863:64:140:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;863:64:140;;;;;;;;;;:::i;996:57::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;996:57:140;-1:-1:-1;;;;;996:57:140;;:::i;1586:93:92:-;;;:::i;2524:277::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2524:277:92;;;;;;;;;:::i;3182:809:140:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3182:809:140;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3182:809:140;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3182:809:140;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3182:809:140;;;;-1:-1:-1;;;;;3182:809:140;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3182:809:140;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3182:809:140;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3182:809:140;;-1:-1:-1;3182:809:140;-1:-1:-1;3182:809:140;:::i;3260:183:92:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3260:183:92;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3260:183:92;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3260:183:92;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3260:183:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3260:183:92;;-1:-1:-1;3260:183:92;;-1:-1:-1;;;;;3260:183:92:i;1731:107:169:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1731:107:169;-1:-1:-1;;;;;1731:107:169;;:::i;5772:158:92:-;;;:::i;4209:1209::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4209:1209:92;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4209:1209:92;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4209:1209:92;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4209:1209:92;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4209:1209:92;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4209:1209:92;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;4209:1209:92;;-1:-1:-1;4209:1209:92;-1:-1:-1;4209:1209:92;:::i;1816:341:99:-;1953:13;;1871:7;1938:29;;;:14;:29;;;;;;;;1989:16;;:40;;-1:-1:-1;;;;;1989:40:99;;;;;;;;;;;;;-1:-1:-1;;;;;1989:40:99;;;;;;1871:7;;1938:29;;1977:10;;-1:-1:-1;;;;;1989:16:99;;;;:27;;:40;;;;;;;;;;:16;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;1989:40:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1989:40:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1989:40:99;2046:13;;2031:29;;;;:14;1989:40;2031:29;;;;;;:43;;;1919:156;;-1:-1:-1;;;;;2031:43:99;;;;1919:156;;;:::i;:::-;-1:-1:-1;;;;;1919:156:99;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1919:156:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1919:156:99;1891:185;;2087:35;2105:9;2116:5;;2087:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2087:17:99;;-1:-1:-1;;;2087:35:99:i;:::-;2140:9;-1:-1:-1;1816:341:99;;;;;:::o;689:19:92:-;;;;:::o;4721:793:140:-;-1:-1:-1;;;;;4842:30:140;;;;;;;:21;:30;;;;;;;4876:10;4842:44;4834:73;;;;;-1:-1:-1;;;;;4834:73:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;5052:10;5023:18;5044:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;5044:28:140;;;;;;;;;;5109:13;;5075:1;5044:32;;;;5095:27;;;5087:57;;;;;-1:-1:-1;;;;;5087:57:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;5224:26;;;;:14;:26;;;;;;;5260:40;;;;;5155:186;;-1:-1:-1;;;;;5155:186:140;;-1:-1:-1;;;;;5260:40:140;;;5155:186;;;;;;;;;;;;;;;5302:38;-1:-1:-1;;5155:186:140;;;;5260:40;5155:186;;;;;;;;;;;;;;;:68;;;;;;5224:26;5260:40;;5302:38;;;;5155:186;;;;;;;;;5224:26;;5155:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5155:186:140;;;;;;;;-1:-1:-1;;5155:186:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5155:186:140;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5360:10:140;5352:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;5352:28:140;;;;;;;;;;:41;;;5409:97;5383:10;;-1:-1:-1;5360:10:140;;-1:-1:-1;5352:28:140;5409:97;;5352:19;5409:97;4721:793;;:::o;2165:157:92:-;863:9:169;:7;:9::i;:::-;855:18;;;;;;2259:9:92;;2243:38;;;;;;;;;;;;;;;;;;;;;;;;2292:9;:22;2165:157::o;3844:160::-;863:9:169;:7;:9::i;:::-;855:18;;;;;;3947:1:92;3928:9;:16;:20;3920:45;;;;;-1:-1:-1;;;;;3920:45:92;;;;;;;;;;;;-1:-1:-1;;;;;3920:45:92;;;;;;;;;;;;;;;3976:20;;;;:8;;:20;;;;;:::i;:::-;;3844:160;:::o;6005:262::-;6072:12;;6048:7;;6072:12;;6068:47;;;-1:-1:-1;6106:9:92;;6099:16;;6068:47;6153:16;;6181:11;;;;;;;;;;;;;;;;;;;6153:40;;-1:-1:-1;;;;;6153:40:92;;;;;;;;;;;;;;;;6126:16;;-1:-1:-1;;;;;6153:16:92;;:27;;6181:11;6153:40;;;;;;;;;6181:11;6153:40;;6181:11;6126:16;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6153:40:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6153:40:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6153:40:92;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6153:40:92;6145:60;;;-1:-1:-1;;;;;6145:60:92;;;;-1:-1:-1;;;;;6145:58:92;;;;;;:60;;;;;6153:40;;6145:60;;;;;;;;;:58;:60;;;5:2:-1;;;;30:1;27;20:12;5:2;6145:60:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6145:60:92;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6145:60:92;6239:9;;6145:60;;-1:-1:-1;6223:36:92;;6145:60;6223:15;:36::i;:::-;6216:43;;;6005:262;;:::o;2945:153::-;863:9:169;:7;:9::i;:::-;855:18;;;;;;3047:1:92;3030:6;3024:20;:24;3016:49;;;;;-1:-1:-1;;;;;3016:49:92;;;;;;;;;;;;-1:-1:-1;;;;;3016:49:92;;;;;;;;;;;;;;;3076:14;;;;:5;;:14;;;;;:::i;2239:551:140:-;863:9:169;:7;:9::i;:::-;855:18;;;;;;2450:14:140;:29;2465:13;;2450:29;;;;;;;;;;;:37;;2433:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2433:55:140;;;2423:66;;;;;;2409:8;;2392:26;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;2392::140;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2392:26:140;;;2382:37;;;;;;:107;;2374:132;;;;;-1:-1:-1;;;;;2374:132:140;;;;;;;;;;;;-1:-1:-1;;;;;2374:132:140;;;;;;;;;;;;;;;2558:13;;2543:29;;;;:14;:29;;;;;:43;;;-1:-1:-1;;;;;2525:61:140;;;2543:43;;2525:61;;2517:86;;;;;-1:-1:-1;;;;;2517:86:140;;;;;;;;;;;;-1:-1:-1;;;;;2517:86:140;;;;;;;;;;;;;;;-1:-1:-1;;;;;2622:28:140;;2614:56;;;;;-1:-1:-1;;;;;2614:56:140;;;;;;;;;;;;-1:-1:-1;;;;;2614:56:140;;;;;;;;;;;;;;;2681:13;:15;;;;;;;;2707:75;;;;;;;;;;;;;;;;;;;;;;;;2681:15;2743:8;;;;;;2707:75;;2743:8;;;;2707:75;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;2707:75:140;;;;137:4:-1;2707:75:140;;;;;;;;;;;;;;;;;2753:14;;-1:-1:-1;2707:75:140;-1:-1:-1;2769:12:140;;;;;;2707:75;;2769:12;;;;2707:75;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;2707:20:140;;-1:-1:-1;;;2707:75:140:i;:::-;2239:551;;;;;:::o;826:24:92:-;;;;;;:::o;715:19::-;;;;;;;;;;;;;;;-1:-1:-1;;715:19:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6040:119:140:-;6129:13;;6114:29;;;;:14;:29;;;;;;;;;6107:44;;;;;;-1:-1:-1;;6107:44:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6081:13;;6107:44;;;6114:29;6107:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6040:119;:::o;1086:28::-;;;;:::o;701:56::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;701:56:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;701:56:140;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;701:56:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;701:56:140;;;;;;-1:-1:-1;701:56:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1423:137:169:-;863:9;:7;:9::i;:::-;855:18;;;;;;1521:1;1505:6;;1484:40;;-1:-1:-1;;;;;1505:6:169;;;;1484:40;;1521:1;;1484:40;1551:1;1534:19;;-1:-1:-1;;;;;;1534:19:169;;;1423:137::o;741:25:92:-;;;;;;;;;;;;;;;-1:-1:-1;;741:25:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;611:41;;;-1:-1:-1;;;;;611:41:92;;:::o;857:24::-;;;;:::o;5516:158::-;5627:38;;;-1:-1:-1;;;;;5627:38:92;;:24;:38;;;;;;;;;;;;;;;5573:14;;5607:59;;5627:38;;5607:19;:59::i;:::-;5600:66;;5516:158;:::o;3584:138::-;863:9:169;:7;:9::i;:::-;855:18;;;;;;3655:19:92;3647:44;;;;;-1:-1:-1;;;;;3647:44:92;;;;;;;;;;;;-1:-1:-1;;;;;3647:44:92;;;;;;;;;;;;;;;3702:4;:12;3584:138::o;659:77:169:-;697:7;723:6;-1:-1:-1;;;;;723:6:169;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:169;1042:10;:20;;979:90::o;1764:93:92:-;1805:16;1841:8;1834:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1764:93;:::o;863:64:140:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;996:57::-;;;;;;;;;;;;-1:-1:-1;;;;;996:57:140;;:::o;1586:93:92:-;1628:14;1662:9;1655:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1586:93;:::o;2524:277::-;863:9:169;:7;:9::i;:::-;855:18;;;;;;2640:9:92;;2624:38;;;;;;;;;;;;;;;;;;;;;;;;2693:12;;2678:43;;;2693:12;;;;2678:43;;;;;;;;;;;;;;;;;;;;;;;2732:9;:22;;;;2765:12;:28;;-1:-1:-1;;2765:28:92;;;;;;;;;;2524:277::o;3182:809:140:-;863:9:169;:7;:9::i;:::-;855:18;;;;;;3358:13:140;;3346:8;:25;;3338:53;;;;;-1:-1:-1;;;;;3338:53:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;3506:12;;3502:272;;3609:14;:28;3635:1;3624:8;:12;3609:28;;;;;;;;;;;:36;;3592:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3592:54:140;;;3582:65;;;;;;3568:8;;3551:26;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;3551::140;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3551:26:140;;;3541:37;;;;;;:106;;3533:131;;;;;-1:-1:-1;;;;;3533:131:140;;;;;;;;;;;;-1:-1:-1;;;;;3533:131:140;;;;;;;;;;;;;;;-1:-1:-1;;3718:12:140;;3703:28;;;;:14;:28;;;;;3729:1;3703:42;;-1:-1:-1;;;;;3685:60:140;;;3703:42;;3685:60;;3677:85;;;;;-1:-1:-1;;;;;3677:85:140;;;;;;;;;;;;-1:-1:-1;;;;;3677:85:140;;;;;;;;;;;;;;;-1:-1:-1;;;;;3792:28:140;;3784:56;;;;;-1:-1:-1;;;;;3784:56:140;;;;;;;;;;;;-1:-1:-1;;;;;3784:56:140;;;;;;;;;;;;;;;3881:1;3859:23;;3851:51;;;;;-1:-1:-1;;;;;3851:51:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;3913:70;3934:8;3944;;3913:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;3913:70:140;;;;137:4:-1;3913:70:140;;;;;;;;;;;;;;;;;3954:14;;-1:-1:-1;3913:70:140;-1:-1:-1;3970:12:140;;;;;;3913:70;;3970:12;;;;3913:70;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3913:20:140;;-1:-1:-1;;;3913:70:140:i;:::-;3182:809;;;;;;:::o;3260:183:92:-;863:9:169;:7;:9::i;:::-;855:18;;;;;;3380:1:92;3357:12;3351:26;:30;3343:55;;;;;-1:-1:-1;;;;;3343:55:92;;;;;;;;;;;;-1:-1:-1;;;;;3343:55:92;;;;;;;;;;;;;;;3409:26;;;;:11;;:26;;;;;:::i;1731:107:169:-;863:9;:7;:9::i;:::-;855:18;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;5772:158:92:-;5883:38;;;-1:-1:-1;;;;;5883:38:92;;:24;:38;;;;;;;;;;;;;;;5829:14;;5863:59;;5883:38;;5863:19;:59::i;4209:1209::-;863:9:169;:7;:9::i;:::-;855:18;;;;;;4403:30:92;;;;;;-1:-1:-1;;;;;4403:30:92;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4403:30:92;;;4393:41;;;;;;4377:10;;4360:28;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;4360:28:92;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4360:28:92;;;4350:39;;;;;;:84;:204;;;;4523:30;;;;;;-1:-1:-1;;;;;4523:30:92;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4523:30:92;;;4513:41;;;;;;4483:10;;4466:28;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;4466:28:92;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4466:28:92;;;4438:71;;;;;;:116;4350:204;4328:272;;;;;-1:-1:-1;;;;;4328:272:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;4641:1;4619:23;;4611:51;;;;;-1:-1:-1;;;;;4611:51:92;;;;;;;;;;;;-1:-1:-1;;;;;4611:51:92;;;;;;;;;;;;;;;4724:1;4677:49;;:24;4702:10;;4677:36;;;;;30:3:-1;22:6;14;1:33;45:16;;;;4677:36:92;;;-1:-1:-1;;4677:36:92;;;;;;;;;;;;;;:49;;;;;-1:-1:-1;4673:527:92;;-1:-1:-1;4673:527:92;4743:30;4776:57;4796:24;4821:10;;4796:36;;;;;30:3:-1;22:6;14;1:33;45:16;;;;4796:36:92;;;-1:-1:-1;;4796:36:92;;;;;;;;;;;;;;;-1:-1:-1;4776:19:92;;-1:-1:-1;4776:57:92:i;:::-;4743:90;;4905:30;;;;;;-1:-1:-1;;;;;4905:30:92;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4905:30:92;;;4895:41;;;;;;4879:10;;4862:28;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;4862:28:92;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4862:28:92;;;4852:39;;;;;;:84;4848:341;;;4965:58;4994:11;;4965:58;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5007:15:92;;-1:-1:-1;4965:28:92;;-1:-1:-1;;4965:58:92:i;:::-;4957:86;;;;;-1:-1:-1;;;;;4957:86:92;;;;;;;;;;;;-1:-1:-1;;;;;4957:86:92;;;;;;;;;;;;;;;4848:341;;;5092:61;5124:11;;5092:61;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5137:15:92;;-1:-1:-1;5092:31:92;;-1:-1:-1;;5092:61:92:i;:::-;5084:89;;;;;-1:-1:-1;;;;;5084:89:92;;;;;;;;;;;;-1:-1:-1;;;;;5084:89:92;;;;;;;;;;;;;;;4673:527;;5249:65;5267:11;;5279:1;5267:14;;;;;;;;;;;;;;;5283:11;;5295:1;5283:14;;;;;;;;;;;;;;;5299:11;;5311:1;5299:14;;;;;;;;;;;;;;;5249:17;:65::i;:::-;5210:24;5235:10;;5210:36;;;;;30:3:-1;22:6;14;1:33;45:16;;;;5210:36:92;;;-1:-1:-1;;5210:36:92;;;;;;;;;;;:104;;;;;;;-1:-1:-1;;5210:104:92;;;;;;;;;;-1:-1:-1;5330:80:92;;-1:-1:-1;5351:10:92;;5363:11;;5210:36;5363:14;;;;;;;;;;;;;5379:11;;5391:1;5379:14;;;;;;;;;;;;;;;5395:11;;5407:1;5395:14;;;;;;;;;;;;;;;5330:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;5330:80:92;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;5330:80:92;;;;-1:-1:-1;5330:80:92;;-1:-1:-1;;;;;;;5330:80:92;4209:1209;;;;:::o;5712:240:140:-;5796:39;5820:7;5829:5;5796:23;:39::i;:::-;-1:-1:-1;;;;;;5846:30:140;;;;;:21;:30;;;;;;;;:43;;-1:-1:-1;;;;;;5846:43:140;5879:10;5846:43;;;;;;5931:13;;5900:19;;;:7;:19;;;;;:28;;;;;;;;;:44;5712:240::o;761:138:36:-;818:9;890:1;844:43;857:22;870:1;183:26;857:12;:22::i;:::-;885:1;881;:5;844:12;:43::i;:::-;:47;;;;;;;761:138;-1:-1:-1;;;761:138:36:o;3999:565:140:-;4142:24;;;;:14;:24;;;;;;;;:43;;;;;;;;:::i;:::-;-1:-1:-1;4196:24:140;;;;:14;:24;;;;;;;;:38;;;:55;;-1:-1:-1;;;;;;4196:55:140;-1:-1:-1;;;;;4196:55:140;;;;;4262:51;;;;:36;;;;;:51;;;;:::i;:::-;-1:-1:-1;4373:16:140;;:45;;;-1:-1:-1;;;;;4373:45:140;;;;;;;;;;;;;;;;;;;;;4324:30;;-1:-1:-1;;;;;4373:16:140;;:27;;:45;;;;;;;;;;;:16;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;4373:45:140;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4373:45:140;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4373:45:140;4430:44;;;-1:-1:-1;;;;;4430:44:140;;4468:4;4430:44;;;;;;4373:45;;-1:-1:-1;;;;;;4430:29:140;;;;;:44;;;;;-1:-1:-1;;4430:44:140;;;;;;;;-1:-1:-1;4430:29:140;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;4430:44:140;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4430:44:140;;;;4490:66;4507:8;4517;4527:14;4543:12;4490:66;;;;;;;;;;;;-1:-1:-1;;;;;4490:66:140;-1:-1:-1;;;;;4490:66:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4490:66:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4490:66:140;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4490:66:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3999:565;;;;;:::o;1552:341:41:-;1672:14;;;1684:1;1672:14;;;;;;;;;1613;;;;1672;;;;1613;;105:10:-1;1672:14:41;88:34:-1;136:17;;-1:-1;1672:14:41;1640:46;;1741:2;1723:14;:20;;;;1697:14;1712:1;1697:17;;;;;;;;;;;;;:47;;;;;;;;;;;1799:1;1781:14;:19;;;;1755:14;1770:1;1755:17;;;;;;;;;;;;;:46;;;;;;;;;;;1838:14;1812;1827:1;1812:17;;;;;;;;:41;;;;:17;;;;;;;;;;;:41;1871:14;-1:-1:-1;1552:341:41;;;:::o;1982:183:169:-;-1:-1:-1;;;;;2055:22:169;;2047:31;;;;;;2114:6;;;2093:38;;-1:-1:-1;;;;;2093:38:169;;;;2114:6;;;2093:38;;;2141:6;:17;;-1:-1:-1;;;;;;2141:17:169;-1:-1:-1;;;;;2141:17:169;;;;;;;;;;1982:183::o;143:445:41:-;236:4;261:8;:15;280:1;261:20;253:29;;;;;;301:4;:11;316:1;301:16;293:25;;;;;;329:7;351:208;367:8;:15;363:1;:19;;;351:208;;;423:4;428:1;423:7;;;;;;;;;;;;;;;;408:22;;:8;417:1;408:11;;;;;;;;;;;;;;;;:22;;;404:36;;;432:8;;404:36;473:4;478:1;473:7;;;;;;;;;;;;;;;;459:21;;:8;468:1;459:11;;;;;;;;;;;;;;;;:21;;;455:38;;;489:4;482:11;;;;;455:38;526:4;531:1;526:7;;;;;;;;;;;;;;;;512:21;;:8;521:1;512:11;;;;;;;;;;;;;;;;:21;;;508:39;;;542:5;535:12;;;;;508:39;384:3;;351:208;;;-1:-1:-1;576:4:41;;143:445;-1:-1:-1;;;143:445:41:o;596:448::-;692:4;717:8;:15;736:1;717:20;709:29;;;;;;757:4;:11;772:1;757:16;749:25;;;;;;785:7;807:208;823:8;:15;819:1;:19;;;807:208;;;879:4;884:1;879:7;;;;;;;;;;;;;;;;864:22;;:8;873:1;864:11;;;;;;;;;;;;;;;;:22;;;860:36;;;888:8;;860:36;929:4;934:1;929:7;;;;;;;;;;;;;;;;915:21;;:8;924:1;915:11;;;;;;;;;;;;;;;;:21;;;911:38;;;945:4;938:11;;;;;911:38;982:4;987:1;982:7;;;;;;;;;;;;;;;;968:21;;:8;977:1;968:11;;;;;;;;;;;;;;;;:21;;;964:39;;;998:5;991:12;;;;;964:39;840:3;;807:208;;1248:175;1401:14;;;;1378;;;1396:1;1378:19;1353:14;;1371:2;1353:20;1352:46;;;;:63;;1248:175::o;6914:692:92:-;6998:21;7022:10;:8;:10::i;:::-;6998:34;;7043:19;7073:7;-1:-1:-1;;;;;7065:32:92;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7065:34:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7065:34:92;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7065:34:92;;-1:-1:-1;;;;;;;7114:25:92;;;7110:316;;-1:-1:-1;;;;;;7164:34:92;;:18;7176:5;7164:11;:18::i;:::-;-1:-1:-1;;;;;;7164:34:92;;7156:73;;;;;-1:-1:-1;;;;;7156:73:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;7315:12;7333:7;-1:-1:-1;;;;;7333:12:92;7346:5;7333:19;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7333:19:92;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7314:38:92;;;7375:7;7367:47;;;;;-1:-1:-1;;;;;7367:47:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;7110:316;;7540:4;;7573:9;;7505:93;;;-1:-1:-1;;;;;7505:93:92;;;;7561:10;7505:93;;;;;;;;;;;;;;;;;;7554:4;;7540;7505:93;;;;;;;;;;6914:692;;;;:::o;231:421:168:-;289:7;529:6;525:45;;-1:-1:-1;558:1:168;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;1439:145;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;6332:384:92;6369:7;6389:21;6413:17;:15;:17::i;:::-;6461:16;;:40;;;-1:-1:-1;;;;;6461:40:92;;;;;;;;;;;;;;-1:-1:-1;;;;;6461:40:92;;;;;;6389:41;;-1:-1:-1;6441:17:92;;-1:-1:-1;;;;;6461:16:92;;;;:27;;:40;;;;;;;;;;;;;:16;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;6461:40:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6461:40:92;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6461:40:92;;-1:-1:-1;6516:17:92;;6512:166;;6565:9;-1:-1:-1;;;;;6558:30:92;;6589:10;6601:7;:5;:7::i;:::-;6610:13;6558:66;;;;;;;;;;;;;-1:-1:-1;;;;;6558:66:92;-1:-1:-1;;;;;6558:66:92;;;;;;-1:-1:-1;;;;;6558:66:92;-1:-1:-1;;;;;6558:66:92;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6558:66:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6558:66:92;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6558:66:92;6550:116;;;;-1:-1:-1;;;;;6550:116:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6695:13:92;-1:-1:-1;6332:384:92;:::o;2496:266:40:-;2554:10;2577:8;2603:1;2588:5;:12;:16;:35;;2622:1;2588:35;;;2607:5;:12;2588:35;2577:46;-1:-1:-1;2639:9:40;2634:100;2658:3;2654:1;:7;2634:100;;;2716:1;2720;2716:5;2695;2701:1;2695:8;;;;;;;;;;;;-1:-1:-1;;;;;;2695:8:40;;;;;;;:15;2688:34;;2681:41;;;;;2663:3;;2634:100;;;-1:-1:-1;;2496:266:40;;;:::o;165:1997:99:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;165:1997:99;;;-1:-1:-1;165:1997:99;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.8;\r\n\r\nimport \"../../UpgradableModuleFactory.sol\";\r\nimport \"./CappedSTOProxy.sol\";\r\n\r\n/**\r\n * @title Factory for deploying CappedSTO module\r\n */\r\ncontract CappedSTOFactory is UpgradableModuleFactory {\r\n\r\n    /**\r\n     * @notice Constructor\r\n     * @param _setupCost Setup cost of the module\r\n      * @param _logicContract Contract address that contains the logic related to `description`\r\n     * @param _polymathRegistry Address of the Polymath registry\r\n     * @param _isCostInPoly true = cost in Poly, false = USD\r\n     */\r\n    constructor (\r\n        uint256 _setupCost,\r\n        address _logicContract,\r\n        address _polymathRegistry,\r\n        bool _isCostInPoly\r\n    )\r\n        public\r\n        UpgradableModuleFactory(\"3.0.0\", _setupCost, _logicContract, _polymathRegistry, _isCostInPoly)\r\n    {\r\n        name = \"CappedSTO\";\r\n        title = \"Capped STO\";\r\n        description = \"This smart contract creates a maximum number of tokens (i.e. hard cap) which the total aggregate of tokens acquired by all investors cannot exceed. Security tokens are sent to the investor upon reception of the funds (ETH or POLY), and any security tokens left upon termination of the offering will not be minted.\";\r\n        typesData.push(3);\r\n        tagsData.push(\"Capped\");\r\n        tagsData.push(\"ETH\");\r\n        tagsData.push(\"POLY\");\r\n        tagsData.push(\"STO\");\r\n        compatibleSTVersionRange[\"lowerBound\"] = VersionUtils.pack(uint8(3), uint8(0), uint8(0));\r\n        compatibleSTVersionRange[\"upperBound\"] = VersionUtils.pack(uint8(3), uint8(0), uint8(0));\r\n    }\r\n\r\n    /**\r\n     * @notice Used to launch the Module with the help of factory\r\n     * @param _data Data used for the intialization of the module factory variables\r\n     * @return address Contract address of the Module\r\n     */\r\n    function deploy(bytes calldata _data) external returns(address) {\r\n        address cappedSTO = address(new CappedSTOProxy(logicContracts[latestUpgrade].version, msg.sender, polymathRegistry.getAddress(\"PolyToken\"), logicContracts[latestUpgrade].logicContract));\r\n        _initializeModule(cappedSTO, _data);\r\n        return cappedSTO;\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:/mspace/polymath-core/contracts/modules/STO/Capped/CappedSTOFactory.sol",
  "ast": {
    "absolutePath": "/C/mspace/polymath-core/contracts/modules/STO/Capped/CappedSTOFactory.sol",
    "exportedSymbols": {
      "CappedSTOFactory": [
        33403
      ]
    },
    "id": 33404,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33266,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:99"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/modules/UpgradableModuleFactory.sol",
        "file": "../../UpgradableModuleFactory.sol",
        "id": 33267,
        "nodeType": "ImportDirective",
        "scope": 33404,
        "sourceUnit": 49080,
        "src": "26:43:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/modules/STO/Capped/CappedSTOProxy.sol",
        "file": "./CappedSTOProxy.sol",
        "id": 33268,
        "nodeType": "ImportDirective",
        "scope": 33404,
        "sourceUnit": 33455,
        "src": "71:30:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33269,
              "name": "UpgradableModuleFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 49079,
              "src": "194:23:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradableModuleFactory_$49079",
                "typeString": "contract UpgradableModuleFactory"
              }
            },
            "id": 33270,
            "nodeType": "InheritanceSpecifier",
            "src": "194:23:99"
          }
        ],
        "contractDependencies": [
          14107,
          31574,
          33454,
          49079,
          58195
        ],
        "contractKind": "contract",
        "documentation": "@title Factory for deploying CappedSTO module\r",
        "fullyImplemented": true,
        "id": 33403,
        "linearizedBaseContracts": [
          33403,
          49079,
          31574,
          58195,
          14107
        ],
        "name": "CappedSTOFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 33364,
              "nodeType": "Block",
              "src": "821:762:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33288,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31081,
                      "src": "832:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "43617070656453544f",
                      "id": 33289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "839:11:99",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d3dba09dff35150cdb7d1c6862d285600c72a3858c9e94fd82de42e61b9824ab",
                        "typeString": "literal_string \"CappedSTO\""
                      },
                      "value": "CappedSTO"
                    },
                    "src": "832:18:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 33291,
                  "nodeType": "ExpressionStatement",
                  "src": "832:18:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33292,
                      "name": "title",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31083,
                      "src": "861:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "4361707065642053544f",
                      "id": 33293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "869:12:99",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_1555df6d0021d8c67ee7169df47ccaf6f86c37dfa3743034b95ea61e6ed7b9f6",
                        "typeString": "literal_string \"Capped STO\""
                      },
                      "value": "Capped STO"
                    },
                    "src": "861:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33295,
                  "nodeType": "ExpressionStatement",
                  "src": "861:20:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33296,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31085,
                      "src": "892:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "5468697320736d61727420636f6e747261637420637265617465732061206d6178696d756d206e756d626572206f6620746f6b656e732028692e652e206861726420636170292077686963682074686520746f74616c20616767726567617465206f6620746f6b656e7320616371756972656420627920616c6c20696e766573746f72732063616e6e6f74206578636565642e20536563757269747920746f6b656e73206172652073656e7420746f2074686520696e766573746f722075706f6e20726563657074696f6e206f66207468652066756e64732028455448206f7220504f4c59292c20616e6420616e7920736563757269747920746f6b656e73206c6566742075706f6e207465726d696e6174696f6e206f6620746865206f66666572696e672077696c6c206e6f74206265206d696e7465642e",
                      "id": 33297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "906:315:99",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_24e255bc910673e37c79c5c62b7f94749e7474e6c4fd727c35c1b94bb08844fc",
                        "typeString": "literal_string \"This smart contract creates a maximum number of tokens (i.e. hard cap) which the total aggregate of tokens acquired by all investors cannot exceed. Security tokens are sent to the investor upon reception of the funds (ETH or POLY), and any security tokens left upon termination of the offering will not be minted.\""
                      },
                      "value": "This smart contract creates a maximum number of tokens (i.e. hard cap) which the total aggregate of tokens acquired by all investors cannot exceed. Security tokens are sent to the investor upon reception of the funds (ETH or POLY), and any security tokens left upon termination of the offering will not be minted."
                    },
                    "src": "892:329:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33299,
                  "nodeType": "ExpressionStatement",
                  "src": "892:329:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "33",
                        "id": 33303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1247:1:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33300,
                        "name": "typesData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31088,
                        "src": "1232:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                          "typeString": "uint8[] storage ref"
                        }
                      },
                      "id": 33302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1232:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint8_$returns$_t_uint256_$",
                        "typeString": "function (uint8) returns (uint256)"
                      }
                    },
                    "id": 33304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1232:17:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33305,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:17:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436170706564",
                        "id": 33309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1274:8:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea0ae8c04715067d85a72d739eb0eb29a1675ab457afd1b44648d1d56801ff8d",
                          "typeString": "literal_string \"Capped\""
                        },
                        "value": "Capped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ea0ae8c04715067d85a72d739eb0eb29a1675ab457afd1b44648d1d56801ff8d",
                          "typeString": "literal_string \"Capped\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33306,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31091,
                        "src": "1260:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1260:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1260:23:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33311,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:23:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455448",
                        "id": 33315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1308:5:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                          "typeString": "literal_string \"ETH\""
                        },
                        "value": "ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                          "typeString": "literal_string \"ETH\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33312,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31091,
                        "src": "1294:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1294:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33317,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:20:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "504f4c59",
                        "id": 33321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1339:6:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42e9b9ff2964f66d264e07a2cd4c5234a8c8c5adbfc54101bd50b0744fcd261f",
                          "typeString": "literal_string \"POLY\""
                        },
                        "value": "POLY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_42e9b9ff2964f66d264e07a2cd4c5234a8c8c5adbfc54101bd50b0744fcd261f",
                          "typeString": "literal_string \"POLY\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33318,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31091,
                        "src": "1325:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1325:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1325:21:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33323,
                  "nodeType": "ExpressionStatement",
                  "src": "1325:21:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "53544f",
                        "id": 33327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1371:5:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79030946dd457157e4aa08fcb4907c422402e75f0f0ecb4f2089cb35021ff964",
                          "typeString": "literal_string \"STO\""
                        },
                        "value": "STO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_79030946dd457157e4aa08fcb4907c422402e75f0f0ecb4f2089cb35021ff964",
                          "typeString": "literal_string \"STO\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33324,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31091,
                        "src": "1357:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1357:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33329,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:20:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 33330,
                        "name": "compatibleSTVersionRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31102,
                        "src": "1388:24:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint24_$",
                          "typeString": "mapping(string memory => uint24)"
                        }
                      },
                      "id": 33332,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "6c6f776572426f756e64",
                        "id": 33331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1413:12:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8ed9a2cdf8359d00aca8e7b53163f5ce2b2fa898d757f02f3a11e2367b3ccb2",
                          "typeString": "literal_string \"lowerBound\""
                        },
                        "value": "lowerBound"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1388:38:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 33336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1453:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 33335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1447:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1447:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1463:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1457:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1457:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1473:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1467:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1467:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 33333,
                          "name": "VersionUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20382,
                          "src": "1429:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VersionUtils_$20382_$",
                            "typeString": "type(library VersionUtils)"
                          }
                        },
                        "id": 33334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20249,
                        "src": "1429:17:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint24_$",
                          "typeString": "function (uint8,uint8,uint8) pure returns (uint24)"
                        }
                      },
                      "id": 33344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1429:47:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "1388:88:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 33346,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:88:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 33347,
                        "name": "compatibleSTVersionRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31102,
                        "src": "1487:24:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint24_$",
                          "typeString": "mapping(string memory => uint24)"
                        }
                      },
                      "id": 33349,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "7570706572426f756e64",
                        "id": 33348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1512:12:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa7a3156b8c73047ca2b3d4e510fcb4d4c900378a3b9e7a046fc5f75c0501ecc",
                          "typeString": "literal_string \"upperBound\""
                        },
                        "value": "upperBound"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1487:38:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 33353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1552:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 33352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1546:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1546:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1562:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1556:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1556:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1572:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1566:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1566:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 33350,
                          "name": "VersionUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20382,
                          "src": "1528:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VersionUtils_$20382_$",
                            "typeString": "type(library VersionUtils)"
                          }
                        },
                        "id": 33351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20249,
                        "src": "1528:17:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint24_$",
                          "typeString": "function (uint8,uint8,uint8) pure returns (uint24)"
                        }
                      },
                      "id": 33361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1528:47:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "1487:88:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 33363,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:88:99"
                }
              ]
            },
            "documentation": "@notice Constructor\r\n@param _setupCost Setup cost of the module\r\n@param _logicContract Contract address that contains the logic related to `description`\r\n@param _polymathRegistry Address of the Polymath registry\r\n@param _isCostInPoly true = cost in Poly, false = USD\r",
            "id": 33365,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "332e302e30",
                    "id": 33281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "745:7:99",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d7a1ce683065975771bedf401ecab037f4f4c62cc51fefdc8b39dd246ff0343a",
                      "typeString": "literal_string \"3.0.0\""
                    },
                    "value": "3.0.0"
                  },
                  {
                    "argumentTypes": null,
                    "id": 33282,
                    "name": "_setupCost",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33272,
                    "src": "754:10:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33283,
                    "name": "_logicContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33274,
                    "src": "766:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33284,
                    "name": "_polymathRegistry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33276,
                    "src": "782:17:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33285,
                    "name": "_isCostInPoly",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33278,
                    "src": "801:13:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 33286,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 33280,
                  "name": "UpgradableModuleFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 49079,
                  "src": "721:23:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UpgradableModuleFactory_$49079_$",
                    "typeString": "type(contract UpgradableModuleFactory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "721:94:99"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33272,
                  "name": "_setupCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 33365,
                  "src": "572:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33274,
                  "name": "_logicContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 33365,
                  "src": "601:22:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33276,
                  "name": "_polymathRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 33365,
                  "src": "634:25:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33278,
                  "name": "_isCostInPoly",
                  "nodeType": "VariableDeclaration",
                  "scope": 33365,
                  "src": "670:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:4:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "561:134:99"
            },
            "returnParameters": {
              "id": 33287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "821:0:99"
            },
            "scope": 33403,
            "src": "549:1034:99",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33401,
              "nodeType": "Block",
              "src": "1880:277:99",
              "statements": [
                {
                  "assignments": [
                    33373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33373,
                      "name": "cappedSTO",
                      "nodeType": "VariableDeclaration",
                      "scope": 33401,
                      "src": "1891:17:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33372,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1891:7:99",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33393,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 33377,
                                "name": "logicContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48708,
                                "src": "1938:14:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LogicContract_$48704_storage_$",
                                  "typeString": "mapping(uint256 => struct UpgradableModuleFactory.LogicContract storage ref)"
                                }
                              },
                              "id": 33379,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 33378,
                                "name": "latestUpgrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48720,
                                "src": "1953:13:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1938:29:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LogicContract_$48704_storage",
                                "typeString": "struct UpgradableModuleFactory.LogicContract storage ref"
                              }
                            },
                            "id": 33380,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "version",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48699,
                            "src": "1938:37:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 33381,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58712,
                              "src": "1977:3:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 33382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1977:10:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "506f6c79546f6b656e",
                                "id": 33385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2017:11:99",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_1cb285bb920a457e70c0f9ab42103e124a9b44100ffd57ff8d1e26b76a17088d",
                                  "typeString": "literal_string \"PolyToken\""
                                },
                                "value": "PolyToken"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_1cb285bb920a457e70c0f9ab42103e124a9b44100ffd57ff8d1e26b76a17088d",
                                  "typeString": "literal_string \"PolyToken\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 33383,
                                "name": "polymathRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31077,
                                "src": "1989:16:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPolymathRegistry_$14438",
                                  "typeString": "contract IPolymathRegistry"
                                }
                              },
                              "id": 33384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14430,
                              "src": "1989:27:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (string memory) view external returns (address)"
                              }
                            },
                            "id": 33386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1989:40:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 33387,
                                "name": "logicContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48708,
                                "src": "2031:14:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LogicContract_$48704_storage_$",
                                  "typeString": "mapping(uint256 => struct UpgradableModuleFactory.LogicContract storage ref)"
                                }
                              },
                              "id": 33389,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 33388,
                                "name": "latestUpgrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48720,
                                "src": "2046:13:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2031:29:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LogicContract_$48704_storage",
                                "typeString": "struct UpgradableModuleFactory.LogicContract storage ref"
                              }
                            },
                            "id": 33390,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "logicContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48701,
                            "src": "2031:43:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1919:18:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_CappedSTOProxy_$33454_$",
                            "typeString": "function (string memory,address,address,address) returns (contract CappedSTOProxy)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 33375,
                            "name": "CappedSTOProxy",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 33454,
                            "src": "1923:14:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CappedSTOProxy_$33454",
                              "typeString": "contract CappedSTOProxy"
                            }
                          }
                        },
                        "id": 33391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1919:156:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CappedSTOProxy_$33454",
                          "typeString": "contract CappedSTOProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CappedSTOProxy_$33454",
                          "typeString": "contract CappedSTOProxy"
                        }
                      ],
                      "id": 33374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1911:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 33392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:165:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1891:185:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33395,
                        "name": "cappedSTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33373,
                        "src": "2105:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33396,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33367,
                        "src": "2116:5:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 33394,
                      "name": "_initializeModule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        49067
                      ],
                      "referencedDeclaration": 49067,
                      "src": "2087:17:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 33397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:35:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33398,
                  "nodeType": "ExpressionStatement",
                  "src": "2087:35:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33399,
                    "name": "cappedSTO",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33373,
                    "src": "2140:9:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 33371,
                  "id": 33400,
                  "nodeType": "Return",
                  "src": "2133:16:99"
                }
              ]
            },
            "documentation": "@notice Used to launch the Module with the help of factory\r\n@param _data Data used for the intialization of the module factory variables\r\n@return address Contract address of the Module\r",
            "id": 33402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33367,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 33402,
                  "src": "1832:20:99",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33366,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1832:5:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1831:22:99"
            },
            "returnParameters": {
              "id": 33371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33370,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33402,
                  "src": "1871:7:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1871:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1870:9:99"
            },
            "scope": 33403,
            "src": "1816:341:99",
            "stateMutability": "nonpayable",
            "superFunction": 14011,
            "visibility": "external"
          }
        ],
        "scope": 33404,
        "src": "165:1997:99"
      }
    ],
    "src": "0:2164:99"
  },
  "legacyAST": {
    "absolutePath": "/C/mspace/polymath-core/contracts/modules/STO/Capped/CappedSTOFactory.sol",
    "exportedSymbols": {
      "CappedSTOFactory": [
        33403
      ]
    },
    "id": 33404,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33266,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:99"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/modules/UpgradableModuleFactory.sol",
        "file": "../../UpgradableModuleFactory.sol",
        "id": 33267,
        "nodeType": "ImportDirective",
        "scope": 33404,
        "sourceUnit": 49080,
        "src": "26:43:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/modules/STO/Capped/CappedSTOProxy.sol",
        "file": "./CappedSTOProxy.sol",
        "id": 33268,
        "nodeType": "ImportDirective",
        "scope": 33404,
        "sourceUnit": 33455,
        "src": "71:30:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33269,
              "name": "UpgradableModuleFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 49079,
              "src": "194:23:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradableModuleFactory_$49079",
                "typeString": "contract UpgradableModuleFactory"
              }
            },
            "id": 33270,
            "nodeType": "InheritanceSpecifier",
            "src": "194:23:99"
          }
        ],
        "contractDependencies": [
          14107,
          31574,
          33454,
          49079,
          58195
        ],
        "contractKind": "contract",
        "documentation": "@title Factory for deploying CappedSTO module\r",
        "fullyImplemented": true,
        "id": 33403,
        "linearizedBaseContracts": [
          33403,
          49079,
          31574,
          58195,
          14107
        ],
        "name": "CappedSTOFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 33364,
              "nodeType": "Block",
              "src": "821:762:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33288,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31081,
                      "src": "832:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "43617070656453544f",
                      "id": 33289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "839:11:99",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d3dba09dff35150cdb7d1c6862d285600c72a3858c9e94fd82de42e61b9824ab",
                        "typeString": "literal_string \"CappedSTO\""
                      },
                      "value": "CappedSTO"
                    },
                    "src": "832:18:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 33291,
                  "nodeType": "ExpressionStatement",
                  "src": "832:18:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33292,
                      "name": "title",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31083,
                      "src": "861:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "4361707065642053544f",
                      "id": 33293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "869:12:99",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_1555df6d0021d8c67ee7169df47ccaf6f86c37dfa3743034b95ea61e6ed7b9f6",
                        "typeString": "literal_string \"Capped STO\""
                      },
                      "value": "Capped STO"
                    },
                    "src": "861:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33295,
                  "nodeType": "ExpressionStatement",
                  "src": "861:20:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33296,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31085,
                      "src": "892:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "5468697320736d61727420636f6e747261637420637265617465732061206d6178696d756d206e756d626572206f6620746f6b656e732028692e652e206861726420636170292077686963682074686520746f74616c20616767726567617465206f6620746f6b656e7320616371756972656420627920616c6c20696e766573746f72732063616e6e6f74206578636565642e20536563757269747920746f6b656e73206172652073656e7420746f2074686520696e766573746f722075706f6e20726563657074696f6e206f66207468652066756e64732028455448206f7220504f4c59292c20616e6420616e7920736563757269747920746f6b656e73206c6566742075706f6e207465726d696e6174696f6e206f6620746865206f66666572696e672077696c6c206e6f74206265206d696e7465642e",
                      "id": 33297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "906:315:99",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_24e255bc910673e37c79c5c62b7f94749e7474e6c4fd727c35c1b94bb08844fc",
                        "typeString": "literal_string \"This smart contract creates a maximum number of tokens (i.e. hard cap) which the total aggregate of tokens acquired by all investors cannot exceed. Security tokens are sent to the investor upon reception of the funds (ETH or POLY), and any security tokens left upon termination of the offering will not be minted.\""
                      },
                      "value": "This smart contract creates a maximum number of tokens (i.e. hard cap) which the total aggregate of tokens acquired by all investors cannot exceed. Security tokens are sent to the investor upon reception of the funds (ETH or POLY), and any security tokens left upon termination of the offering will not be minted."
                    },
                    "src": "892:329:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33299,
                  "nodeType": "ExpressionStatement",
                  "src": "892:329:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "33",
                        "id": 33303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1247:1:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33300,
                        "name": "typesData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31088,
                        "src": "1232:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                          "typeString": "uint8[] storage ref"
                        }
                      },
                      "id": 33302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1232:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint8_$returns$_t_uint256_$",
                        "typeString": "function (uint8) returns (uint256)"
                      }
                    },
                    "id": 33304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1232:17:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33305,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:17:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436170706564",
                        "id": 33309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1274:8:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea0ae8c04715067d85a72d739eb0eb29a1675ab457afd1b44648d1d56801ff8d",
                          "typeString": "literal_string \"Capped\""
                        },
                        "value": "Capped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ea0ae8c04715067d85a72d739eb0eb29a1675ab457afd1b44648d1d56801ff8d",
                          "typeString": "literal_string \"Capped\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33306,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31091,
                        "src": "1260:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1260:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1260:23:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33311,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:23:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455448",
                        "id": 33315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1308:5:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                          "typeString": "literal_string \"ETH\""
                        },
                        "value": "ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                          "typeString": "literal_string \"ETH\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33312,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31091,
                        "src": "1294:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1294:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33317,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:20:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "504f4c59",
                        "id": 33321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1339:6:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42e9b9ff2964f66d264e07a2cd4c5234a8c8c5adbfc54101bd50b0744fcd261f",
                          "typeString": "literal_string \"POLY\""
                        },
                        "value": "POLY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_42e9b9ff2964f66d264e07a2cd4c5234a8c8c5adbfc54101bd50b0744fcd261f",
                          "typeString": "literal_string \"POLY\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33318,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31091,
                        "src": "1325:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1325:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1325:21:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33323,
                  "nodeType": "ExpressionStatement",
                  "src": "1325:21:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "53544f",
                        "id": 33327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1371:5:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79030946dd457157e4aa08fcb4907c422402e75f0f0ecb4f2089cb35021ff964",
                          "typeString": "literal_string \"STO\""
                        },
                        "value": "STO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_79030946dd457157e4aa08fcb4907c422402e75f0f0ecb4f2089cb35021ff964",
                          "typeString": "literal_string \"STO\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33324,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31091,
                        "src": "1357:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1357:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33329,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:20:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 33330,
                        "name": "compatibleSTVersionRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31102,
                        "src": "1388:24:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint24_$",
                          "typeString": "mapping(string memory => uint24)"
                        }
                      },
                      "id": 33332,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "6c6f776572426f756e64",
                        "id": 33331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1413:12:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8ed9a2cdf8359d00aca8e7b53163f5ce2b2fa898d757f02f3a11e2367b3ccb2",
                          "typeString": "literal_string \"lowerBound\""
                        },
                        "value": "lowerBound"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1388:38:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 33336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1453:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 33335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1447:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1447:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1463:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1457:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1457:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1473:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1467:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1467:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 33333,
                          "name": "VersionUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20382,
                          "src": "1429:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VersionUtils_$20382_$",
                            "typeString": "type(library VersionUtils)"
                          }
                        },
                        "id": 33334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20249,
                        "src": "1429:17:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint24_$",
                          "typeString": "function (uint8,uint8,uint8) pure returns (uint24)"
                        }
                      },
                      "id": 33344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1429:47:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "1388:88:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 33346,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:88:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 33347,
                        "name": "compatibleSTVersionRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31102,
                        "src": "1487:24:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint24_$",
                          "typeString": "mapping(string memory => uint24)"
                        }
                      },
                      "id": 33349,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "7570706572426f756e64",
                        "id": 33348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1512:12:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa7a3156b8c73047ca2b3d4e510fcb4d4c900378a3b9e7a046fc5f75c0501ecc",
                          "typeString": "literal_string \"upperBound\""
                        },
                        "value": "upperBound"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1487:38:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 33353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1552:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 33352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1546:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1546:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1562:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1556:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1556:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1572:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1566:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1566:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 33350,
                          "name": "VersionUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20382,
                          "src": "1528:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VersionUtils_$20382_$",
                            "typeString": "type(library VersionUtils)"
                          }
                        },
                        "id": 33351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20249,
                        "src": "1528:17:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint24_$",
                          "typeString": "function (uint8,uint8,uint8) pure returns (uint24)"
                        }
                      },
                      "id": 33361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1528:47:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "1487:88:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 33363,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:88:99"
                }
              ]
            },
            "documentation": "@notice Constructor\r\n@param _setupCost Setup cost of the module\r\n@param _logicContract Contract address that contains the logic related to `description`\r\n@param _polymathRegistry Address of the Polymath registry\r\n@param _isCostInPoly true = cost in Poly, false = USD\r",
            "id": 33365,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "332e302e30",
                    "id": 33281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "745:7:99",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d7a1ce683065975771bedf401ecab037f4f4c62cc51fefdc8b39dd246ff0343a",
                      "typeString": "literal_string \"3.0.0\""
                    },
                    "value": "3.0.0"
                  },
                  {
                    "argumentTypes": null,
                    "id": 33282,
                    "name": "_setupCost",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33272,
                    "src": "754:10:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33283,
                    "name": "_logicContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33274,
                    "src": "766:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33284,
                    "name": "_polymathRegistry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33276,
                    "src": "782:17:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33285,
                    "name": "_isCostInPoly",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33278,
                    "src": "801:13:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 33286,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 33280,
                  "name": "UpgradableModuleFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 49079,
                  "src": "721:23:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UpgradableModuleFactory_$49079_$",
                    "typeString": "type(contract UpgradableModuleFactory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "721:94:99"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33272,
                  "name": "_setupCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 33365,
                  "src": "572:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33274,
                  "name": "_logicContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 33365,
                  "src": "601:22:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33276,
                  "name": "_polymathRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 33365,
                  "src": "634:25:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33278,
                  "name": "_isCostInPoly",
                  "nodeType": "VariableDeclaration",
                  "scope": 33365,
                  "src": "670:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:4:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "561:134:99"
            },
            "returnParameters": {
              "id": 33287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "821:0:99"
            },
            "scope": 33403,
            "src": "549:1034:99",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33401,
              "nodeType": "Block",
              "src": "1880:277:99",
              "statements": [
                {
                  "assignments": [
                    33373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33373,
                      "name": "cappedSTO",
                      "nodeType": "VariableDeclaration",
                      "scope": 33401,
                      "src": "1891:17:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33372,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1891:7:99",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33393,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 33377,
                                "name": "logicContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48708,
                                "src": "1938:14:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LogicContract_$48704_storage_$",
                                  "typeString": "mapping(uint256 => struct UpgradableModuleFactory.LogicContract storage ref)"
                                }
                              },
                              "id": 33379,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 33378,
                                "name": "latestUpgrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48720,
                                "src": "1953:13:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1938:29:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LogicContract_$48704_storage",
                                "typeString": "struct UpgradableModuleFactory.LogicContract storage ref"
                              }
                            },
                            "id": 33380,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "version",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48699,
                            "src": "1938:37:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 33381,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58712,
                              "src": "1977:3:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 33382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1977:10:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "506f6c79546f6b656e",
                                "id": 33385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2017:11:99",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_1cb285bb920a457e70c0f9ab42103e124a9b44100ffd57ff8d1e26b76a17088d",
                                  "typeString": "literal_string \"PolyToken\""
                                },
                                "value": "PolyToken"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_1cb285bb920a457e70c0f9ab42103e124a9b44100ffd57ff8d1e26b76a17088d",
                                  "typeString": "literal_string \"PolyToken\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 33383,
                                "name": "polymathRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31077,
                                "src": "1989:16:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPolymathRegistry_$14438",
                                  "typeString": "contract IPolymathRegistry"
                                }
                              },
                              "id": 33384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14430,
                              "src": "1989:27:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (string memory) view external returns (address)"
                              }
                            },
                            "id": 33386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1989:40:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 33387,
                                "name": "logicContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48708,
                                "src": "2031:14:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LogicContract_$48704_storage_$",
                                  "typeString": "mapping(uint256 => struct UpgradableModuleFactory.LogicContract storage ref)"
                                }
                              },
                              "id": 33389,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 33388,
                                "name": "latestUpgrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48720,
                                "src": "2046:13:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2031:29:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LogicContract_$48704_storage",
                                "typeString": "struct UpgradableModuleFactory.LogicContract storage ref"
                              }
                            },
                            "id": 33390,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "logicContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48701,
                            "src": "2031:43:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1919:18:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_CappedSTOProxy_$33454_$",
                            "typeString": "function (string memory,address,address,address) returns (contract CappedSTOProxy)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 33375,
                            "name": "CappedSTOProxy",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 33454,
                            "src": "1923:14:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CappedSTOProxy_$33454",
                              "typeString": "contract CappedSTOProxy"
                            }
                          }
                        },
                        "id": 33391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1919:156:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CappedSTOProxy_$33454",
                          "typeString": "contract CappedSTOProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CappedSTOProxy_$33454",
                          "typeString": "contract CappedSTOProxy"
                        }
                      ],
                      "id": 33374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1911:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 33392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:165:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1891:185:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33395,
                        "name": "cappedSTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33373,
                        "src": "2105:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33396,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33367,
                        "src": "2116:5:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 33394,
                      "name": "_initializeModule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        49067
                      ],
                      "referencedDeclaration": 49067,
                      "src": "2087:17:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 33397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:35:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33398,
                  "nodeType": "ExpressionStatement",
                  "src": "2087:35:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33399,
                    "name": "cappedSTO",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33373,
                    "src": "2140:9:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 33371,
                  "id": 33400,
                  "nodeType": "Return",
                  "src": "2133:16:99"
                }
              ]
            },
            "documentation": "@notice Used to launch the Module with the help of factory\r\n@param _data Data used for the intialization of the module factory variables\r\n@return address Contract address of the Module\r",
            "id": 33402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33367,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 33402,
                  "src": "1832:20:99",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33366,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1832:5:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1831:22:99"
            },
            "returnParameters": {
              "id": 33371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33370,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33402,
                  "src": "1871:7:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1871:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1870:9:99"
            },
            "scope": 33403,
            "src": "1816:341:99",
            "stateMutability": "nonpayable",
            "superFunction": 14011,
            "visibility": "external"
          }
        ],
        "scope": 33404,
        "src": "165:1997:99"
      }
    ],
    "src": "0:2164:99"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xbcda874f53511fb6338990baf12d53b3bcef8cb0247ba5f7673450267395515a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_version",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_upgrade",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_logicContract",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_upgradeData",
              "type": "bytes"
            }
          ],
          "name": "LogicContractSet",
          "type": "event",
          "signature": "0xbcda874f53511fb6338990baf12d53b3bcef8cb0247ba5f7673450267395515a"
        },
        "0x6b272426dd4b3366b853f4e32bb7fce7392e461688b7a8bf942bd61f756f1d0f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_module",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_securityToken",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_version",
              "type": "uint256"
            }
          ],
          "name": "ModuleUpgraded",
          "type": "event",
          "signature": "0x6b272426dd4b3366b853f4e32bb7fce7392e461688b7a8bf942bd61f756f1d0f"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x599b244d21db9af3e5c0ec6cd4af8b4c6085c9ac647c72f008f8c40d0d7cd1be": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_oldSetupCost",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_newSetupCost",
              "type": "uint256"
            }
          ],
          "name": "ChangeSetupCost",
          "type": "event",
          "signature": "0x599b244d21db9af3e5c0ec6cd4af8b4c6085c9ac647c72f008f8c40d0d7cd1be"
        },
        "0x243562d4d8acd21cf96c899dfa0c26774212a5181e5e40f852c7e6b66b7b96db": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_isOldCostInPoly",
              "type": "bool"
            },
            {
              "indexed": false,
              "name": "_isNewCostInPoly",
              "type": "bool"
            }
          ],
          "name": "ChangeCostType",
          "type": "event",
          "signature": "0x243562d4d8acd21cf96c899dfa0c26774212a5181e5e40f852c7e6b66b7b96db"
        },
        "0xb68b4973fbce93f056103272c1f3f53b607527138d7e323b7b94f7ac169ebf77": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_module",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_moduleName",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "_moduleFactory",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_creator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_setupCost",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_setupCostInPoly",
              "type": "uint256"
            }
          ],
          "name": "GenerateModuleFromFactory",
          "type": "event",
          "signature": "0xb68b4973fbce93f056103272c1f3f53b607527138d7e323b7b94f7ac169ebf77"
        },
        "0x5b67e16edaf7fc70c8d065ea6e70b97ed944d98fe593b04d682216615a3b04db": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_boundType",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_major",
              "type": "uint8"
            },
            {
              "indexed": false,
              "name": "_minor",
              "type": "uint8"
            },
            {
              "indexed": false,
              "name": "_patch",
              "type": "uint8"
            }
          ],
          "name": "ChangeSTVersionBound",
          "type": "event",
          "signature": "0x5b67e16edaf7fc70c8d065ea6e70b97ed944d98fe593b04d682216615a3b04db"
        }
      },
      "links": {},
      "address": "0xeE54224A125E46dFcC5759D4A89036D922F1e867",
      "transactionHash": "0x6cc133ae80e83e76a7bfb5787a56e1b61de3cacc60e19eb60fe109ac95af28ff"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-05T22:53:44.786Z",
  "devdoc": {
    "methods": {
      "changeCostAndType(uint256,bool)": {
        "params": {
          "_isCostInPoly": "new setup cost currency. USD or POLY\r",
          "_setupCost": "new setup cost\r"
        }
      },
      "changeDescription(string)": {
        "params": {
          "_description": "New description that will replace the old one.\r"
        }
      },
      "changeName(bytes32)": {
        "params": {
          "_name": "New name that will replace the old one.\r"
        }
      },
      "changeSTVersionBounds(string,uint8[])": {
        "params": {
          "_boundType": "Type of bound\r",
          "_newVersion": "new version array\r"
        }
      },
      "changeSetupCost(uint256)": {
        "params": {
          "_setupCost": "new setup cost\r"
        }
      },
      "changeTags(bytes32[])": {
        "params": {
          "_tagsData": "New list of tags\r"
        }
      },
      "changeTitle(string)": {
        "params": {
          "_title": "New Title that will replace the old one.\r"
        }
      },
      "constructor": {
        "params": {
          "_isCostInPoly": "true = cost in Poly, false = USD\r",
          "_logicContract": "Contract address that contains the logic related to `description`\r",
          "_polymathRegistry": "Address of the Polymath registry\r",
          "_setupCost": "Setup cost of the module\r"
        }
      },
      "deploy(bytes)": {
        "params": {
          "_data": "Data used for the intialization of the module factory variables\r"
        },
        "return": "address Contract address of the Module\r"
      },
      "getLowerSTVersionBounds()": {
        "return": "lower bound\r"
      },
      "getUpperSTVersionBounds()": {
        "return": "upper bound\r"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setLogicContract(string,address,bytes)": {
        "params": {
          "_logicContract": "Address of deployed module logic contract referenced from proxy\r",
          "_upgradeData": "Data to be passed in call to upgradeToAndCall when a token upgrades its module\r",
          "_version": "Version of upgraded module\r"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "updateLogicContract(uint256,string,address,bytes)": {
        "params": {
          "_logicContract": "Address of deployed module logic contract referenced from proxy\r",
          "_upgrade": "logic contract to upgrade\r",
          "_upgradeData": "Data to be passed in call to upgradeToAndCall when a token upgrades its module\r",
          "_version": "Version of upgraded module\r"
        }
      },
      "upgrade(address)": {
        "params": {
          "_module": "Address of (proxy) module to be upgraded\r"
        }
      }
    },
    "title": "Factory for deploying CappedSTO module\r"
  },
  "userdoc": {
    "methods": {
      "changeCostAndType(uint256,bool)": {
        "notice": "Used to change the currency and amount of setup cost\r"
      },
      "changeDescription(string)": {
        "notice": "Updates the description of the ModuleFactory\r"
      },
      "changeName(bytes32)": {
        "notice": "Updates the name of the ModuleFactory\r"
      },
      "changeSTVersionBounds(string,uint8[])": {
        "notice": "Function use to change the lower and upper bound of the compatible version st\r"
      },
      "changeSetupCost(uint256)": {
        "notice": "Used to change the fee of the setup cost\r"
      },
      "changeTags(bytes32[])": {
        "notice": "Updates the tags of the ModuleFactory\r"
      },
      "changeTitle(string)": {
        "notice": "Updates the title of the ModuleFactory\r"
      },
      "constructor": "Constructor\r",
      "deploy(bytes)": {
        "notice": "Used to launch the Module with the help of factory\r"
      },
      "getLowerSTVersionBounds()": {
        "notice": "Used to get the lower bound\r"
      },
      "getTags()": {
        "notice": "Get the tags related to the module factory\r"
      },
      "getTypes()": {
        "notice": "Type of the Module factory\r"
      },
      "getUpperSTVersionBounds()": {
        "notice": "Used to get the upper bound\r"
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setLogicContract(string,address,bytes)": {
        "notice": "Used to upgrade the module factory\r"
      },
      "setupCostInPoly()": {
        "notice": "Get the setup cost of the module\r"
      },
      "updateLogicContract(uint256,string,address,bytes)": {
        "notice": "Used to update an existing token logic contract\r"
      },
      "upgrade(address)": {
        "notice": "Used by a security token to upgrade a given module\r"
      },
      "version()": {
        "notice": "Get the version related to the module factory\r"
      }
    }
  }
}