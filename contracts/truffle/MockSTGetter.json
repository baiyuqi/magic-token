{
  "contractName": "MockSTGetter",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "name": "",
          "type": "uint8[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "holderCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTreasuryWallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isIssuable",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getterDelegate",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_start",
          "type": "uint256"
        },
        {
          "name": "_end",
          "type": "uint256"
        }
      ],
      "name": "iterateInvestors",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_checkpointId",
          "type": "uint256"
        }
      ],
      "name": "getInvestorsAt",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCheckpointTimes",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_investor",
          "type": "address"
        },
        {
          "name": "_checkpointId",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentCheckpointId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dataStore",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_partition",
          "type": "bytes32"
        },
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorForPartition",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "polyToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "partitionsOf",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "getModulesByName",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "polymathRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controllerDisabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_delegate",
          "type": "address"
        },
        {
          "name": "_module",
          "type": "address"
        },
        {
          "name": "_perm",
          "type": "bytes32"
        }
      ],
      "name": "checkPermission",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getInvestorCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_checkpointId",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAllDocuments",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_checkpointId",
          "type": "uint256"
        },
        {
          "name": "_start",
          "type": "uint256"
        },
        {
          "name": "_end",
          "type": "uint256"
        }
      ],
      "name": "getInvestorsSubsetAt",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "getModulesByType",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "getDocument",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getInvestors",
      "outputs": [
        {
          "name": "investors",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_module",
          "type": "address"
        }
      ],
      "name": "getModule",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint8[]"
        },
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "moduleRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityTokenRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenDetails",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transfersFrozen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_upgrade",
          "type": "uint256"
        }
      ],
      "name": "UpgradeEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_upgrade",
          "type": "uint256"
        }
      ],
      "name": "newGetter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"holderCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTreasuryWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isIssuable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getterDelegate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"iterateInvestors\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_checkpointId\",\"type\":\"uint256\"}],\"name\":\"getInvestorsAt\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCheckpointTimes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"},{\"name\":\"_checkpointId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentCheckpointId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dataStore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_partition\",\"type\":\"bytes32\"},{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorForPartition\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"polyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"partitionsOf\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"getModulesByName\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"polymathRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controllerDisabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_delegate\",\"type\":\"address\"},{\"name\":\"_module\",\"type\":\"address\"},{\"name\":\"_perm\",\"type\":\"bytes32\"}],\"name\":\"checkPermission\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInvestorCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_checkpointId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllDocuments\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_checkpointId\",\"type\":\"uint256\"},{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"getInvestorsSubsetAt\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"getModulesByType\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"getDocument\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInvestors\",\"outputs\":[{\"name\":\"investors\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"getModule\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint8[]\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"moduleRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"securityTokenRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgrade\",\"type\":\"uint256\"}],\"name\":\"newGetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenDetails\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_upgrade\",\"type\":\"uint256\"}],\"name\":\"UpgradeEvent\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"balanceOfAt(address,uint256)\":{\"params\":{\"_checkpointId\":\"Checkpoint ID to query as of\\r\",\"_investor\":\"Investor to query balance for\\r\"}},\"checkPermission(address,address,bytes32)\":{\"details\":\"Note that IModule withPerm will allow ST owner all permissions anyway\\rthis allows individual modules to override this logic if needed (to not allow ST owner all permissions)\\r\",\"params\":{\"_delegate\":\"address of delegate\\r\",\"_module\":\"address of PermissionManager module\\r\",\"_perm\":\"the permissions\\r\"},\"return\":\"success\\r\"},\"getAllDocuments()\":{\"return\":\"bytes32 List of all documents names present in the contract.\\r\"},\"getCheckpointTimes()\":{\"return\":\"List of checkpoint times\\r\"},\"getDocument(bytes32)\":{\"params\":{\"_name\":\"Name of the document\\r\"},\"return\":\"string The URI associated with the document.\\rbytes32 The hash (of the contents) of the document.\\ruint256 the timestamp at which the document was last modified.\\r\"},\"getInvestorCount()\":{\"return\":\"Investor count\\r\"},\"getInvestors()\":{\"return\":\"list of addresses\\r\"},\"getInvestorsAt(uint256)\":{\"params\":{\"_checkpointId\":\"Checkpoint id at which investor list is to be populated\\r\"},\"return\":\"list of investors\\r\"},\"getInvestorsSubsetAt(uint256,uint256,uint256)\":{\"params\":{\"_checkpointId\":\"Checkpoint id at which investor list is to be populated\\r\",\"_end\":\"Position of investor to stop iteration at\\r\",\"_start\":\"Position of investor to start iteration from\\r\"},\"return\":\"list of investors\\r\"},\"getModule(address)\":{\"params\":{\"_module\":\"address of the module\\r\"},\"return\":\"bytes32 name\\raddress module address\\raddress module factory address\\rbool module archived\\ruint8 array of module types\\rbytes32 module label\\r\"},\"getModulesByName(bytes32)\":{\"params\":{\"_name\":\"name of the module\\r\"},\"return\":\"address[] list of modules with this name\\r\"},\"getModulesByType(uint8)\":{\"params\":{\"_type\":\"type of the module\\r\"},\"return\":\"address[] list of modules with this type\\r\"},\"isIssuable()\":{\"details\":\"If a token returns FALSE for `isIssuable()` then it MUST always return FALSE in the future.\\r If a token returns FALSE for `isIssuable()` then it MUST never allow additional tokens to be issued.\\r\",\"return\":\"bool `true` signifies the minting is allowed. While `false` denotes the end of minting\\r\"},\"isOperator(address,address)\":{\"params\":{\"_operator\":\"The operator to check\\r\",\"_tokenHolder\":\"The token holder to check\\r\"},\"return\":\"Whether the `_operator` is an operator for all partitions of `_tokenHolder`\\r\"},\"isOperatorForPartition(bytes32,address,address)\":{\"params\":{\"_operator\":\"The operator to check\\r\",\"_partition\":\"The partition to check\\r\",\"_tokenHolder\":\"The token holder to check\\r\"},\"return\":\"Whether the `_operator` is an operator for a specified partition of `_tokenHolder`\\r\"},\"iterateInvestors(uint256,uint256)\":{\"params\":{\"_end\":\"Position of investor to stop iteration at\\r\",\"_start\":\"Position of investor to start iteration from\\r\"},\"return\":\"list of investors\\r\"},\"partitionsOf(address)\":{\"return\":\"List of partitions\\r\"},\"totalSupplyAt(uint256)\":{\"params\":{\"_checkpointId\":\"Checkpoint ID to query\\r\"},\"return\":\"uint256\\r\"}},\"title\":\"Security Token contract (mock)\\r\"},\"userdoc\":{\"methods\":{\"balanceOfAt(address,uint256)\":{\"notice\":\"Queries balances as of a defined checkpoint\\r\"},\"checkPermission(address,address,bytes32)\":{\"notice\":\"Validate permissions with PermissionManager if it exists, If no Permission return false\\r\"},\"getAllDocuments()\":{\"notice\":\"Used to retrieve a full list of documents attached to the smart contract.\\r\"},\"getCheckpointTimes()\":{\"notice\":\"Gets list of times that checkpoints were created\\r\"},\"getDocument(bytes32)\":{\"notice\":\"Used to return the details of a document with a known name (`bytes32`).\\r\"},\"getInvestorCount()\":{\"notice\":\"Returns the count of address that were added as (potential) investors\\r\"},\"getInvestors()\":{\"notice\":\"returns an array of investors\\r NB - this length may differ from investorCount as it contains all investors that ever held tokens\\r\"},\"getInvestorsAt(uint256)\":{\"notice\":\"returns an array of investors with non zero balance at a given checkpoint\\r\"},\"getInvestorsSubsetAt(uint256,uint256,uint256)\":{\"notice\":\"returns an array of investors with non zero balance at a given checkpoint\\r\"},\"getModule(address)\":{\"notice\":\"Returns the data associated to a module\\r\"},\"getModulesByName(bytes32)\":{\"notice\":\"Returns a list of modules that match the provided name\\r\"},\"getModulesByType(uint8)\":{\"notice\":\"Returns a list of modules that match the provided module type\\r\"},\"getTreasuryWallet()\":{\"notice\":\"use to return the global treasury wallet\\r\"},\"getVersion()\":{\"notice\":\"Returns the version of the SecurityToken\\r\"},\"isIssuable()\":{\"notice\":\"A security token issuer can specify that issuance has finished for the token\\r (i.e. no new tokens can be minted or issued).\\r\"},\"isOperator(address,address)\":{\"notice\":\"Determines whether `_operator` is an operator for all partitions of `_tokenHolder`\\r\"},\"isOperatorForPartition(bytes32,address,address)\":{\"notice\":\"Determines whether `_operator` is an operator for a specified partition of `_tokenHolder`\\r\"},\"iterateInvestors(uint256,uint256)\":{\"notice\":\"generates subset of investors\\r NB - can be used in batches if investor list is large. start and end both are included in array.\\r\"},\"partitionsOf(address)\":{\"notice\":\"Return all partitions\\r\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Queries totalSupply as of a defined checkpoint\\r\"}},\"notice\":\"SecurityToken is an ERC1400 token with added capabilities:\\r- Implements the ERC1400 Interface\\r- Transfers are restricted\\r- Modules can be attached to it to control its behaviour\\r- ST should not be deployed directly, but rather the SecurityTokenRegistry should be used\\r- ST does not inherit from ISecurityToken due to:\\r- https://github.com/ethereum/solidity/issues/4847\\r\"}},\"settings\":{\"compilationTarget\":{\"/C/mspace/polymath-core/contracts/mocks/MockSTGetter.sol\":\"MockSTGetter\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/mspace/polymath-core/contracts/interfaces/IDataStore.sol\":{\"keccak256\":\"0xb41b686a022dcc47c39327aa32311fab47ae958cb798bb3f08cf44792db398fe\",\"urls\":[\"bzzr://034481827f48714e62cb1f7685e72ef0533cb7b5991da0232a67106e0cb1ed5c\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModule.sol\":{\"keccak256\":\"0xbe5b025f519bd373776ae04da7c99e5baeecc51ae5cfd56e304ccf65fb743f9f\",\"urls\":[\"bzzr://6ff0aa2de2d6b1a9801a7f3baa2500326cb94702c5a30ff3adbbcae060b14413\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModuleFactory.sol\":{\"keccak256\":\"0x233b5044aafc5a57bff374d32be347b5f58e0f7b4194084f5ac812963cee108b\",\"urls\":[\"bzzr://6d78d7157910cab1a9544e09476b2b96c23ec2fedc1c8c2ae12c755e0454b99e\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModuleRegistry.sol\":{\"keccak256\":\"0x21d5fbfb49b074ed60509fc7fbe372923bddb28d812af5516f074acbb2389dfa\",\"urls\":[\"bzzr://717fca3ac9e7f785a77d192c96abd9b5ba74010bd47ec046ce2a470f96c6cab0\"]},\"/C/mspace/polymath-core/contracts/interfaces/IOracle.sol\":{\"keccak256\":\"0x23b25f1032ed5c51f37acedbf91f0a9ea2c5ab19621e90aacefaf0ad280f628f\",\"urls\":[\"bzzr://4083f9b06d3a58fad3e0e5e92f68fbe768a92ae2092cd78082b116434e9dba94\"]},\"/C/mspace/polymath-core/contracts/interfaces/IPoly.sol\":{\"keccak256\":\"0x4d356e81a772b92802a31e03f726744f91e4c8e7e7af8b8f0f514ef58d6827f4\",\"urls\":[\"bzzr://60432eaeb51bb3d60285d4226a342adc7d082609772f0ed1b1a7a7c44015456a\"]},\"/C/mspace/polymath-core/contracts/interfaces/IPolymathRegistry.sol\":{\"keccak256\":\"0x6b6fbd0f55c6f2905e308c235a10b121c5779aa8bcfa1f07ccca4d8e19de7bc9\",\"urls\":[\"bzzr://700dab32ed439b1ea8d672742947abc2759093fb0a21144e05de7abc2954ecc1\"]},\"/C/mspace/polymath-core/contracts/interfaces/ISecurityTokenRegistry.sol\":{\"keccak256\":\"0x5445c715ca6ec0df962d9c31787b73b2fb3382236dfc69e31d4e8b3f260d71aa\",\"urls\":[\"bzzr://25cdfd8fcf1bc0f28da527f08c11738b93676ace070b9b63a92a14c2f4d2e2cc\"]},\"/C/mspace/polymath-core/contracts/interfaces/ITransferManager.sol\":{\"keccak256\":\"0xe7d3b5757b8502eb3f92225db6c2268f3f6fac3bfa195bbb97ec9f4c15b46210\",\"urls\":[\"bzzr://3dbb6638be740a5db6ecebe28b318b9fbfbb1b81dd25a3bf30ee932e6e794d2a\"]},\"/C/mspace/polymath-core/contracts/libraries/DecimalMath.sol\":{\"keccak256\":\"0x1d0b76f8fe8da427cf177f243d94bdb2d61719841a721ac2563ccbcc34d66621\",\"urls\":[\"bzzr://a5d44c088f155a81ecb9742696dbebb436e0aed906ec4978bb8c4c0dc633a87b\"]},\"/C/mspace/polymath-core/contracts/libraries/StatusCodes.sol\":{\"keccak256\":\"0x285e166e92cd51c7a5670fd99fceac3a997fc1a360734464bcad89d2cc6052ff\",\"urls\":[\"bzzr://3a1c7483ca7ae51c62d1c6b9653e694fa5e6b7157daf52d14d566037ef66dca9\"]},\"/C/mspace/polymath-core/contracts/libraries/TokenLib.sol\":{\"keccak256\":\"0x3ac6fd63bff44b889d95a477fa9d79a05758388ab8231aa4854678f9b89c71ae\",\"urls\":[\"bzzr://6bdd19c519fa25f234b7410e2538ad7952350b41c2547586d1f300c2dc23e6f0\"]},\"/C/mspace/polymath-core/contracts/libraries/Util.sol\":{\"keccak256\":\"0x0641ec6587995396e7134d2910eddf3ea0f1504840f0cc1cd83273aa579ac9fc\",\"urls\":[\"bzzr://5cfdd07fa855d44dd5495c4d5e64476ab5b27da1da09cfde532088599b59b86e\"]},\"/C/mspace/polymath-core/contracts/libraries/VersionUtils.sol\":{\"keccak256\":\"0x3406ffb981fc8ef803ff1b4e397bc7a457c3ed60231070cb64137f01054f4042\",\"urls\":[\"bzzr://07e703fd8f5ff93ce888b1a388a985cdccd1c7e8bf3ba2b051c10a0898b71b9d\"]},\"/C/mspace/polymath-core/contracts/mocks/MockSTGetter.sol\":{\"keccak256\":\"0x626a55d97bf058d30d21fb84404b70f594aeefb55a3d34ad12429671682e4b98\",\"urls\":[\"bzzr://a883cddf2f704ebd827a1609d7fb3b555185c0040bb0138f34aea3eb554b31cb\"]},\"/C/mspace/polymath-core/contracts/modules/ModuleFactory.sol\":{\"keccak256\":\"0x573d8b181146be8b8fc47449920c49f6e2cb16f4b7560e38435dd659628f2a2e\",\"urls\":[\"bzzr://a7df0056a005f9d33b358be4bc0fc98db9afc7286f556961cb1d7531df2722d0\"]},\"/C/mspace/polymath-core/contracts/modules/PermissionManager/IPermissionManager.sol\":{\"keccak256\":\"0xea92765ddf9613d58e54a34a339899af6c314172981021dc007c89801271ecb3\",\"urls\":[\"bzzr://e22b3cd9588642e1a5ff100afc9e380bceddb9ded6ffbce3f1499ae674261c85\"]},\"/C/mspace/polymath-core/contracts/modules/UpgradableModuleFactory.sol\":{\"keccak256\":\"0x9704cd486feeb4220126df7ede3eee7850413d7b93d2b7dbb1ade74fbfc2d68e\",\"urls\":[\"bzzr://e83f7efc722e0066e4846eb2f9516f7127b1f5bee3557c90bc5ab8e9b4b40959\"]},\"/C/mspace/polymath-core/contracts/proxy/OwnedUpgradeabilityProxy.sol\":{\"keccak256\":\"0x30f2ca755ec4bb6ab45450aaa110dc49ecd9d2dda1dadfbfaa187ceec56567f8\",\"urls\":[\"bzzr://f350eef96981e9d153a1f01bd77b9c41c9e49c108f37037c613124867fe459f5\"]},\"/C/mspace/polymath-core/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xd9f5cbe44a9d354154b7cf09f00acd21761bfd7f1152658d810cb27c1432897e\",\"urls\":[\"bzzr://63192e45362ec47fa547eb922501636ec393b9f3617fd3ae5fde2ba34953b743\"]},\"/C/mspace/polymath-core/contracts/proxy/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x5b42dc77069af1d968271f56f49771d0b7dfd63fa47ee575c9b6aaa82d0abce3\",\"urls\":[\"bzzr://9bd9a55021d446f61f2932266681181c8df0d3f84100ac35b65c3bd328dff80c\"]},\"/C/mspace/polymath-core/contracts/tokens/OZStorage.sol\":{\"keccak256\":\"0x4f3b35e35007a7db9d2f5b53ad2015a897ebf6f825b4b3aa29eca77ca1c725cf\",\"urls\":[\"bzzr://80c56b81161e3ce5d0f0d1662592f0397a04f9583ebbe226b7e8191fdc2c3473\"]},\"/C/mspace/polymath-core/contracts/tokens/STGetter.sol\":{\"keccak256\":\"0xe68db2dde67cfb30027b955791e7374e7584fe913df2dfadf265a78fdd791da2\",\"urls\":[\"bzzr://a66a91fbe78cbd3898aecbbddda228c3dac230bcb0cc8d2d73e3b1ad470b6692\"]},\"/C/mspace/polymath-core/contracts/tokens/SecurityTokenStorage.sol\":{\"keccak256\":\"0x4c05774e4ca1befea034c778482187a7387b181d1c992ac96dc4d4d4d5fcd3cf\",\"urls\":[\"bzzr://8aeecefd04a61caf84fa971f4ea67e72c5f9033cddf6cdac62eda7332d71f5e4\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]}},\"version\":1}",
  "bytecode": "0x60806040526012805460ff1990811690915560148054909116600117905534801561002957600080fd5b50611869806100396000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c806377282b701161013b578063b2f5a54c116100b8578063d28a70471161007c578063d28a70471461071c578063d6abe1101461073b578063e45b813414610743578063e77772fe1461074b578063f77c4791146107535761023d565b8063b2f5a54c14610611578063b5de8d4c14610619578063b6363cf2146106de578063b95459e41461070c578063ce4dbdff146107145761023d565b8063981b24d0116100ff578063981b24d0146105005780639fa5f50b1461051d578063abe191c114610525578063ac90b4221461054e578063b10d6b411461056e5761023d565b806377282b70146104aa5780637a802c71146104b25780638658b8b9146104ba57806395d89b41146104f0578063960524e3146104f85761023d565b80633f553586116101c9578063660d0d671161018d578063660d0d67146104235780636d77cad61461042b5780636faa22a51461045f578063740ab8f414610467578063764387bd1461048d5761023d565b80633f553586146103c25780634c6041d3146103df5780634ee2cd7e146103e75780635488cc8014610413578063556f0dc71461041b5761023d565b80632c035b74116102105780632c035b741461034d5780632f1cae85146103715780632fb3b99d146103795780633052eed814610381578063313ce567146103a45761023d565b806306fdde03146102425780630d8e6e2c146102bf578063158ef93e146103175780631aab9a9f14610333575b600080fd5b61024a61075b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561028457818101518382015260200161026c565b50505050905090810190601f1680156102b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c76107e9565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103035781810151838201526020016102eb565b505050509050019250505060405180910390f35b61031f610892565b604080519115158252519081900360200190f35b61033b6108a2565b60408051918252519081900360200190f35b6103556108a8565b604080516001600160a01b039092168252519081900360200190f35b61031f610947565b610355610950565b6102c76004803603604081101561039757600080fd5b508035906020013561095f565b6103ac610a59565b6040805160ff9092168252519081900360200190f35b6102c7600480360360208110156103d857600080fd5b5035610a62565b6102c7610c88565b61033b600480360360408110156103fd57600080fd5b506001600160a01b038135169060200135610ce0565b61033b610da4565b61033b610daa565b610355610db0565b61031f6004803603606081101561044157600080fd5b508035906001600160a01b0360208201358116916040013516610dbf565b610355610df8565b6102c76004803603602081101561047d57600080fd5b50356001600160a01b0316610e07565b6102c7600480360360208110156104a357600080fd5b5035610e7e565b610355610eea565b61031f610ef9565b61031f600480360360608110156104d057600080fd5b506001600160a01b03813581169160208101359091169060400135610f02565b61024a611098565b61033b6110f3565b61033b6004803603602081101561051657600080fd5b503561114f565b6102c7611173565b6102c76004803603606081101561053b57600080fd5b50803590602081013590604001356111c9565b6102c76004803603602081101561056457600080fd5b503560ff166113ff565b61058b6004803603602081101561058457600080fd5b503561146d565b6040518080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156105d45781810151838201526020016105bc565b50505050905090810190601f1680156106015780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6102c7611523565b61063f6004803603602081101561062f57600080fd5b50356001600160a01b031661160d565b60405180878152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b031681526020018415151515815260200180602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156106c55781810151838201526020016106ad565b5050505090500197505050505050505060405180910390f35b61031f600480360360408110156106f457600080fd5b506001600160a01b03813581169160200135166116e0565b6103556116f7565b610355611706565b6107396004803603602081101561073257600080fd5b5035611715565b005b61024a61174b565b61031f6117a6565b6103556117b4565b6103556117c3565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107e15780601f106107b6576101008083540402835291602001916107e1565b820191906000526020600020905b8154815290600101906020018083116107c457829003601f168201915b505050505081565b604080516003808252608082019092526060918291906020820183803883395050601754825192935060ff169183915060009061082257fe5b60ff92831660209182029290920101526017548251610100909104909116908290600190811061084e57fe5b60ff9283166020918202929092010152601754825162010000909104909116908290600290811061087b57fe5b60ff90921660209283029190910190910152905090565b600554600160a01b900460ff1681565b60135481565b600e5460408051600160e01b6321f8a7210281527faae8817359f3dcb67d050f44f3e49f982e0359d90ca4b5f18569926304aaece6600482015290516000926001600160a01b0316916321f8a721916024808301926020929190829003018186803b15801561091657600080fd5b505afa15801561092a573d6000803e3d6000fd5b505050506040513d602081101561094057600080fd5b5051905090565b60145460ff1690565b600d546001600160a01b031681565b600e5460408051600160e51b630755f5e702815260008051602061181e8339815191526004820152602481018590526044810184905290516060926001600160a01b03169163eabebce0916064808301926000929190829003018186803b1580156109c957600080fd5b505afa1580156109dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610a0657600080fd5b810190808051600160201b811115610a1d57600080fd5b82016020810184811115610a3057600080fd5b81518560208202830111600160201b82111715610a4c57600080fd5b5090979650505050505050565b60085460ff1681565b600e5460408051600160e01b635948f73302815260008051602061181e83398151915260048201529051606092600092839285926001600160a01b031691635948f7339160248083019287929190829003018186803b158015610ac457600080fd5b505afa158015610ad8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610b0157600080fd5b810190808051600160201b811115610b1857600080fd5b82016020810184811115610b2b57600080fd5b81518560208202830111600160201b82111715610b4757600080fd5b5060009650909450505050505b8051821015610bc7576000610b7c828481518110610b6e57fe5b602002602001015187610ce0565b1115610b8d57600190920191610bbc565b6000818381518110610b9b57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b600190910190610b54565b606083604051908082528060200260200182016040528015610bf3578160200160208202803883390190505b50905060009350600092505b8151831015610c7f5760006001600160a01b0316828481518110610c1f57fe5b60200260200101516001600160a01b031614610c7457818381518110610c4157fe5b6020026020010151818581518110610c5557fe5b6001600160a01b03909216602092830291909101909101526001909301925b600190920191610bff565b95945050505050565b60606016805480602002602001604051908101604052809291908181526020018280548015610cd657602002820191906000526020600020905b815481526020019060010190808311610cc2575b5050505050905090565b6000601054821115610cf157600080fd5b6001600160a01b0383166000908152601c6020526040902073__TokenLib______________________________9063cc90f5de9084610d2f876117d7565b6040518463ffffffff1660e01b815260040180848152602001838152602001828152602001935050505060206040518083038186803b158015610d7157600080fd5b505af4158015610d85573d6000803e3d6000fd5b505050506040513d6020811015610d9b57600080fd5b50519392505050565b60105481565b600f5481565b600e546001600160a01b031681565b6001600160a01b038082166000908152601f6020908152604080832087845282528083209386168352929052205460ff165b9392505050565b600c546001600160a01b031681565b604080516002808252606080830184529283929190602083019080388339019050509050600160c21b6715539313d0d2d1510281600081518110610e4757fe5b602002602001018181525050600160d21b651313d0d2d1510281600181518110610e6d57fe5b602090810291909101015292915050565b6000818152601a6020908152604091829020805483518184028101840190945280845260609392830182828015610ede57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ec0575b50505050509050919050565b6009546001600160a01b031681565b60125460ff1681565b6000805b600160005260186020527ff3794665d3af9b6fb6f858b70185898134f96768ef31c325d52e04f0ac195a4d5481101561108d576001600090815260186020527ff3794665d3af9b6fb6f858b70185898134f96768ef31c325d52e04f0ac195a4d8054601992919084908110610f7757fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190206002015460ff600160a01b9091041661108557600160005260186020527ff3794665d3af9b6fb6f858b70185898134f96768ef31c325d52e04f0ac195a4d805482908110610fe557fe5b6000918252602091829020015460408051600160e01b638658b8b90281526001600160a01b03898116600483015288811660248301526044820188905291519190921692638658b8b99260648082019391829003018186803b15801561104a57600080fd5b505afa15801561105e573d6000803e3d6000fd5b505050506040513d602081101561107457600080fd5b505115611085576001915050610df1565b600101610f06565b506000949350505050565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107e15780601f106107b6576101008083540402835291602001916107e1565b600e5460408051600160e11b6317e4a5d302815260008051602061181e833981519152600482015290516000926001600160a01b031691632fc94ba6916024808301926020929190829003018186803b15801561091657600080fd5b600060105482111561116057600080fd5b506000908152601b602052604090205490565b60606015805480602002602001604051908101604052809291908181526020018280548015610cd65760200282019190600052602060002090815481526020019060010190808311610cc2575050505050905090565b600e5460408051600160e51b630755f5e702815260008051602061181e833981519152600482015260248101859052604481018490529051606092600092839285926001600160a01b03169163eabebce09160648083019287929190829003018186803b15801561123957600080fd5b505afa15801561124d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561127657600080fd5b810190808051600160201b81111561128d57600080fd5b820160208101848111156112a057600080fd5b81518560208202830111600160201b821117156112bc57600080fd5b5060009650909450505050505b805182101561133c5760006112f18284815181106112e357fe5b602002602001015189610ce0565b111561130257600190920191611331565b600081838151811061131057fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b6001909101906112c9565b606083604051908082528060200260200182016040528015611368578160200160208202803883390190505b50905060009350600092505b81518310156113f45760006001600160a01b031682848151811061139457fe5b60200260200101516001600160a01b0316146113e9578183815181106113b657fe5b60200260200101518185815181106113ca57fe5b6001600160a01b03909216602092830291909101909101526001909301925b600190920191611374565b979650505050505050565b60ff8116600090815260186020908152604091829020805483518184028101840190945280845260609392830182828015610ede576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610ec05750505050509050919050565b6000818152601d6020908152604080832080546001808301546002938401805486519381161561010002600019011694909404601f8101879004870283018701909552848252606096958695919291859183018282801561150f5780601f106114e45761010080835404028352916020019161150f565b820191906000526020600020905b8154815290600101906020018083116114f257829003601f168201915b505050505092509250925092509193909250565b600e5460408051600160e01b635948f73302815260008051602061181e833981519152600482015290516060926001600160a01b031691635948f733916024808301926000929190829003018186803b15801561157f57600080fd5b505afa158015611593573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156115bc57600080fd5b810190808051600160201b8111156115d357600080fd5b820160208101848111156115e657600080fd5b81518560208202830111600160201b8211171561160257600080fd5b509095945050505050565b6001600160a01b03818116600090815260196020908152604080832080546001820154600283015460068401546003909401805486518189028101890190975280875297988998899889986060988a989785169694851695600160a01b90950460ff16949390928491908301828280156116c457602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116116955790505b5050505050915095509550955095509550955091939550919395565b60006000196116ef83856117f2565b149392505050565b600a546001600160a01b031681565b600b546001600160a01b031681565b6040805182815290517f7e54bc788db3f781250853aaf56a46415cdb0cd27c06a4ab3d144aeccfcb7b1d9181900360200190a150565b6011805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107e15780601f106107b6576101008083540402835291602001916107e1565b601254610100900460ff1681565b6005546001600160a01b031681565b60085461010090046001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b0391821660009081526001602090815260408083209390941682529190915220549056fedf3a8dd24acdd05addfc6aeffef7574d2de3f844535ec91e8e0f3e45dba96731a165627a7a72305820381672aa2de8a6fdd60920b9dba363080a23caf7b8b18749268987e61bb913bf0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061023d5760003560e01c806377282b701161013b578063b2f5a54c116100b8578063d28a70471161007c578063d28a70471461071c578063d6abe1101461073b578063e45b813414610743578063e77772fe1461074b578063f77c4791146107535761023d565b8063b2f5a54c14610611578063b5de8d4c14610619578063b6363cf2146106de578063b95459e41461070c578063ce4dbdff146107145761023d565b8063981b24d0116100ff578063981b24d0146105005780639fa5f50b1461051d578063abe191c114610525578063ac90b4221461054e578063b10d6b411461056e5761023d565b806377282b70146104aa5780637a802c71146104b25780638658b8b9146104ba57806395d89b41146104f0578063960524e3146104f85761023d565b80633f553586116101c9578063660d0d671161018d578063660d0d67146104235780636d77cad61461042b5780636faa22a51461045f578063740ab8f414610467578063764387bd1461048d5761023d565b80633f553586146103c25780634c6041d3146103df5780634ee2cd7e146103e75780635488cc8014610413578063556f0dc71461041b5761023d565b80632c035b74116102105780632c035b741461034d5780632f1cae85146103715780632fb3b99d146103795780633052eed814610381578063313ce567146103a45761023d565b806306fdde03146102425780630d8e6e2c146102bf578063158ef93e146103175780631aab9a9f14610333575b600080fd5b61024a61075b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561028457818101518382015260200161026c565b50505050905090810190601f1680156102b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c76107e9565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103035781810151838201526020016102eb565b505050509050019250505060405180910390f35b61031f610892565b604080519115158252519081900360200190f35b61033b6108a2565b60408051918252519081900360200190f35b6103556108a8565b604080516001600160a01b039092168252519081900360200190f35b61031f610947565b610355610950565b6102c76004803603604081101561039757600080fd5b508035906020013561095f565b6103ac610a59565b6040805160ff9092168252519081900360200190f35b6102c7600480360360208110156103d857600080fd5b5035610a62565b6102c7610c88565b61033b600480360360408110156103fd57600080fd5b506001600160a01b038135169060200135610ce0565b61033b610da4565b61033b610daa565b610355610db0565b61031f6004803603606081101561044157600080fd5b508035906001600160a01b0360208201358116916040013516610dbf565b610355610df8565b6102c76004803603602081101561047d57600080fd5b50356001600160a01b0316610e07565b6102c7600480360360208110156104a357600080fd5b5035610e7e565b610355610eea565b61031f610ef9565b61031f600480360360608110156104d057600080fd5b506001600160a01b03813581169160208101359091169060400135610f02565b61024a611098565b61033b6110f3565b61033b6004803603602081101561051657600080fd5b503561114f565b6102c7611173565b6102c76004803603606081101561053b57600080fd5b50803590602081013590604001356111c9565b6102c76004803603602081101561056457600080fd5b503560ff166113ff565b61058b6004803603602081101561058457600080fd5b503561146d565b6040518080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156105d45781810151838201526020016105bc565b50505050905090810190601f1680156106015780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6102c7611523565b61063f6004803603602081101561062f57600080fd5b50356001600160a01b031661160d565b60405180878152602001866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b031681526020018415151515815260200180602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156106c55781810151838201526020016106ad565b5050505090500197505050505050505060405180910390f35b61031f600480360360408110156106f457600080fd5b506001600160a01b03813581169160200135166116e0565b6103556116f7565b610355611706565b6107396004803603602081101561073257600080fd5b5035611715565b005b61024a61174b565b61031f6117a6565b6103556117b4565b6103556117c3565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107e15780601f106107b6576101008083540402835291602001916107e1565b820191906000526020600020905b8154815290600101906020018083116107c457829003601f168201915b505050505081565b604080516003808252608082019092526060918291906020820183803883395050601754825192935060ff169183915060009061082257fe5b60ff92831660209182029290920101526017548251610100909104909116908290600190811061084e57fe5b60ff9283166020918202929092010152601754825162010000909104909116908290600290811061087b57fe5b60ff90921660209283029190910190910152905090565b600554600160a01b900460ff1681565b60135481565b600e5460408051600160e01b6321f8a7210281527faae8817359f3dcb67d050f44f3e49f982e0359d90ca4b5f18569926304aaece6600482015290516000926001600160a01b0316916321f8a721916024808301926020929190829003018186803b15801561091657600080fd5b505afa15801561092a573d6000803e3d6000fd5b505050506040513d602081101561094057600080fd5b5051905090565b60145460ff1690565b600d546001600160a01b031681565b600e5460408051600160e51b630755f5e702815260008051602061181e8339815191526004820152602481018590526044810184905290516060926001600160a01b03169163eabebce0916064808301926000929190829003018186803b1580156109c957600080fd5b505afa1580156109dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610a0657600080fd5b810190808051600160201b811115610a1d57600080fd5b82016020810184811115610a3057600080fd5b81518560208202830111600160201b82111715610a4c57600080fd5b5090979650505050505050565b60085460ff1681565b600e5460408051600160e01b635948f73302815260008051602061181e83398151915260048201529051606092600092839285926001600160a01b031691635948f7339160248083019287929190829003018186803b158015610ac457600080fd5b505afa158015610ad8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610b0157600080fd5b810190808051600160201b811115610b1857600080fd5b82016020810184811115610b2b57600080fd5b81518560208202830111600160201b82111715610b4757600080fd5b5060009650909450505050505b8051821015610bc7576000610b7c828481518110610b6e57fe5b602002602001015187610ce0565b1115610b8d57600190920191610bbc565b6000818381518110610b9b57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b600190910190610b54565b606083604051908082528060200260200182016040528015610bf3578160200160208202803883390190505b50905060009350600092505b8151831015610c7f5760006001600160a01b0316828481518110610c1f57fe5b60200260200101516001600160a01b031614610c7457818381518110610c4157fe5b6020026020010151818581518110610c5557fe5b6001600160a01b03909216602092830291909101909101526001909301925b600190920191610bff565b95945050505050565b60606016805480602002602001604051908101604052809291908181526020018280548015610cd657602002820191906000526020600020905b815481526020019060010190808311610cc2575b5050505050905090565b6000601054821115610cf157600080fd5b6001600160a01b0383166000908152601c6020526040902073__TokenLib______________________________9063cc90f5de9084610d2f876117d7565b6040518463ffffffff1660e01b815260040180848152602001838152602001828152602001935050505060206040518083038186803b158015610d7157600080fd5b505af4158015610d85573d6000803e3d6000fd5b505050506040513d6020811015610d9b57600080fd5b50519392505050565b60105481565b600f5481565b600e546001600160a01b031681565b6001600160a01b038082166000908152601f6020908152604080832087845282528083209386168352929052205460ff165b9392505050565b600c546001600160a01b031681565b604080516002808252606080830184529283929190602083019080388339019050509050600160c21b6715539313d0d2d1510281600081518110610e4757fe5b602002602001018181525050600160d21b651313d0d2d1510281600181518110610e6d57fe5b602090810291909101015292915050565b6000818152601a6020908152604091829020805483518184028101840190945280845260609392830182828015610ede57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ec0575b50505050509050919050565b6009546001600160a01b031681565b60125460ff1681565b6000805b600160005260186020527ff3794665d3af9b6fb6f858b70185898134f96768ef31c325d52e04f0ac195a4d5481101561108d576001600090815260186020527ff3794665d3af9b6fb6f858b70185898134f96768ef31c325d52e04f0ac195a4d8054601992919084908110610f7757fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190206002015460ff600160a01b9091041661108557600160005260186020527ff3794665d3af9b6fb6f858b70185898134f96768ef31c325d52e04f0ac195a4d805482908110610fe557fe5b6000918252602091829020015460408051600160e01b638658b8b90281526001600160a01b03898116600483015288811660248301526044820188905291519190921692638658b8b99260648082019391829003018186803b15801561104a57600080fd5b505afa15801561105e573d6000803e3d6000fd5b505050506040513d602081101561107457600080fd5b505115611085576001915050610df1565b600101610f06565b506000949350505050565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107e15780601f106107b6576101008083540402835291602001916107e1565b600e5460408051600160e11b6317e4a5d302815260008051602061181e833981519152600482015290516000926001600160a01b031691632fc94ba6916024808301926020929190829003018186803b15801561091657600080fd5b600060105482111561116057600080fd5b506000908152601b602052604090205490565b60606015805480602002602001604051908101604052809291908181526020018280548015610cd65760200282019190600052602060002090815481526020019060010190808311610cc2575050505050905090565b600e5460408051600160e51b630755f5e702815260008051602061181e833981519152600482015260248101859052604481018490529051606092600092839285926001600160a01b03169163eabebce09160648083019287929190829003018186803b15801561123957600080fd5b505afa15801561124d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561127657600080fd5b810190808051600160201b81111561128d57600080fd5b820160208101848111156112a057600080fd5b81518560208202830111600160201b821117156112bc57600080fd5b5060009650909450505050505b805182101561133c5760006112f18284815181106112e357fe5b602002602001015189610ce0565b111561130257600190920191611331565b600081838151811061131057fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b6001909101906112c9565b606083604051908082528060200260200182016040528015611368578160200160208202803883390190505b50905060009350600092505b81518310156113f45760006001600160a01b031682848151811061139457fe5b60200260200101516001600160a01b0316146113e9578183815181106113b657fe5b60200260200101518185815181106113ca57fe5b6001600160a01b03909216602092830291909101909101526001909301925b600190920191611374565b979650505050505050565b60ff8116600090815260186020908152604091829020805483518184028101840190945280845260609392830182828015610ede576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610ec05750505050509050919050565b6000818152601d6020908152604080832080546001808301546002938401805486519381161561010002600019011694909404601f8101879004870283018701909552848252606096958695919291859183018282801561150f5780601f106114e45761010080835404028352916020019161150f565b820191906000526020600020905b8154815290600101906020018083116114f257829003601f168201915b505050505092509250925092509193909250565b600e5460408051600160e01b635948f73302815260008051602061181e833981519152600482015290516060926001600160a01b031691635948f733916024808301926000929190829003018186803b15801561157f57600080fd5b505afa158015611593573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156115bc57600080fd5b810190808051600160201b8111156115d357600080fd5b820160208101848111156115e657600080fd5b81518560208202830111600160201b8211171561160257600080fd5b509095945050505050565b6001600160a01b03818116600090815260196020908152604080832080546001820154600283015460068401546003909401805486518189028101890190975280875297988998899889986060988a989785169694851695600160a01b90950460ff16949390928491908301828280156116c457602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116116955790505b5050505050915095509550955095509550955091939550919395565b60006000196116ef83856117f2565b149392505050565b600a546001600160a01b031681565b600b546001600160a01b031681565b6040805182815290517f7e54bc788db3f781250853aaf56a46415cdb0cd27c06a4ab3d144aeccfcb7b1d9181900360200190a150565b6011805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107e15780601f106107b6576101008083540402835291602001916107e1565b601254610100900460ff1681565b6005546001600160a01b031681565b60085461010090046001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b0391821660009081526001602090815260408083209390941682529190915220549056fedf3a8dd24acdd05addfc6aeffef7574d2de3f844535ec91e8e0f3e45dba96731a165627a7a72305820381672aa2de8a6fdd60920b9dba363080a23caf7b8b18749268987e61bb913bf0029",
  "sourceMap": "567:216:56:-;;;2918:38:165;;;-1:-1:-1;;2918:38:165;;;;;;3525:29;;;;;;2918:38;3525:29;;;567:216:56;5:2:-1;;;;30:1;27;20:12;5:2;567:216:56;;;;;;;",
  "deployedSourceMap": "567:216:56:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;567:216:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2159:18:165;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2159:18:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9362:293:162;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9362:293:162;;;;;;;;;;;;;;;;;2105:23:165;;;:::i;:::-;;;;;;;;;;;;;;;;;;3101:26;;;:::i;:::-;;;;;;;;;;;;;;;;5453:116:162;;;:::i;:::-;;;;-1:-1:-1;;;;;5453:116:162;;;;;;;;;;;;;;833:85;;;:::i;2562:29:165:-;;;:::i;6729:183:162:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6729:183:162;;;;;;;:::i;2211:21:165:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2023:751:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2023:751:162;;:::i;1050:111::-;;;:::i;5768:261::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5768:261:162;;;;;;;;:::i;2765:34:165:-;;;:::i;2694:26::-;;;:::i;2658:27::-;;;:::i;8743:203:162:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8743:203:162;;;-1:-1:-1;;;;;8743:203:162;;;;;;;;;;;;:::i;2532:23:165:-;;;:::i;9045:234:162:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9045:234:162;-1:-1:-1;;;;;9045:234:162;;:::i;4931:119::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4931:119:162;;:::i;2382:41:165:-;;;:::i;2918:38::-;;;:::i;7407:472:162:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7407:472:162;;;;;;;;;;;;;;;;;:::i;2184:20:165:-;;;:::i;1304:130:162:-;;;:::i;6194:195::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6194:195:162;;:::i;10462:103::-;;;:::i;3138:809::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3138:809:162;;;;;;;;;;;;:::i;5251:119::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5251:119:162;;;;:::i;10019:250::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10019:250:162;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10019:250:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1646:142;;;:::i;4307:430::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4307:430:162;-1:-1:-1;;;;;4307:430:162;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;4307:430:162;-1:-1:-1;;;;;4307:430:162;;;;;;-1:-1:-1;;;;;4307:430:162;-1:-1:-1;;;;;4307:430:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4307:430:162;;;;;;;;;;;;;;;;;;;;;;8197:165;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8197:165:162;;;;;;;;;;:::i;2430:37:165:-;;;:::i;2474:51::-;;;:::i;688:90:56:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;688:90:56;;:::i;:::-;;2831:26:165;;;:::i;3015:27::-;;;:::i;2071:::-;;;:::i;2348:25::-;;;:::i;2159:18::-;;;;;;;;;;;;;;;-1:-1:-1;;2159:18:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9362:293:162:-;9458:14;;;9470:1;9458:14;;;;;;;;;9406;;;;9458;;;;9406;;105:10:-1;9458:14:162;88:34:-1;-1:-1;;9496:20:162;:26;9483:10;;;;-1:-1:-1;9496:26:162;;;9483:10;;-1:-1:-1;9496:26:162;;9483:10;;;;:39;;;;:10;;;;;;;;;:39;9546:20;:26;9533:10;;9546:26;;;;;;;;9533:7;;9546:26;;9533:10;;;;;;:39;;;;:10;;;;;;;;;:39;9596:20;:26;9583:10;;9596:26;;;;;;;;9583:7;;9596:26;;9583:10;;;;;;:39;;;;:10;;;;;;;;;;;:39;9640:7;-1:-1:-1;9362:293:162;:::o;2105:23:165:-;;;-1:-1:-1;;;2105:23:165;;;;;:::o;3101:26::-;;;;:::o;5453:116:162:-;5531:9;;:30;;;-1:-1:-1;;;;;5531:30:162;;832:66:165;5531:30:162;;;;;;5504:7;;-1:-1:-1;;;;;5531:9:162;;:20;;:30;;;;;;;;;;;;;;:9;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;5531:30:162;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5531:30:162;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5531:30:162;;-1:-1:-1;5453:116:162;:::o;833:85::-;902:8;;;;833:85;:::o;2562:29:165:-;;;-1:-1:-1;;;;;2562:29:165;;:::o;6729:183:162:-;6843:9;;:61;;;-1:-1:-1;;;;;6843:61:162;;-1:-1:-1;;;;;;;;;;;6843:61:162;;;;;;;;;;;;;;;;;;6807:16;;-1:-1:-1;;;;;6843:9:162;;:33;;:61;;;;;:9;;:61;;;;;;;:9;:61;;;5:2:-1;;;;30:1;27;20:12;5:2;6843:61:162;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6843:61:162;;;;;;39:16:-1;36:1;17:17;2:54;101:4;6843:61:162;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;6843:61:162;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;6843:61:162;;6729:183;-1:-1:-1;;;;;;;6729:183:162:o;2211:21:165:-;;;;;;:::o;2023:751:162:-;2194:9;;:39;;;-1:-1:-1;;;;;2194:39:162;;-1:-1:-1;;;;;;;;;;;2194:39:162;;;;;;2092:16;;2121:13;;;;2092:16;;-1:-1:-1;;;;;2194:9:162;;:25;;:39;;;;;2121:13;;2194:39;;;;;;;:9;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;2194:39:162;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2194:39:162;;;;;;39:16:-1;36:1;17:17;2:54;101:4;2194:39:162;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;2194:39:162;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;2253:1:162;;-1:-1:-1;2194:39:162;;-1:-1:-1;;;;;2244:223:162;2260:9;:16;2256:1;:20;2244:223;;;2345:1;2302:40;2314:9;2324:1;2314:12;;;;;;;;;;;;;;2328:13;2302:11;:40::i;:::-;:44;2298:158;;;2367:7;;;;;2298:158;;;2438:1;2415:9;2425:1;2415:12;;;;;;;;;;;;;:25;-1:-1:-1;;;;;2415:25:162;;;-1:-1:-1;;;;;2415:25:162;;;;;2298:158;2278:3;;;;;2244:223;;;2477:24;2518:5;2504:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2504:20:162;;2477:47;;2543:1;2535:9;;2564:1;2560:5;;2555:187;2571:9;:16;2567:1;:20;2555:187;;;2637:1;-1:-1:-1;;;;;2613:26:162;:9;2623:1;2613:12;;;;;;;;;;;;;;-1:-1:-1;;;;;2613:26:162;;2609:122;;2677:9;2687:1;2677:12;;;;;;;;;;;;;;2660:7;2668:5;2660:14;;;;;;;;-1:-1:-1;;;;;2660:29:162;;;:14;;;;;;;;;;;:29;2708:7;;;;;2609:122;2589:3;;;;;2555:187;;;2759:7;2023:751;-1:-1:-1;;;;;2023:751:162:o;1050:111::-;1102:16;1138:15;1131:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:111;:::o;5768:261::-;5851:7;5896:19;;5879:13;:36;;5871:45;;;;;;-1:-1:-1;;;;;5954:29:162;;;;;;:18;:29;;;;;5934:8;;:19;;5985:13;6000:20;5973:9;6000;:20::i;:::-;5934:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5934:87:162;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5934:87:162;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5934:87:162;;5768:261;-1:-1:-1;;;5768:261:162:o;2765:34:165:-;;;;:::o;2694:26::-;;;;:::o;2658:27::-;;;-1:-1:-1;;;;;2658:27:165;;:::o;8743:203:162:-;-1:-1:-1;;;;;8883:32:162;;;8859:4;8883:32;;;:18;:32;;;;;;;;:44;;;;;;;;:55;;;;;;;;;;;;8743:203;;;;;;:::o;2532:23:165:-;;;-1:-1:-1;;;;;2532:23:165;;:::o;9045:234:162:-;9171:16;;;9185:1;9171:16;;;9116;9171;;;;;9116;;;9171;9185:1;9171:16;;;;;105:10:-1;9171:16:162;88:34:-1;136:17;;-1:-1;9171:16:162;9145:42;;-1:-1:-1;;;;;9198:6:162;9205:1;9198:9;;;;;;;;;;;;;:20;;;;;-1:-1:-1;;;;;9229:6:162;9236:1;9229:9;;;;;;;;;;;;;;;;;:18;9265:6;9045:234;-1:-1:-1;;9045:234:162:o;4931:119::-;5030:12;;;;:5;:12;;;;;;;;;5023:19;;;;;;;;;;;;;;;;;4994:16;;5023:19;;;5030:12;5023:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5023:19:162;;;;;;;;;;;;;;;;;;;;;;;4931:119;;;:::o;2382:41:165:-;;;-1:-1:-1;;;;;2382:41:165;;:::o;2918:38::-;;;;;;:::o;7407:472:162:-;7503:4;;7520:329;358:1:165;7544:23:162;;:7;:23;;;:30;7540:34;;7520:329;;;358:1:165;7601:41:162;7615:23;;;:7;:23;;;:26;;7601:13;;:41;7615:23;7639:1;;7615:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7615:26:162;7601:41;;;;;;;;;;;;:52;;;;-1:-1:-1;;;7601:52:162;;;;7596:242;;358:1:165;7697:23:162;;:7;:23;;;:26;;7721:1;;7697:26;;;;;;;;;;;;;;;;;7678:89;;;-1:-1:-1;;;;;7678:89:162;;-1:-1:-1;;;;;7678:89:162;;;;;;;;;;;;;;;;;;;;;;7697:26;;;;;7678:62;;:89;;;;;;;;;;;7697:26;7678:89;;;5:2:-1;;;;30:1;27;20:12;5:2;7678:89:162;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7678:89:162;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7678:89:162;7674:149;;;7799:4;7792:11;;;;;7674:149;7576:3;;7520:329;;;-1:-1:-1;7866:5:162;;7407:472;-1:-1:-1;;;;7407:472:162:o;2184:20:165:-;;;;;;;;;;;;;;;-1:-1:-1;;2184:20:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:130:162;1381:9;;:45;;;-1:-1:-1;;;;;1381:45:162;;-1:-1:-1;;;;;;;;;;;1381:45:162;;;;;;1354:7;;-1:-1:-1;;;;;1381:9:162;;:31;;:45;;;;;;;;;;;;;;:9;:45;;;5:2:-1;;;;30:1;27;20:12;6194:195:162;6262:7;6307:19;;6290:13;:36;;6282:45;;;;;;-1:-1:-1;6345:36:162;;;;:21;:36;;;;;;;6194:195::o;10462:103::-;10512:16;10548:9;10541:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10462:103;:::o;3138:809::-;3345:9;;:61;;;-1:-1:-1;;;;;3345:61:162;;-1:-1:-1;;;;;;;;;;;3345:61:162;;;;;;;;;;;;;;;;;;3243:16;;3272:13;;;;3243:16;;-1:-1:-1;;;;;3345:9:162;;:33;;:61;;;;;3272:13;;3345:61;;;;;;;:9;:61;;;5:2:-1;;;;30:1;27;20:12;5:2;3345:61:162;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3345:61:162;;;;;;39:16:-1;36:1;17:17;2:54;101:4;3345:61:162;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;3345:61:162;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;3426:1:162;;-1:-1:-1;3345:61:162;;-1:-1:-1;;;;;3417:223:162;3433:9;:16;3429:1;:20;3417:223;;;3518:1;3475:40;3487:9;3497:1;3487:12;;;;;;;;;;;;;;3501:13;3475:11;:40::i;:::-;:44;3471:158;;;3540:7;;;;;3471:158;;;3611:1;3588:9;3598:1;3588:12;;;;;;;;;;;;;:25;-1:-1:-1;;;;;3588:25:162;;;-1:-1:-1;;;;;3588:25:162;;;;;3471:158;3451:3;;;;;3417:223;;;3650:24;3691:5;3677:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;3677:20:162;;3650:47;;3716:1;3708:9;;3737:1;3733:5;;3728:187;3744:9;:16;3740:1;:20;3728:187;;;3810:1;-1:-1:-1;;;;;3786:26:162;:9;3796:1;3786:12;;;;;;;;;;;;;;-1:-1:-1;;;;;3786:26:162;;3782:122;;3850:9;3860:1;3850:12;;;;;;;;;;;;;;3833:7;3841:5;3833:14;;;;;;;;-1:-1:-1;;;;;3833:29:162;;;:14;;;;;;;;;;;:29;3881:7;;;;;3782:122;3762:3;;;;;3728:187;;;3932:7;3138:809;-1:-1:-1;;;;;;;3138:809:162:o;5251:119::-;5348:14;;;;;;;:7;:14;;;;;;;;;5341:21;;;;;;;;;;;;;;;;;5312:16;;5341:21;;;5348:14;5341:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5341:21:162;;;;;;;;;;;;;;;;;;;;;;5251:119;;;:::o;10019:250::-;10093:7;10144:17;;;:10;:17;;;;;;;;10180:25;;10220:30;;;;;10144:21;;;;10122:139;;;;;;;;;;-1:-1:-1;;10122:139:162;;;;;;;;;;;;;;;;;;;;;;;;10078:13;;10093:7;;;10220:30;;10122:139;10144:21;;10122:139;;10144:21;10122:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10019:250;;;;;:::o;1646:142::-;1741:9;;:39;;;-1:-1:-1;;;;;1741:39:162;;-1:-1:-1;;;;;;;;;;;1741:39:162;;;;;;1690:26;;-1:-1:-1;;;;;1741:9:162;;:25;;:39;;;;;:9;;:39;;;;;;;:9;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;1741:39:162;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1741:39:162;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1741:39:162;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;1741:39:162;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;1741:39:162;;1646:142;-1:-1:-1;;;;;1646:142:162:o;4307:430::-;-1:-1:-1;;;;;4456:22:162;;;4365:7;4456:22;;;:13;:22;;;;;;;;:27;;4498:29;;;;4542:36;;;;4690:28;;;;4641:34;;;;4434:295;;;;;;;;;;;;;;;;;4365:7;;;;;;;;4398:14;;4365:7;;4456:27;4498:29;;;4542:36;;;;-1:-1:-1;;;4593:33:162;;;;;;4641:34;4690:28;;4641:34;;4434:295;;;4641:34;4434:295;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4307:430;;;;;;;:::o;8197:165::-;8281:4;-1:-1:-1;;8306:35:162;8317:12;8331:9;8306:10;:35::i;:::-;:47;;8197:165;-1:-1:-1;;;8197:165:162:o;2430:37:165:-;;;-1:-1:-1;;;;;2430:37:165;;:::o;2474:51::-;;;-1:-1:-1;;;;;2474:51:165;;:::o;688:90:56:-;748:22;;;;;;;;;;;;;;;;;688:90;:::o;2831:26:165:-;;;;;;;;;;;;;;;-1:-1:-1;;2831:26:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3015:27;;;;;;;;;:::o;2071:::-;;;-1:-1:-1;;;;;2071:27:165;;:::o;2348:25::-;;;;;;-1:-1:-1;;;;;2348:25:165;;:::o;655:115:160:-;-1:-1:-1;;;;;742:20:160;715:7;742:20;;;;;;;;;;;;655:115::o;778:133::-;-1:-1:-1;;;;;879:15:160;;;852:7;879:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;778:133::o",
  "source": "pragma solidity 0.5.8;\r\n\r\nimport \"../tokens/STGetter.sol\";\r\n\r\n/**\r\n * @title Security Token contract (mock)\r\n * @notice SecurityToken is an ERC1400 token with added capabilities:\r\n * @notice - Implements the ERC1400 Interface\r\n * @notice - Transfers are restricted\r\n * @notice - Modules can be attached to it to control its behaviour\r\n * @notice - ST should not be deployed directly, but rather the SecurityTokenRegistry should be used\r\n * @notice - ST does not inherit from ISecurityToken due to:\r\n * @notice - https://github.com/ethereum/solidity/issues/4847\r\n */\r\ncontract MockSTGetter is STGetter {\r\n    using SafeMath for uint256;\r\n\r\n    event UpgradeEvent(uint256 _upgrade);\r\n\r\n    function newGetter(uint256 _upgrade) public {\r\n        emit UpgradeEvent(_upgrade);\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:/mspace/polymath-core/contracts/mocks/MockSTGetter.sol",
  "ast": {
    "absolutePath": "/C/mspace/polymath-core/contracts/mocks/MockSTGetter.sol",
    "exportedSymbols": {
      "MockSTGetter": [
        22118
      ]
    },
    "id": 22119,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22097,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:56"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/tokens/STGetter.sol",
        "file": "../tokens/STGetter.sol",
        "id": 22098,
        "nodeType": "ImportDirective",
        "scope": 22119,
        "sourceUnit": 54974,
        "src": "26:32:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22099,
              "name": "STGetter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 54973,
              "src": "592:8:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_STGetter_$54973",
                "typeString": "contract STGetter"
              }
            },
            "id": 22100,
            "nodeType": "InheritanceSpecifier",
            "src": "592:8:56"
          }
        ],
        "contractDependencies": [
          53589,
          54973,
          57808
        ],
        "contractKind": "contract",
        "documentation": "@title Security Token contract (mock)\r\n@notice SecurityToken is an ERC1400 token with added capabilities:\r\n@notice - Implements the ERC1400 Interface\r\n@notice - Transfers are restricted\r\n@notice - Modules can be attached to it to control its behaviour\r\n@notice - ST should not be deployed directly, but rather the SecurityTokenRegistry should be used\r\n@notice - ST does not inherit from ISecurityToken due to:\r\n@notice - https://github.com/ethereum/solidity/issues/4847\r",
        "fullyImplemented": true,
        "id": 22118,
        "linearizedBaseContracts": [
          22118,
          54973,
          57808,
          53589
        ],
        "name": "MockSTGetter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22103,
            "libraryName": {
              "contractScope": null,
              "id": 22101,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 58086,
              "src": "614:8:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$58086",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "608:27:56",
            "typeName": {
              "id": 22102,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "627:7:56",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 22107,
            "name": "UpgradeEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22105,
                  "indexed": false,
                  "name": "_upgrade",
                  "nodeType": "VariableDeclaration",
                  "scope": 22107,
                  "src": "662:16:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "661:18:56"
            },
            "src": "643:37:56"
          },
          {
            "body": {
              "id": 22116,
              "nodeType": "Block",
              "src": "732:46:56",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22113,
                        "name": "_upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22109,
                        "src": "761:8:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22112,
                      "name": "UpgradeEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22107,
                      "src": "748:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 22114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:22:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22115,
                  "nodeType": "EmitStatement",
                  "src": "743:27:56"
                }
              ]
            },
            "documentation": null,
            "id": 22117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newGetter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22109,
                  "name": "_upgrade",
                  "nodeType": "VariableDeclaration",
                  "scope": 22117,
                  "src": "707:16:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "706:18:56"
            },
            "returnParameters": {
              "id": 22111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "732:0:56"
            },
            "scope": 22118,
            "src": "688:90:56",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 22119,
        "src": "567:216:56"
      }
    ],
    "src": "0:785:56"
  },
  "legacyAST": {
    "absolutePath": "/C/mspace/polymath-core/contracts/mocks/MockSTGetter.sol",
    "exportedSymbols": {
      "MockSTGetter": [
        22118
      ]
    },
    "id": 22119,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22097,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:56"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/tokens/STGetter.sol",
        "file": "../tokens/STGetter.sol",
        "id": 22098,
        "nodeType": "ImportDirective",
        "scope": 22119,
        "sourceUnit": 54974,
        "src": "26:32:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22099,
              "name": "STGetter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 54973,
              "src": "592:8:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_STGetter_$54973",
                "typeString": "contract STGetter"
              }
            },
            "id": 22100,
            "nodeType": "InheritanceSpecifier",
            "src": "592:8:56"
          }
        ],
        "contractDependencies": [
          53589,
          54973,
          57808
        ],
        "contractKind": "contract",
        "documentation": "@title Security Token contract (mock)\r\n@notice SecurityToken is an ERC1400 token with added capabilities:\r\n@notice - Implements the ERC1400 Interface\r\n@notice - Transfers are restricted\r\n@notice - Modules can be attached to it to control its behaviour\r\n@notice - ST should not be deployed directly, but rather the SecurityTokenRegistry should be used\r\n@notice - ST does not inherit from ISecurityToken due to:\r\n@notice - https://github.com/ethereum/solidity/issues/4847\r",
        "fullyImplemented": true,
        "id": 22118,
        "linearizedBaseContracts": [
          22118,
          54973,
          57808,
          53589
        ],
        "name": "MockSTGetter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22103,
            "libraryName": {
              "contractScope": null,
              "id": 22101,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 58086,
              "src": "614:8:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$58086",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "608:27:56",
            "typeName": {
              "id": 22102,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "627:7:56",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 22107,
            "name": "UpgradeEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22105,
                  "indexed": false,
                  "name": "_upgrade",
                  "nodeType": "VariableDeclaration",
                  "scope": 22107,
                  "src": "662:16:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "661:18:56"
            },
            "src": "643:37:56"
          },
          {
            "body": {
              "id": 22116,
              "nodeType": "Block",
              "src": "732:46:56",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22113,
                        "name": "_upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22109,
                        "src": "761:8:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22112,
                      "name": "UpgradeEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22107,
                      "src": "748:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 22114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:22:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22115,
                  "nodeType": "EmitStatement",
                  "src": "743:27:56"
                }
              ]
            },
            "documentation": null,
            "id": 22117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newGetter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22109,
                  "name": "_upgrade",
                  "nodeType": "VariableDeclaration",
                  "scope": 22117,
                  "src": "707:16:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "706:18:56"
            },
            "returnParameters": {
              "id": 22111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "732:0:56"
            },
            "scope": 22118,
            "src": "688:90:56",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 22119,
        "src": "567:216:56"
      }
    ],
    "src": "0:785:56"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xedc6007cc44783a48ceb845386592c8d22e6e21f3acd887104ba49340ae8cc5d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_types",
              "type": "uint8[]"
            },
            {
              "indexed": false,
              "name": "_module",
              "type": "address"
            }
          ],
          "name": "ModuleUpgraded",
          "type": "event",
          "signature": "0xedc6007cc44783a48ceb845386592c8d22e6e21f3acd887104ba49340ae8cc5d"
        },
        "0x78914da53c30c0667830d562877caed5c20adc645b8557fa64336c22a9b8ece6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_types",
              "type": "uint8[]"
            },
            {
              "indexed": false,
              "name": "_module",
              "type": "address"
            }
          ],
          "name": "ModuleArchived",
          "type": "event",
          "signature": "0x78914da53c30c0667830d562877caed5c20adc645b8557fa64336c22a9b8ece6"
        },
        "0xe69e438aa3b4b943ac4c807820403a6e5815b8fbb7fccfac629fce87ff6d430d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_types",
              "type": "uint8[]"
            },
            {
              "indexed": false,
              "name": "_module",
              "type": "address"
            }
          ],
          "name": "ModuleUnarchived",
          "type": "event",
          "signature": "0xe69e438aa3b4b943ac4c807820403a6e5815b8fbb7fccfac629fce87ff6d430d"
        },
        "0xf4e9f735975718dce0ac83fb73f88a1b19a48186af0f6348c04c6229eb4b86a0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_types",
              "type": "uint8[]"
            },
            {
              "indexed": false,
              "name": "_module",
              "type": "address"
            }
          ],
          "name": "ModuleRemoved",
          "type": "event",
          "signature": "0xf4e9f735975718dce0ac83fb73f88a1b19a48186af0f6348c04c6229eb4b86a0"
        },
        "0xa00a1c33ebb7433724919cb1059328c16265f935ef84a13442045da3e81c0ccc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_moduleTypes",
              "type": "uint8[]"
            },
            {
              "indexed": false,
              "name": "_module",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_oldBudget",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_budget",
              "type": "uint256"
            }
          ],
          "name": "ModuleBudgetChanged",
          "type": "event",
          "signature": "0xa00a1c33ebb7433724919cb1059328c16265f935ef84a13442045da3e81c0ccc"
        },
        "0xb4c22d60cd550a815744f04e3ff5278bf19684565ee00e2b084041b6024bd6f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_name",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "_uri",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_documentHash",
              "type": "bytes32"
            }
          ],
          "name": "DocumentUpdated",
          "type": "event",
          "signature": "0xb4c22d60cd550a815744f04e3ff5278bf19684565ee00e2b084041b6024bd6f6"
        },
        "0x3d9bba27d3e360d8c80645beed7e991454a8271bf6f269a24f7782be0f0d0654": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_name",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "_uri",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_documentHash",
              "type": "bytes32"
            }
          ],
          "name": "DocumentRemoved",
          "type": "event",
          "signature": "0x3d9bba27d3e360d8c80645beed7e991454a8271bf6f269a24f7782be0f0d0654"
        }
      },
      "links": {
        "TokenLib": "0x7F6d9eAd07394807D4C3d490eb593016BFe37241"
      }
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-05T22:53:45.016Z",
  "devdoc": {
    "methods": {
      "balanceOfAt(address,uint256)": {
        "params": {
          "_checkpointId": "Checkpoint ID to query as of\r",
          "_investor": "Investor to query balance for\r"
        }
      },
      "checkPermission(address,address,bytes32)": {
        "details": "Note that IModule withPerm will allow ST owner all permissions anyway\rthis allows individual modules to override this logic if needed (to not allow ST owner all permissions)\r",
        "params": {
          "_delegate": "address of delegate\r",
          "_module": "address of PermissionManager module\r",
          "_perm": "the permissions\r"
        },
        "return": "success\r"
      },
      "getAllDocuments()": {
        "return": "bytes32 List of all documents names present in the contract.\r"
      },
      "getCheckpointTimes()": {
        "return": "List of checkpoint times\r"
      },
      "getDocument(bytes32)": {
        "params": {
          "_name": "Name of the document\r"
        },
        "return": "string The URI associated with the document.\rbytes32 The hash (of the contents) of the document.\ruint256 the timestamp at which the document was last modified.\r"
      },
      "getInvestorCount()": {
        "return": "Investor count\r"
      },
      "getInvestors()": {
        "return": "list of addresses\r"
      },
      "getInvestorsAt(uint256)": {
        "params": {
          "_checkpointId": "Checkpoint id at which investor list is to be populated\r"
        },
        "return": "list of investors\r"
      },
      "getInvestorsSubsetAt(uint256,uint256,uint256)": {
        "params": {
          "_checkpointId": "Checkpoint id at which investor list is to be populated\r",
          "_end": "Position of investor to stop iteration at\r",
          "_start": "Position of investor to start iteration from\r"
        },
        "return": "list of investors\r"
      },
      "getModule(address)": {
        "params": {
          "_module": "address of the module\r"
        },
        "return": "bytes32 name\raddress module address\raddress module factory address\rbool module archived\ruint8 array of module types\rbytes32 module label\r"
      },
      "getModulesByName(bytes32)": {
        "params": {
          "_name": "name of the module\r"
        },
        "return": "address[] list of modules with this name\r"
      },
      "getModulesByType(uint8)": {
        "params": {
          "_type": "type of the module\r"
        },
        "return": "address[] list of modules with this type\r"
      },
      "isIssuable()": {
        "details": "If a token returns FALSE for `isIssuable()` then it MUST always return FALSE in the future.\r If a token returns FALSE for `isIssuable()` then it MUST never allow additional tokens to be issued.\r",
        "return": "bool `true` signifies the minting is allowed. While `false` denotes the end of minting\r"
      },
      "isOperator(address,address)": {
        "params": {
          "_operator": "The operator to check\r",
          "_tokenHolder": "The token holder to check\r"
        },
        "return": "Whether the `_operator` is an operator for all partitions of `_tokenHolder`\r"
      },
      "isOperatorForPartition(bytes32,address,address)": {
        "params": {
          "_operator": "The operator to check\r",
          "_partition": "The partition to check\r",
          "_tokenHolder": "The token holder to check\r"
        },
        "return": "Whether the `_operator` is an operator for a specified partition of `_tokenHolder`\r"
      },
      "iterateInvestors(uint256,uint256)": {
        "params": {
          "_end": "Position of investor to stop iteration at\r",
          "_start": "Position of investor to start iteration from\r"
        },
        "return": "list of investors\r"
      },
      "partitionsOf(address)": {
        "return": "List of partitions\r"
      },
      "totalSupplyAt(uint256)": {
        "params": {
          "_checkpointId": "Checkpoint ID to query\r"
        },
        "return": "uint256\r"
      }
    },
    "title": "Security Token contract (mock)\r"
  },
  "userdoc": {
    "methods": {
      "balanceOfAt(address,uint256)": {
        "notice": "Queries balances as of a defined checkpoint\r"
      },
      "checkPermission(address,address,bytes32)": {
        "notice": "Validate permissions with PermissionManager if it exists, If no Permission return false\r"
      },
      "getAllDocuments()": {
        "notice": "Used to retrieve a full list of documents attached to the smart contract.\r"
      },
      "getCheckpointTimes()": {
        "notice": "Gets list of times that checkpoints were created\r"
      },
      "getDocument(bytes32)": {
        "notice": "Used to return the details of a document with a known name (`bytes32`).\r"
      },
      "getInvestorCount()": {
        "notice": "Returns the count of address that were added as (potential) investors\r"
      },
      "getInvestors()": {
        "notice": "returns an array of investors\r NB - this length may differ from investorCount as it contains all investors that ever held tokens\r"
      },
      "getInvestorsAt(uint256)": {
        "notice": "returns an array of investors with non zero balance at a given checkpoint\r"
      },
      "getInvestorsSubsetAt(uint256,uint256,uint256)": {
        "notice": "returns an array of investors with non zero balance at a given checkpoint\r"
      },
      "getModule(address)": {
        "notice": "Returns the data associated to a module\r"
      },
      "getModulesByName(bytes32)": {
        "notice": "Returns a list of modules that match the provided name\r"
      },
      "getModulesByType(uint8)": {
        "notice": "Returns a list of modules that match the provided module type\r"
      },
      "getTreasuryWallet()": {
        "notice": "use to return the global treasury wallet\r"
      },
      "getVersion()": {
        "notice": "Returns the version of the SecurityToken\r"
      },
      "isIssuable()": {
        "notice": "A security token issuer can specify that issuance has finished for the token\r (i.e. no new tokens can be minted or issued).\r"
      },
      "isOperator(address,address)": {
        "notice": "Determines whether `_operator` is an operator for all partitions of `_tokenHolder`\r"
      },
      "isOperatorForPartition(bytes32,address,address)": {
        "notice": "Determines whether `_operator` is an operator for a specified partition of `_tokenHolder`\r"
      },
      "iterateInvestors(uint256,uint256)": {
        "notice": "generates subset of investors\r NB - can be used in batches if investor list is large. start and end both are included in array.\r"
      },
      "partitionsOf(address)": {
        "notice": "Return all partitions\r"
      },
      "totalSupplyAt(uint256)": {
        "notice": "Queries totalSupply as of a defined checkpoint\r"
      }
    },
    "notice": "SecurityToken is an ERC1400 token with added capabilities:\r- Implements the ERC1400 Interface\r- Transfers are restricted\r- Modules can be attached to it to control its behaviour\r- ST should not be deployed directly, but rather the SecurityTokenRegistry should be used\r- ST does not inherit from ISecurityToken due to:\r- https://github.com/ethereum/solidity/issues/4847\r"
  }
}