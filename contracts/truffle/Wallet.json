{
  "contractName": "Wallet",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "reclaimETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getInitFunction",
      "outputs": [
        {
          "name": "initFunction",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ADMIN",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "polyToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenContract",
          "type": "address"
        }
      ],
      "name": "reclaimERC20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "OPERATOR",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPermissions",
      "outputs": [
        {
          "name": "permissions",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDataStore",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpause",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"reclaimETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInitFunction\",\"outputs\":[{\"name\":\"initFunction\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"polyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"reclaimERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPERATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"securityToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPermissions\",\"outputs\":[{\"name\":\"permissions\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDataStore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"abstract contract\\r\",\"methods\":{\"reclaimERC20(address)\":{\"details\":\"We duplicate here due to the overriden owner & onlyOwner\\r\",\"params\":{\"_tokenContract\":\"The address of the token contract\\r\"}},\"reclaimETH()\":{\"details\":\"We duplicate here due to the overriden owner & onlyOwner\\r\"}},\"title\":\"Interface to be implemented by all Wallet modules\\r\"},\"userdoc\":{\"methods\":{\"getDataStore()\":{\"notice\":\"used to return the data store address of securityToken\\r\"},\"getInitFunction()\":{\"notice\":\"This function returns the signature of configure function\\r\"},\"getPermissions()\":{\"notice\":\"Return the permission flags that are associated with a module\\r\"},\"pause()\":{\"notice\":\"Pause (overridden function)\\r\"},\"reclaimERC20(address)\":{\"notice\":\"Reclaims ERC20Basic compatible tokens\\r\"},\"reclaimETH()\":{\"notice\":\"Reclaims ETH\\r\"},\"unpause()\":{\"notice\":\"Unpause (overridden function)\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/C/mspace/polymath-core/contracts/modules/Wallet/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/mspace/polymath-core/contracts/Pausable.sol\":{\"keccak256\":\"0x1532ed18c39de5d1fd35a244895d495d444566146125e0587d8e536337b68a49\",\"urls\":[\"bzzr://6f570268839a2980c2edf1200ca406ba7faffa5c4c726fa5972c411470636163\"]},\"/C/mspace/polymath-core/contracts/interfaces/ICheckPermission.sol\":{\"keccak256\":\"0xda83163f6d68db9b79ef8164d75cee0ceb542b8fdfda16127fc301c4ca9acd69\",\"urls\":[\"bzzr://0332bc3660b0e5059de7f20addfc495c18e3b532ebe2b6f025d0f9d7c35ca5a7\"]},\"/C/mspace/polymath-core/contracts/interfaces/IDataStore.sol\":{\"keccak256\":\"0xb41b686a022dcc47c39327aa32311fab47ae958cb798bb3f08cf44792db398fe\",\"urls\":[\"bzzr://034481827f48714e62cb1f7685e72ef0533cb7b5991da0232a67106e0cb1ed5c\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModule.sol\":{\"keccak256\":\"0xbe5b025f519bd373776ae04da7c99e5baeecc51ae5cfd56e304ccf65fb743f9f\",\"urls\":[\"bzzr://6ff0aa2de2d6b1a9801a7f3baa2500326cb94702c5a30ff3adbbcae060b14413\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModuleFactory.sol\":{\"keccak256\":\"0x233b5044aafc5a57bff374d32be347b5f58e0f7b4194084f5ac812963cee108b\",\"urls\":[\"bzzr://6d78d7157910cab1a9544e09476b2b96c23ec2fedc1c8c2ae12c755e0454b99e\"]},\"/C/mspace/polymath-core/contracts/interfaces/ISecurityToken.sol\":{\"keccak256\":\"0x3cf35b60d39aa6e45f9fdca61d1f9baeecbf91647dce9df7e61b4f1ae603d684\",\"urls\":[\"bzzr://5b51ef4a80ff96a6c53e29b7e342640faa3268f3679657bd3e28d2bf7f4f2e24\"]},\"/C/mspace/polymath-core/contracts/modules/Module.sol\":{\"keccak256\":\"0xb49b9a147ef1aea5f62b436a42b078bf6139fede6056d9979f706a646ff64a3c\",\"urls\":[\"bzzr://a146773b975c1f96e3357d8b754490544e98de97515d347c50f5043ac182e0b1\"]},\"/C/mspace/polymath-core/contracts/modules/Wallet/Wallet.sol\":{\"keccak256\":\"0x3f6d009ba794bd05ed90ec38cc994f84fcd252cc3123baddf833efcc49a4a189\",\"urls\":[\"bzzr://ec1cf65e273cd2611ec4451258a2890441c50c300b01aa3e44634c14bfe15cfe\"]},\"/C/mspace/polymath-core/contracts/storage/modules/ModuleStorage.sol\":{\"keccak256\":\"0xd65d5566179b3e69a8cf490312df6eeaab33a985cf04403f82a00e8ce23ab9a7\",\"urls\":[\"bzzr://931c9fd648267e95414b95d7c055a3477131c4815295bd0d37b8af9c2f00ddac\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.8;\r\n\r\nimport \"../Module.sol\";\r\n\r\n/**\r\n * @title Interface to be implemented by all Wallet modules\r\n * @dev abstract contract\r\n */\r\ncontract Wallet is Module {\r\n\r\n}\r\n",
  "sourcePath": "C:\\mspace\\polymath-core\\contracts\\modules\\Wallet\\Wallet.sol",
  "ast": {
    "absolutePath": "/C/mspace/polymath-core/contracts/modules/Wallet/Wallet.sol",
    "exportedSymbols": {
      "Wallet": [
        51235
      ]
    },
    "id": 51236,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 51231,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:145"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/modules/Module.sol",
        "file": "../Module.sol",
        "id": 51232,
        "nodeType": "ImportDirective",
        "scope": 51236,
        "sourceUnit": 31061,
        "src": "26:23:145",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 51233,
              "name": "Module",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31060,
              "src": "170:6:145",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Module_$31060",
                "typeString": "contract Module"
              }
            },
            "id": 51234,
            "nodeType": "InheritanceSpecifier",
            "src": "170:6:145"
          }
        ],
        "contractDependencies": [
          1769,
          13966,
          31060,
          53487
        ],
        "contractKind": "contract",
        "documentation": "@title Interface to be implemented by all Wallet modules\r\n@dev abstract contract\r",
        "fullyImplemented": false,
        "id": 51235,
        "linearizedBaseContracts": [
          51235,
          31060,
          1769,
          53487,
          13966
        ],
        "name": "Wallet",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 51236,
        "src": "151:32:145"
      }
    ],
    "src": "0:185:145"
  },
  "legacyAST": {
    "absolutePath": "/C/mspace/polymath-core/contracts/modules/Wallet/Wallet.sol",
    "exportedSymbols": {
      "Wallet": [
        51235
      ]
    },
    "id": 51236,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 51231,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:145"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/modules/Module.sol",
        "file": "../Module.sol",
        "id": 51232,
        "nodeType": "ImportDirective",
        "scope": 51236,
        "sourceUnit": 31061,
        "src": "26:23:145",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 51233,
              "name": "Module",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31060,
              "src": "170:6:145",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Module_$31060",
                "typeString": "contract Module"
              }
            },
            "id": 51234,
            "nodeType": "InheritanceSpecifier",
            "src": "170:6:145"
          }
        ],
        "contractDependencies": [
          1769,
          13966,
          31060,
          53487
        ],
        "contractKind": "contract",
        "documentation": "@title Interface to be implemented by all Wallet modules\r\n@dev abstract contract\r",
        "fullyImplemented": false,
        "id": 51235,
        "linearizedBaseContracts": [
          51235,
          31060,
          1769,
          53487,
          13966
        ],
        "name": "Wallet",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 51236,
        "src": "151:32:145"
      }
    ],
    "src": "0:185:145"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-05T22:52:46.924Z",
  "devdoc": {
    "details": "abstract contract\r",
    "methods": {
      "reclaimERC20(address)": {
        "details": "We duplicate here due to the overriden owner & onlyOwner\r",
        "params": {
          "_tokenContract": "The address of the token contract\r"
        }
      },
      "reclaimETH()": {
        "details": "We duplicate here due to the overriden owner & onlyOwner\r"
      }
    },
    "title": "Interface to be implemented by all Wallet modules\r"
  },
  "userdoc": {
    "methods": {
      "getDataStore()": {
        "notice": "used to return the data store address of securityToken\r"
      },
      "getInitFunction()": {
        "notice": "This function returns the signature of configure function\r"
      },
      "getPermissions()": {
        "notice": "Return the permission flags that are associated with a module\r"
      },
      "pause()": {
        "notice": "Pause (overridden function)\r"
      },
      "reclaimERC20(address)": {
        "notice": "Reclaims ERC20Basic compatible tokens\r"
      },
      "reclaimETH()": {
        "notice": "Reclaims ETH\r"
      },
      "unpause()": {
        "notice": "Unpause (overridden function)\r"
      }
    }
  }
}