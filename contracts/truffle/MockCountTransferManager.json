{
  "contractName": "MockCountTransferManager",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "reclaimETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getInitFunction",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxHolderCount",
          "type": "uint256"
        }
      ],
      "name": "configure",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_partition",
          "type": "bytes32"
        },
        {
          "name": "_tokenHolder",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getTokensByPartition",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ADMIN",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "executeTransfer",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "someValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "UNLOCKED",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "polyToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenContract",
          "type": "address"
        }
      ],
      "name": "reclaimERC20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "OPERATOR",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "LOCKED",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxHolderCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPermissions",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxHolderCount",
          "type": "uint256"
        }
      ],
      "name": "changeHolderCount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "verifyTransfer",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDataStore",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_securityToken",
          "type": "address"
        },
        {
          "name": "_polyToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_someData",
          "type": "uint256"
        }
      ],
      "name": "Upgrader",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_oldHolderCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_newHolderCount",
          "type": "uint256"
        }
      ],
      "name": "ModifyHolderCount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpause",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_someData",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "newFunction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"reclaimETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInitFunction\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"newFunction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxHolderCount\",\"type\":\"uint256\"}],\"name\":\"configure\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_partition\",\"type\":\"bytes32\"},{\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTokensByPartition\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"executeTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"someValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UNLOCKED\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"polyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"reclaimERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPERATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LOCKED\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxHolderCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"securityToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPermissions\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxHolderCount\",\"type\":\"uint256\"}],\"name\":\"changeHolderCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"verifyTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_someData\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDataStore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_securityToken\",\"type\":\"address\"},{\"name\":\"_polyToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_someData\",\"type\":\"uint256\"}],\"name\":\"Upgrader\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldHolderCount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newHolderCount\",\"type\":\"uint256\"}],\"name\":\"ModifyHolderCount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"changeHolderCount(uint256)\":{\"params\":{\"_maxHolderCount\":\"is the new maximum amount of token holders\\r\"}},\"configure(uint256)\":{\"params\":{\"_maxHolderCount\":\"Maximum no. of holders this module allows the SecurityToken to have\\r\"}},\"constructor\":{\"params\":{\"_securityToken\":\"Address of the security token\\r\"}},\"executeTransfer(address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount to send\\r\",\"_from\":\"Address of the sender\\r\",\"_to\":\"Address of the receiver\\r\"}},\"getTokensByPartition(bytes32,address,uint256)\":{\"details\":\"returning the balance of token holder against the UNLOCKED partition. \\r This condition is valid only when the base contract doesn't implement the\\r `getTokensByPartition()` function.  \\r\"},\"reclaimERC20(address)\":{\"details\":\"We duplicate here due to the overriden owner & onlyOwner\\r\",\"params\":{\"_tokenContract\":\"The address of the token contract\\r\"}},\"reclaimETH()\":{\"details\":\"We duplicate here due to the overriden owner & onlyOwner\\r\"},\"verifyTransfer(address,address,uint256,bytes)\":{\"details\":\"module.verifyTransfer is called by SecToken.canTransfer and does not receive the updated holderCount therefore\\r     verifyTransfer has to manually account for pot. tokenholder changes (by mimicking TokenLib.adjustInvestorCount).\\r     module.executeTransfer is called by SecToken.transfer|issue|others and receives an updated holderCount \\r     as sectoken calls TokenLib.adjustInvestorCount before executeTransfer.\\r\",\"params\":{\"_amount\":\"Amount to send\\r\",\"_from\":\"Address of the sender\\r\",\"_to\":\"Address of the receiver\\r\"}}},\"title\":\"Transfer Manager for limiting maximum number of token holders\\r\"},\"userdoc\":{\"methods\":{\"changeHolderCount(uint256)\":{\"notice\":\"Sets the cap for the amount of token holders there can be\\r\"},\"configure(uint256)\":{\"notice\":\"Used to initialize the variables of the contract\\r\"},\"constructor\":\"Constructor\\r\",\"executeTransfer(address,address,uint256,bytes)\":{\"notice\":\"Used to verify the transfer transaction and prevent a transfer if it passes the allowed amount of token holders\\r\"},\"getDataStore()\":{\"notice\":\"used to return the data store address of securityToken\\r\"},\"getInitFunction()\":{\"notice\":\"This function returns the signature of configure function\\r\"},\"getPermissions()\":{\"notice\":\"Returns the permissions flag that are associated with CountTransferManager\\r\"},\"getTokensByPartition(bytes32,address,uint256)\":{\"notice\":\"return the amount of tokens for a given user as per the partition\\r\"},\"pause()\":{\"notice\":\"Pause (overridden function)\\r\"},\"reclaimERC20(address)\":{\"notice\":\"Reclaims ERC20Basic compatible tokens\\r\"},\"reclaimETH()\":{\"notice\":\"Reclaims ETH\\r\"},\"unpause()\":{\"notice\":\"Unpause (overridden function)\\r\"},\"verifyTransfer(address,address,uint256,bytes)\":{\"notice\":\"Used to verify the transfer transaction and prevent a transfer if it passes the allowed amount of token holders\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/C/mspace/polymath-core/contracts/mocks/MockCountTransferManager.sol\":\"MockCountTransferManager\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/mspace/polymath-core/contracts/Pausable.sol\":{\"keccak256\":\"0x1532ed18c39de5d1fd35a244895d495d444566146125e0587d8e536337b68a49\",\"urls\":[\"bzzr://6f570268839a2980c2edf1200ca406ba7faffa5c4c726fa5972c411470636163\"]},\"/C/mspace/polymath-core/contracts/interfaces/ICheckPermission.sol\":{\"keccak256\":\"0xda83163f6d68db9b79ef8164d75cee0ceb542b8fdfda16127fc301c4ca9acd69\",\"urls\":[\"bzzr://0332bc3660b0e5059de7f20addfc495c18e3b532ebe2b6f025d0f9d7c35ca5a7\"]},\"/C/mspace/polymath-core/contracts/interfaces/IDataStore.sol\":{\"keccak256\":\"0xb41b686a022dcc47c39327aa32311fab47ae958cb798bb3f08cf44792db398fe\",\"urls\":[\"bzzr://034481827f48714e62cb1f7685e72ef0533cb7b5991da0232a67106e0cb1ed5c\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModule.sol\":{\"keccak256\":\"0xbe5b025f519bd373776ae04da7c99e5baeecc51ae5cfd56e304ccf65fb743f9f\",\"urls\":[\"bzzr://6ff0aa2de2d6b1a9801a7f3baa2500326cb94702c5a30ff3adbbcae060b14413\"]},\"/C/mspace/polymath-core/contracts/interfaces/IModuleFactory.sol\":{\"keccak256\":\"0x233b5044aafc5a57bff374d32be347b5f58e0f7b4194084f5ac812963cee108b\",\"urls\":[\"bzzr://6d78d7157910cab1a9544e09476b2b96c23ec2fedc1c8c2ae12c755e0454b99e\"]},\"/C/mspace/polymath-core/contracts/interfaces/ISecurityToken.sol\":{\"keccak256\":\"0x3cf35b60d39aa6e45f9fdca61d1f9baeecbf91647dce9df7e61b4f1ae603d684\",\"urls\":[\"bzzr://5b51ef4a80ff96a6c53e29b7e342640faa3268f3679657bd3e28d2bf7f4f2e24\"]},\"/C/mspace/polymath-core/contracts/interfaces/ITransferManager.sol\":{\"keccak256\":\"0xe7d3b5757b8502eb3f92225db6c2268f3f6fac3bfa195bbb97ec9f4c15b46210\",\"urls\":[\"bzzr://3dbb6638be740a5db6ecebe28b318b9fbfbb1b81dd25a3bf30ee932e6e794d2a\"]},\"/C/mspace/polymath-core/contracts/mocks/MockCountTransferManager.sol\":{\"keccak256\":\"0x3517b140222b5066759e1ad8e4b29b2a99786149689f545e5c750b2c68a17a13\",\"urls\":[\"bzzr://80212d7f6335f649288b7923214f042da8f26f0b08a257f0cbb6daa59163d579\"]},\"/C/mspace/polymath-core/contracts/modules/Module.sol\":{\"keccak256\":\"0xb49b9a147ef1aea5f62b436a42b078bf6139fede6056d9979f706a646ff64a3c\",\"urls\":[\"bzzr://a146773b975c1f96e3357d8b754490544e98de97515d347c50f5043ac182e0b1\"]},\"/C/mspace/polymath-core/contracts/modules/TransferManager/CTM/CountTransferManager.sol\":{\"keccak256\":\"0x079b8dd687e3e0a671e331b95da1361adb437d8ccb2fefa44111cc93fc13e64e\",\"urls\":[\"bzzr://0eeec3db7455bdbe5670a404e8d2e25db5bfa41cfa29de1b90a6fcef1b1ace5a\"]},\"/C/mspace/polymath-core/contracts/modules/TransferManager/CTM/CountTransferManagerStorage.sol\":{\"keccak256\":\"0x73e5a7431d2f76cad2b845a254dd9945dfbcf9eff7357502eb9d5b16f7772b07\",\"urls\":[\"bzzr://3dc1223fdfd9e6855e3b57dd489c18f60d5d13502520c8f095b1cb729f82bb8b\"]},\"/C/mspace/polymath-core/contracts/modules/TransferManager/TransferManager.sol\":{\"keccak256\":\"0xaa8dab8d2d4214b4b17fba5473905ef0c33887346d3f5377a32587a7ffe87735\",\"urls\":[\"bzzr://02704bd9dcb608d7feb5f1de1cf738c5355fa29805d9f77a3d2cbd4bf3b527db\"]},\"/C/mspace/polymath-core/contracts/storage/modules/ModuleStorage.sol\":{\"keccak256\":\"0xd65d5566179b3e69a8cf490312df6eeaab33a985cf04403f82a00e8ce23ab9a7\",\"urls\":[\"bzzr://931c9fd648267e95414b95d7c055a3477131c4815295bd0d37b8af9c2f00ddac\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]}},\"version\":1}",
  "bytecode": "0x608060405260038054600160a01b60ff021916905534801561002057600080fd5b5060405160408061128e8339810180604052604081101561004057600080fd5b508051602090910151600280546001600160a01b039384166001600160a01b03199182161790915560018054821633179055600380549390921692169190911790556111fd806100916000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638456cb59116100c3578063c3a07df61161007c578063c3a07df614610357578063c45a0155146103af578063ec8cae23146103b7578063f1d74b0f146103d4578063fe4b84df146104c5578063fe58265e146104e257610158565b80638456cb59146103095780638905fd4f14610311578063983d273714610337578063a1422f691461033f578063ae89a29e14610347578063b84dfbd21461034f57610158565b80633d321731116101155780633d321731146101fd5780633f4ba83a146102b15780634a627e61146102b95780635c975abb146102c15780636c2f0d53146102dd5780636faa22a5146102e557610158565b80630f144a481461015d5780631613ec9d146101675780631b28d63e1461018c5780631eb25e0a146101945780632829e651146101b15780632a0acc6a146101f5575b600080fd5b6101656104ea565b005b61016f610522565b604080516001600160e01b03199092168252519081900360200190f35b610165610530565b610165600480360360208110156101aa57600080fd5b5035610567565b6101e3600480360360608110156101c757600080fd5b508035906001600160a01b0360208201351690604001356105ce565b60408051918252519081900360200190f35b6101e3610674565b61028d6004803603608081101561021357600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561024e57600080fd5b82018360208201111561026057600080fd5b8035906020019184600183028401116401000000008311171561028257600080fd5b509092509050610683565b6040518082600381111561029d57fe5b60ff16815260200191505060405180910390f35b610165610717565b6101e3610729565b6102c961072f565b604080519115158252519081900360200190f35b6101e361073f565b6102ed610751565b604080516001600160a01b039092168252519081900360200190f35b610165610760565b6101656004803603602081101561032757600080fd5b50356001600160a01b0316610770565b6101e361092b565b6101e361093d565b6101e361094d565b6102ed610953565b61035f610962565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561039b578181015183820152602001610383565b505050509050019250505060405180910390f35b6102ed6109b0565b610165600480360360208110156103cd57600080fd5b50356109bf565b61049a600480360360808110156103ea57600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561042557600080fd5b82018360208201111561043757600080fd5b8035906020019184600183028401116401000000008311171561045957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a6c945050505050565b604051808360038111156104aa57fe5b60ff1681526020018281526020019250505060405180910390f35b610165600480360360208110156104db57600080fd5b5035610c50565b6102ed610c97565b6104f2610d10565b6040513390303180156108fc02916000818181858888f1935050505015801561051f573d6000803e3d6000fd5b50565b600160e11b630f592f050290565b60005460408051918252517fbf3765749590e868cb7009aaa3187e4ea3d4a89beaaebbaf23727fa99b2427d39181900360200190a1565b6001546001600160a01b031633146105c95760408051600160e51b62461bcd02815260206004820152601560248201527f53656e646572206973206e6f7420666163746f72790000000000000000000000604482015290519081900360640190fd5b600055565b6000600160c21b6715539313d0d2d151028414156106695760025460408051600160e01b6370a082310281526001600160a01b038681166004830152915191909216916370a08231916024808301926020929190829003018186803b15801561063657600080fd5b505afa15801561064a573d6000803e3d6000fd5b505050506040513d602081101561066057600080fd5b5051905061066d565b5060005b9392505050565b600160d91b6420a226a4a70281565b60008061070b878787600260009054906101000a90046001600160a01b03166001600160a01b0316631aab9a9f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d602081101561070457600080fd5b5051610de9565b50979650505050505050565b61071f610d10565b610727610f48565b565b60045481565b600354600160a01b900460ff1681565b600160c21b6715539313d0d2d1510281565b6003546001600160a01b031681565b610768610d10565b610727610fee565b610778610d10565b6001600160a01b0381166107d65760408051600160e51b62461bcd02815260206004820152600f60248201527f496e76616c696420616464726573730000000000000000000000000000000000604482015290519081900360640190fd5b60408051600160e01b6370a08231028152306004820152905182916000916001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561082457600080fd5b505afa158015610838573d6000803e3d6000fd5b505050506040513d602081101561084e57600080fd5b505160408051600160e01b63a9059cbb0281523360048201526024810183905290519192506001600160a01b0384169163a9059cbb916044808201926020929091908290030181600087803b1580156108a657600080fd5b505af11580156108ba573d6000803e3d6000fd5b505050506040513d60208110156108d057600080fd5b50516109265760408051600160e51b62461bcd02815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015290519081900360640190fd5b505050565b600160c11b6727a822a920aa27a90281565b600160d21b651313d0d2d1510281565b60005481565b6002546001600160a01b031681565b60408051600180825281830190925260609182919060208083019080388339019050509050600160d91b6420a226a4a702816000815181106109a057fe5b6020908102919091010152905090565b6001546001600160a01b031681565b600160d91b6420a226a4a7026109d5813361109b565b610a295760408051600160e51b62461bcd02815260206004820152601260248201527f496e76616c6964207065726d697373696f6e0000000000000000000000000000604482015290519081900360640190fd5b600054604080519182526020820184905280517f99457ea455e79a3ce66ecbb56191a2ec1f39507fdb6ec11d0497aaa9668c26249281900390910190a150600055565b6000806000600260009054906101000a90046001600160a01b03166001600160a01b0316631aab9a9f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610abf57600080fd5b505afa158015610ad3573d6000803e3d6000fd5b505050506040513d6020811015610ae957600080fd5b505190508415801590610b0e5750856001600160a01b0316876001600160a01b031614155b15610c35576001600160a01b03861615801590610ba4575060025460408051600160e01b6370a082310281526001600160a01b038981166004830152915191909216916370a08231916024808301926020929190829003018186803b158015610b7657600080fd5b505afa158015610b8a573d6000803e3d6000fd5b505050506040513d6020811015610ba057600080fd5b5051155b15610bad576001015b60025460408051600160e01b6370a082310281526001600160a01b038a81166004830152915191909216916370a08231916024808301926020929190829003018186803b158015610bfd57600080fd5b505afa158015610c11573d6000803e3d6000fd5b505050506040513d6020811015610c2757600080fd5b5051851415610c3557600019015b610c4187878784610de9565b92509250505b94509492505050565b333014610c5c57600080fd5b60048190556040805182815290517fbf3765749590e868cb7009aaa3187e4ea3d4a89beaaebbaf23727fa99b2427d39181900360200190a150565b60025460408051600160e01b63660d0d6702815290516000926001600160a01b03169163660d0d67916004808301926020929190829003018186803b158015610cdf57600080fd5b505afa158015610cf3573d6000803e3d6000fd5b505050506040513d6020811015610d0957600080fd5b5051905090565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d5e57600080fd5b505afa158015610d72573d6000803e3d6000fd5b505050506040513d6020811015610d8857600080fd5b50516001600160a01b031633146107275760408051600160e51b62461bcd02815260206004820152601360248201527f53656e646572206973206e6f74206f776e657200000000000000000000000000604482015290519081900360640190fd5b6003546000908190600160a01b900460ff16610f3957826000541015610f2d5760025460408051600160e01b6370a082310281526001600160a01b038881166004830152915191909216916370a08231916024808301926020929190829003018186803b158015610e5957600080fd5b505afa158015610e6d573d6000803e3d6000fd5b505050506040513d6020811015610e8357600080fd5b5051151580610f0e575060025460408051600160e01b6370a082310281526001600160a01b0389811660048301529151879392909216916370a0823191602480820192602092909190829003018186803b158015610ee057600080fd5b505afa158015610ef4573d6000803e3d6000fd5b505050506040513d6020811015610f0a57600080fd5b5051145b15610f1f5750600190506000610c47565b50600090503060601b610c47565b50600190506000610c47565b50600195600095509350505050565b600354600160a01b900460ff16610fa95760408051600160e51b62461bcd02815260206004820152601660248201527f436f6e7472616374206973206e6f742070617573656400000000000000000000604482015290519081900360640190fd5b60038054600160a01b60ff02191690556040805133815290517faeb196d352664784d1900b0e7414a8face7d29f4dae8c4b0cf68ed477423bbf49181900360200190a1565b600354600160a01b900460ff16156110505760408051600160e51b62461bcd02815260206004820152601260248201527f436f6e7472616374206973207061757365640000000000000000000000000000604482015290519081900360640190fd5b60038054600160a01b60ff021916600160a01b1790556040805133815290517f5ee71a369c8672edded508e624ffc9257fa1ae6886ef32905c18e60196bca3999181900360200190a1565b600080600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110ec57600080fd5b505afa158015611100573d6000803e3d6000fd5b505050506040513d602081101561111657600080fd5b50516001546001600160a01b0385811692811683149350161481806111385750805b806111c8575060025460408051600160e01b638658b8b90281526001600160a01b0387811660048301523060248301526044820189905291519190921691638658b8b9916064808301926020929190829003018186803b15801561119b57600080fd5b505afa1580156111af573d6000803e3d6000fd5b505050506040513d60208110156111c557600080fd5b50515b9594505050505056fea165627a7a72305820868b505b9ca5997b8f89eac0ea73258cd2f0f967359008e822569dd2e6cfae3b0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80638456cb59116100c3578063c3a07df61161007c578063c3a07df614610357578063c45a0155146103af578063ec8cae23146103b7578063f1d74b0f146103d4578063fe4b84df146104c5578063fe58265e146104e257610158565b80638456cb59146103095780638905fd4f14610311578063983d273714610337578063a1422f691461033f578063ae89a29e14610347578063b84dfbd21461034f57610158565b80633d321731116101155780633d321731146101fd5780633f4ba83a146102b15780634a627e61146102b95780635c975abb146102c15780636c2f0d53146102dd5780636faa22a5146102e557610158565b80630f144a481461015d5780631613ec9d146101675780631b28d63e1461018c5780631eb25e0a146101945780632829e651146101b15780632a0acc6a146101f5575b600080fd5b6101656104ea565b005b61016f610522565b604080516001600160e01b03199092168252519081900360200190f35b610165610530565b610165600480360360208110156101aa57600080fd5b5035610567565b6101e3600480360360608110156101c757600080fd5b508035906001600160a01b0360208201351690604001356105ce565b60408051918252519081900360200190f35b6101e3610674565b61028d6004803603608081101561021357600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561024e57600080fd5b82018360208201111561026057600080fd5b8035906020019184600183028401116401000000008311171561028257600080fd5b509092509050610683565b6040518082600381111561029d57fe5b60ff16815260200191505060405180910390f35b610165610717565b6101e3610729565b6102c961072f565b604080519115158252519081900360200190f35b6101e361073f565b6102ed610751565b604080516001600160a01b039092168252519081900360200190f35b610165610760565b6101656004803603602081101561032757600080fd5b50356001600160a01b0316610770565b6101e361092b565b6101e361093d565b6101e361094d565b6102ed610953565b61035f610962565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561039b578181015183820152602001610383565b505050509050019250505060405180910390f35b6102ed6109b0565b610165600480360360208110156103cd57600080fd5b50356109bf565b61049a600480360360808110156103ea57600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561042557600080fd5b82018360208201111561043757600080fd5b8035906020019184600183028401116401000000008311171561045957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610a6c945050505050565b604051808360038111156104aa57fe5b60ff1681526020018281526020019250505060405180910390f35b610165600480360360208110156104db57600080fd5b5035610c50565b6102ed610c97565b6104f2610d10565b6040513390303180156108fc02916000818181858888f1935050505015801561051f573d6000803e3d6000fd5b50565b600160e11b630f592f050290565b60005460408051918252517fbf3765749590e868cb7009aaa3187e4ea3d4a89beaaebbaf23727fa99b2427d39181900360200190a1565b6001546001600160a01b031633146105c95760408051600160e51b62461bcd02815260206004820152601560248201527f53656e646572206973206e6f7420666163746f72790000000000000000000000604482015290519081900360640190fd5b600055565b6000600160c21b6715539313d0d2d151028414156106695760025460408051600160e01b6370a082310281526001600160a01b038681166004830152915191909216916370a08231916024808301926020929190829003018186803b15801561063657600080fd5b505afa15801561064a573d6000803e3d6000fd5b505050506040513d602081101561066057600080fd5b5051905061066d565b5060005b9392505050565b600160d91b6420a226a4a70281565b60008061070b878787600260009054906101000a90046001600160a01b03166001600160a01b0316631aab9a9f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d602081101561070457600080fd5b5051610de9565b50979650505050505050565b61071f610d10565b610727610f48565b565b60045481565b600354600160a01b900460ff1681565b600160c21b6715539313d0d2d1510281565b6003546001600160a01b031681565b610768610d10565b610727610fee565b610778610d10565b6001600160a01b0381166107d65760408051600160e51b62461bcd02815260206004820152600f60248201527f496e76616c696420616464726573730000000000000000000000000000000000604482015290519081900360640190fd5b60408051600160e01b6370a08231028152306004820152905182916000916001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561082457600080fd5b505afa158015610838573d6000803e3d6000fd5b505050506040513d602081101561084e57600080fd5b505160408051600160e01b63a9059cbb0281523360048201526024810183905290519192506001600160a01b0384169163a9059cbb916044808201926020929091908290030181600087803b1580156108a657600080fd5b505af11580156108ba573d6000803e3d6000fd5b505050506040513d60208110156108d057600080fd5b50516109265760408051600160e51b62461bcd02815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015290519081900360640190fd5b505050565b600160c11b6727a822a920aa27a90281565b600160d21b651313d0d2d1510281565b60005481565b6002546001600160a01b031681565b60408051600180825281830190925260609182919060208083019080388339019050509050600160d91b6420a226a4a702816000815181106109a057fe5b6020908102919091010152905090565b6001546001600160a01b031681565b600160d91b6420a226a4a7026109d5813361109b565b610a295760408051600160e51b62461bcd02815260206004820152601260248201527f496e76616c6964207065726d697373696f6e0000000000000000000000000000604482015290519081900360640190fd5b600054604080519182526020820184905280517f99457ea455e79a3ce66ecbb56191a2ec1f39507fdb6ec11d0497aaa9668c26249281900390910190a150600055565b6000806000600260009054906101000a90046001600160a01b03166001600160a01b0316631aab9a9f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610abf57600080fd5b505afa158015610ad3573d6000803e3d6000fd5b505050506040513d6020811015610ae957600080fd5b505190508415801590610b0e5750856001600160a01b0316876001600160a01b031614155b15610c35576001600160a01b03861615801590610ba4575060025460408051600160e01b6370a082310281526001600160a01b038981166004830152915191909216916370a08231916024808301926020929190829003018186803b158015610b7657600080fd5b505afa158015610b8a573d6000803e3d6000fd5b505050506040513d6020811015610ba057600080fd5b5051155b15610bad576001015b60025460408051600160e01b6370a082310281526001600160a01b038a81166004830152915191909216916370a08231916024808301926020929190829003018186803b158015610bfd57600080fd5b505afa158015610c11573d6000803e3d6000fd5b505050506040513d6020811015610c2757600080fd5b5051851415610c3557600019015b610c4187878784610de9565b92509250505b94509492505050565b333014610c5c57600080fd5b60048190556040805182815290517fbf3765749590e868cb7009aaa3187e4ea3d4a89beaaebbaf23727fa99b2427d39181900360200190a150565b60025460408051600160e01b63660d0d6702815290516000926001600160a01b03169163660d0d67916004808301926020929190829003018186803b158015610cdf57600080fd5b505afa158015610cf3573d6000803e3d6000fd5b505050506040513d6020811015610d0957600080fd5b5051905090565b600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d5e57600080fd5b505afa158015610d72573d6000803e3d6000fd5b505050506040513d6020811015610d8857600080fd5b50516001600160a01b031633146107275760408051600160e51b62461bcd02815260206004820152601360248201527f53656e646572206973206e6f74206f776e657200000000000000000000000000604482015290519081900360640190fd5b6003546000908190600160a01b900460ff16610f3957826000541015610f2d5760025460408051600160e01b6370a082310281526001600160a01b038881166004830152915191909216916370a08231916024808301926020929190829003018186803b158015610e5957600080fd5b505afa158015610e6d573d6000803e3d6000fd5b505050506040513d6020811015610e8357600080fd5b5051151580610f0e575060025460408051600160e01b6370a082310281526001600160a01b0389811660048301529151879392909216916370a0823191602480820192602092909190829003018186803b158015610ee057600080fd5b505afa158015610ef4573d6000803e3d6000fd5b505050506040513d6020811015610f0a57600080fd5b5051145b15610f1f5750600190506000610c47565b50600090503060601b610c47565b50600190506000610c47565b50600195600095509350505050565b600354600160a01b900460ff16610fa95760408051600160e51b62461bcd02815260206004820152601660248201527f436f6e7472616374206973206e6f742070617573656400000000000000000000604482015290519081900360640190fd5b60038054600160a01b60ff02191690556040805133815290517faeb196d352664784d1900b0e7414a8face7d29f4dae8c4b0cf68ed477423bbf49181900360200190a1565b600354600160a01b900460ff16156110505760408051600160e51b62461bcd02815260206004820152601260248201527f436f6e7472616374206973207061757365640000000000000000000000000000604482015290519081900360640190fd5b60038054600160a01b60ff021916600160a01b1790556040805133815290517f5ee71a369c8672edded508e624ffc9257fa1ae6886ef32905c18e60196bca3999181900360200190a1565b600080600260009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110ec57600080fd5b505afa158015611100573d6000803e3d6000fd5b505050506040513d602081101561111657600080fd5b50516001546001600160a01b0385811692811683149350161481806111385750805b806111c8575060025460408051600160e01b638658b8b90281526001600160a01b0387811660048301523060248301526044820189905291519190921691638658b8b9916064808301926020929190829003018186803b15801561119b57600080fd5b505afa1580156111af573d6000803e3d6000fd5b505050506040513d60208110156111c557600080fd5b50515b9594505050505056fea165627a7a72305820868b505b9ca5997b8f89eac0ea73258cd2f0f967359008e822569dd2e6cfae3b0029",
  "sourceMap": "178:637:50:-;;;215:26:3;;;-1:-1:-1;;;;;;215:26:3;;;424:122:50;5:2:-1;;;;30:1;27;20:12;5:2;424:122:50;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;424:122:50;;;;;;;879:13:157;:46;;-1:-1:-1;;;;;879:46:157;;;-1:-1:-1;;;;;;879:46:157;;;;;;;;936:20;;;;946:10;936:20;;;967:9;:32;;;;;;;;;;;;;;178:637:50;;;;;;",
  "deployedSourceMap": "178:637:50:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;178:637:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2882:128:91;;;:::i;:::-;;4190:104:115;;;:::i;:::-;;;;-1:-1:-1;;;;;;4190:104:115;;;;;;;;;;;;;;730:80:50;;;:::i;3613:114:115:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3613:114:115;;:::i;885:267:135:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;885:267:135;;;-1:-1:-1;;;;;885:267:135;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;350:39:157;;;:::i;893:317:115:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;893:317:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;893:317:115;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;893:317:115;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;893:317:115;;-1:-1:-1;893:317:115;-1:-1:-1;893:317:115;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:97:91;;;:::i;285:24:50:-;;;:::i;215:26:3:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;306:45:135;;;:::i;612:23:157:-;;;:::i;:::-;;;;-1:-1:-1;;;;;612:23:157;;;;;;;;;;;;;;1726:93:91;;;:::i;2414:347::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2414:347:91;-1:-1:-1;;;;;2414:347:91;;:::i;396:45:157:-;;;:::i;258:41:135:-;;;:::i;215:29:118:-;;;:::i;282:35:157:-;;;:::i;4411:201:115:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4411:201:115;;;;;;;;;;;;;;;;;251:22:157;;;:::i;3898:192:115:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3898:192:115;;:::i;1939:759::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;1939:759:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1939:759:115;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1939:759:115;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1939:759:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1939:759:115;;-1:-1:-1;1939:759:115;;-1:-1:-1;;;;;1939:759:115:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;554:168:50;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;554:168:50;;:::i;2085:119:91:-;;;:::i;2882:128::-;2924:25;:23;:25::i;:::-;2960:42;;:10;;2988:4;2980:21;2960:42;;;;;;;;;2980:21;2960:10;:42;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2960:42:91;2882:128::o;4190:104:115:-;-1:-1:-1;;;;;4190:104:115;:::o;730:80:50:-;787:14;;778:24;;;;;;;;;;;;;;;;730:80::o;3613:114:115:-;1603:7:91;;-1:-1:-1;;;;;1603:7:91;1589:10;:21;1581:55;;;;;-1:-1:-1;;;;;1581:55:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;3687:14:115;:32;3613:114::o;885:267:135:-;1011:7;-1:-1:-1;;;;;1035:10:135;:22;1031:85;;;1079:13;;:37;;;-1:-1:-1;;;;;1079:37:135;;-1:-1:-1;;;;;1079:37:135;;;;;;;;;:13;;;;;:23;;:37;;;;;;;;;;;;;;:13;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;1079:37:135;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1079:37:135;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1079:37:135;;-1:-1:-1;1072:44:135;;1031:85;-1:-1:-1;1142:1:135;885:267;;;;;;:::o;350:39:157:-;-1:-1:-1;;;;;350:39:157;:::o;893:317:115:-;1067:6;1092:14;1112:65;1128:5;1135:3;1140:7;1149:13;;;;;;;;;-1:-1:-1;;;;;1149:13:115;-1:-1:-1;;;;;1149:25:115;;:27;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:27:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1149:27:115;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1149:27:115;1112:15;:65::i;:::-;-1:-1:-1;1091:86:115;893:317;-1:-1:-1;;;;;;;893:317:115:o;1891:97:91:-;1928:25;:23;:25::i;:::-;1964:16;:14;:16::i;:::-;1891:97::o;285:24:50:-;;;;:::o;215:26:3:-;;;-1:-1:-1;;;215:26:3;;;;;:::o;306:45:135:-;-1:-1:-1;;;;;306:45:135;:::o;612:23:157:-;;;-1:-1:-1;;;;;612:23:157;;:::o;1726:93:91:-;1761:25;:23;:25::i;:::-;1797:14;:12;:14::i;2414:347::-;2480:25;:23;:25::i;:::-;-1:-1:-1;;;;;2524:28:91;;2516:56;;;;;-1:-1:-1;;;;;2516:56:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;2649:30;;;-1:-1:-1;;;;;2649:30:91;;2673:4;2649:30;;;;;;2605:14;;2583:12;;-1:-1:-1;;;;;2649:15:91;;;;;:30;;;;;;;;;;;;;;:15;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;2649:30:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2649:30:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2649:30:91;2698:35;;;-1:-1:-1;;;;;2698:35:91;;2713:10;2698:35;;;;;;;;;;;;2649:30;;-1:-1:-1;;;;;;2698:14:91;;;;;:35;;;;;2649:30;;2698:35;;;;;;;;-1:-1:-1;2698:14:91;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;2698:35:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2698:35:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2698:35:91;2690:63;;;;;-1:-1:-1;;;;;2690:63:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:347;;;:::o;396:45:157:-;-1:-1:-1;;;;;396:45:157;:::o;258:41:135:-;-1:-1:-1;;;;;258:41:135;:::o;215:29:118:-;;;;:::o;282:35:157:-;;;-1:-1:-1;;;;;282:35:157;;:::o;4411:201:115:-;4520:16;;;4534:1;4520:16;;;;;;;;;4457;;;;4520;;;;;;;105:10:-1;4520:16:115;88:34:-1;136:17;;-1:-1;4520:16:115;4486:50;;-1:-1:-1;;;;;4547:14:115;4562:1;4547:17;;;;;;;;;;;;;;;;;:25;4590:14;-1:-1:-1;4411:201:115;:::o;251:22:157:-;;;-1:-1:-1;;;;;251:22:157;;:::o;3898:192:115:-;-1:-1:-1;;;;;958:29:91;969:5;976:10;958;:29::i;:::-;950:60;;;;;-1:-1:-1;;;;;950:60:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:14:115;;3989:50;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4050:14:115;:32;3898:192::o;1939:759::-;2124:6;2132:7;2157:19;2179:13;;;;;;;;;-1:-1:-1;;;;;2179:13:115;-1:-1:-1;;;;;2179:25:115;;:27;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2179:27:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2179:27:115;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2179:27:115;;-1:-1:-1;2221:12:115;;;;;:28;;;2246:3;-1:-1:-1;;;;;2237:12:115;:5;-1:-1:-1;;;;;2237:12:115;;;2221:28;2217:405;;;-1:-1:-1;;;;;2331:17:115;;;;;;:54;;-1:-1:-1;2352:13:115;;:28;;;-1:-1:-1;;;;;2352:28:115;;-1:-1:-1;;;;;2352:28:115;;;;;;;;;:13;;;;;:23;;:28;;;;;;;;;;;;;;:13;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;2352:28:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2352:28:115;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2352:28:115;:33;2331:54;2327:108;;;2406:13;;2327:108;2531:13;;:30;;;-1:-1:-1;;;;;2531:30:115;;-1:-1:-1;;;;;2531:30:115;;;;;;;;;:13;;;;;:23;;:30;;;;;;;;;;;;;;:13;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;2531:30:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2531:30:115;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2531:30:115;2520:41;;2516:95;;;-1:-1:-1;;2582:13:115;2516:95;2641:49;2657:5;2664:3;2669:7;2678:11;2641:15;:49::i;:::-;2634:56;;;;;1939:759;;;;;;;;:::o;554:168:50:-;619:10;641:4;619:27;611:36;;;;;;658:9;:21;;;695:19;;;;;;;;;;;;;;;;;554:168;:::o;2085:119:91:-;2170:13;;:25;;;-1:-1:-1;;;;;2170:25:91;;;;2129:10;;-1:-1:-1;;;;;2170:13:91;;:23;;:25;;;;;;;;;;;;;;:13;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;2170:25:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2170:25:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2170:25:91;;-1:-1:-1;2085:119:91;:::o;1386:153::-;1484:13;;;;;;;;;-1:-1:-1;;;;;1484:13:91;-1:-1:-1;;;;;1468:37:91;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1468:39:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1468:39:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1468:39:91;-1:-1:-1;;;;;1454:53:91;:10;:53;1446:85;;;;;-1:-1:-1;;;;;1446:85:91;;;;;;;;;;;;;;;;;;;;;;;;;;;2706:715:115;2928:6;;2890;;;;-1:-1:-1;;;2928:6:115;;;;2923:450;;2972:12;2955:14;;:29;2951:366;;;3068:13;;:28;;;-1:-1:-1;;;;;3068:28:115;;-1:-1:-1;;;;;3068:28:115;;;;;;;;;:13;;;;;:23;;:28;;;;;;;;;;;;;;:13;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;3068:28:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3068:28:115;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3068:28:115;:33;;;:78;;-1:-1:-1;3105:13:115;;:30;;;-1:-1:-1;;;;;3105:30:115;;-1:-1:-1;;;;;3105:30:115;;;;;;;;;3139:7;;3105:13;;;;;:23;;:30;;;;;;;;;;;;;;;:13;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;3105:30:115;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3105:30:115;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3105:30:115;:41;3068:78;3064:157;;;-1:-1:-1;3179:9:115;;-1:-1:-1;3198:1:115;3171:30;;3064:157;-1:-1:-1;3247:14:115;;-1:-1:-1;3287:4:115;3297:2;3271:28;3239:62;;2951:366;-1:-1:-1;3339:9:115;;-1:-1:-1;3358:1:115;3331:30;;2923:450;-1:-1:-1;3391:9:115;;3410:1;;-1:-1:-1;2706:715:115;-1:-1:-1;;;;2706:715:115:o;1015:172:3:-;603:6;;-1:-1:-1;;;603:6:3;;;;595:41;;;;;-1:-1:-1;;;;;595:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:6;:14;;-1:-1:-1;;;;;;1066:14:3;;;1160:19;;;1168:10;1160:19;;;;;;;;;;;;;1015:172::o;749:170::-;402:6;;-1:-1:-1;;;402:6:3;;;;401:7;393:38;;;;;-1:-1:-1;;;;;393:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;801:6;:13;;-1:-1:-1;;;;;;801:13:3;-1:-1:-1;;;801:13:3;;;894:17;;;900:10;894:17;;;;;;;;;;;;;749:170::o;1038:340:91:-;1113:4;1130:12;1172:13;;;;;;;;;-1:-1:-1;;;;;1172:13:91;-1:-1:-1;;;;;1156:37:91;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1156:39:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1156:39:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1156:39:91;1234:7;;-1:-1:-1;;;;;1145:50:91;;;;;;;;;-1:-1:-1;1234:7:91;1223:18;1145:50;;1259:20;;;1270:9;1259:20;:111;;;-1:-1:-1;1308:13:91;;1283:87;;;-1:-1:-1;;;;;1283:87:91;;-1:-1:-1;;;;;1283:87:91;;;;;;;1357:4;1283:87;;;;;;;;;;;;1308:13;;;;;1283:56;;:87;;;;;;;;;;;;;;1308:13;1283:87;;;5:2:-1;;;;30:1;27;20:12;5:2;1283:87:91;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1283:87:91;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1283:87:91;1259:111;1252:118;1038:340;-1:-1:-1;;;;;1038:340:91:o",
  "source": "pragma solidity 0.5.8;\r\n\r\nimport \"../modules/TransferManager/CTM/CountTransferManager.sol\";\r\n\r\n/**\r\n * @title Transfer Manager for limiting maximum number of token holders\r\n */\r\ncontract MockCountTransferManager is CountTransferManager {\r\n\r\n    event Upgrader(uint256 _someData);\r\n    uint256 public someValue;\r\n\r\n    /**\r\n     * @notice Constructor\r\n     * @param _securityToken Address of the security token\r\n     */\r\n    constructor(address _securityToken, address _polyToken) public CountTransferManager(_securityToken, _polyToken) {\r\n\r\n    }\r\n\r\n    function initialize(uint256 _someData) public {\r\n        require(msg.sender == address(this));\r\n        someValue = _someData;\r\n        emit Upgrader(_someData);\r\n    }\r\n\r\n    function newFunction() external {\r\n        emit Upgrader(maxHolderCount);\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:/mspace/polymath-core/contracts/mocks/MockCountTransferManager.sol",
  "ast": {
    "absolutePath": "/C/mspace/polymath-core/contracts/mocks/MockCountTransferManager.sol",
    "exportedSymbols": {
      "MockCountTransferManager": [
        21556
      ]
    },
    "id": 21557,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21503,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:50"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/modules/TransferManager/CTM/CountTransferManager.sol",
        "file": "../modules/TransferManager/CTM/CountTransferManager.sol",
        "id": 21504,
        "nodeType": "ImportDirective",
        "scope": 21557,
        "sourceUnit": 38961,
        "src": "26:65:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21505,
              "name": "CountTransferManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 38960,
              "src": "215:20:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CountTransferManager_$38960",
                "typeString": "contract CountTransferManager"
              }
            },
            "id": 21506,
            "nodeType": "InheritanceSpecifier",
            "src": "215:20:50"
          }
        ],
        "contractDependencies": [
          1769,
          13966,
          16087,
          31060,
          38960,
          39137,
          45364,
          53487
        ],
        "contractKind": "contract",
        "documentation": "@title Transfer Manager for limiting maximum number of token holders\r",
        "fullyImplemented": true,
        "id": 21556,
        "linearizedBaseContracts": [
          21556,
          38960,
          45364,
          31060,
          1769,
          53487,
          13966,
          16087,
          39137
        ],
        "name": "MockCountTransferManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 21510,
            "name": "Upgrader",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21508,
                  "indexed": false,
                  "name": "_someData",
                  "nodeType": "VariableDeclaration",
                  "scope": 21510,
                  "src": "260:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "259:19:50"
            },
            "src": "245:34:50"
          },
          {
            "constant": false,
            "id": 21512,
            "name": "someValue",
            "nodeType": "VariableDeclaration",
            "scope": 21556,
            "src": "285:24:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21511,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "285:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21523,
              "nodeType": "Block",
              "src": "536:10:50",
              "statements": []
            },
            "documentation": "@notice Constructor\r\n@param _securityToken Address of the security token\r",
            "id": 21524,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21519,
                    "name": "_securityToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21514,
                    "src": "508:14:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 21520,
                    "name": "_polyToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21516,
                    "src": "524:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 21521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21518,
                  "name": "CountTransferManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 38960,
                  "src": "487:20:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CountTransferManager_$38960_$",
                    "typeString": "type(contract CountTransferManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "487:48:50"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21514,
                  "name": "_securityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 21524,
                  "src": "436:22:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21516,
                  "name": "_polyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 21524,
                  "src": "460:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "435:44:50"
            },
            "returnParameters": {
              "id": 21522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "536:0:50"
            },
            "scope": 21556,
            "src": "424:122:50",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21546,
              "nodeType": "Block",
              "src": "600:122:50",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 21530,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58712,
                            "src": "619:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "619:10:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 21533,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58886,
                              "src": "641:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockCountTransferManager_$21556",
                                "typeString": "contract MockCountTransferManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockCountTransferManager_$21556",
                                "typeString": "contract MockCountTransferManager"
                              }
                            ],
                            "id": 21532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "633:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 21534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "633:13:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "619:27:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58715,
                      "src": "611:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:36:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21537,
                  "nodeType": "ExpressionStatement",
                  "src": "611:36:50"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21538,
                      "name": "someValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21512,
                      "src": "658:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 21539,
                      "name": "_someData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21526,
                      "src": "670:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "658:21:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21541,
                  "nodeType": "ExpressionStatement",
                  "src": "658:21:50"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21543,
                        "name": "_someData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21526,
                        "src": "704:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21542,
                      "name": "Upgrader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21510,
                      "src": "695:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 21544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "695:19:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21545,
                  "nodeType": "EmitStatement",
                  "src": "690:24:50"
                }
              ]
            },
            "documentation": null,
            "id": 21547,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21526,
                  "name": "_someData",
                  "nodeType": "VariableDeclaration",
                  "scope": 21547,
                  "src": "574:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "573:19:50"
            },
            "returnParameters": {
              "id": 21528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:50"
            },
            "scope": 21556,
            "src": "554:168:50",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21554,
              "nodeType": "Block",
              "src": "762:48:50",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21551,
                        "name": "maxHolderCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39136,
                        "src": "787:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21550,
                      "name": "Upgrader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21510,
                      "src": "778:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 21552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "778:24:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21553,
                  "nodeType": "EmitStatement",
                  "src": "773:29:50"
                }
              ]
            },
            "documentation": null,
            "id": 21555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newFunction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:2:50"
            },
            "returnParameters": {
              "id": 21549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "762:0:50"
            },
            "scope": 21556,
            "src": "730:80:50",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 21557,
        "src": "178:637:50"
      }
    ],
    "src": "0:817:50"
  },
  "legacyAST": {
    "absolutePath": "/C/mspace/polymath-core/contracts/mocks/MockCountTransferManager.sol",
    "exportedSymbols": {
      "MockCountTransferManager": [
        21556
      ]
    },
    "id": 21557,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21503,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:50"
      },
      {
        "absolutePath": "/C/mspace/polymath-core/contracts/modules/TransferManager/CTM/CountTransferManager.sol",
        "file": "../modules/TransferManager/CTM/CountTransferManager.sol",
        "id": 21504,
        "nodeType": "ImportDirective",
        "scope": 21557,
        "sourceUnit": 38961,
        "src": "26:65:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21505,
              "name": "CountTransferManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 38960,
              "src": "215:20:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CountTransferManager_$38960",
                "typeString": "contract CountTransferManager"
              }
            },
            "id": 21506,
            "nodeType": "InheritanceSpecifier",
            "src": "215:20:50"
          }
        ],
        "contractDependencies": [
          1769,
          13966,
          16087,
          31060,
          38960,
          39137,
          45364,
          53487
        ],
        "contractKind": "contract",
        "documentation": "@title Transfer Manager for limiting maximum number of token holders\r",
        "fullyImplemented": true,
        "id": 21556,
        "linearizedBaseContracts": [
          21556,
          38960,
          45364,
          31060,
          1769,
          53487,
          13966,
          16087,
          39137
        ],
        "name": "MockCountTransferManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 21510,
            "name": "Upgrader",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21508,
                  "indexed": false,
                  "name": "_someData",
                  "nodeType": "VariableDeclaration",
                  "scope": 21510,
                  "src": "260:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "259:19:50"
            },
            "src": "245:34:50"
          },
          {
            "constant": false,
            "id": 21512,
            "name": "someValue",
            "nodeType": "VariableDeclaration",
            "scope": 21556,
            "src": "285:24:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21511,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "285:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21523,
              "nodeType": "Block",
              "src": "536:10:50",
              "statements": []
            },
            "documentation": "@notice Constructor\r\n@param _securityToken Address of the security token\r",
            "id": 21524,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21519,
                    "name": "_securityToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21514,
                    "src": "508:14:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 21520,
                    "name": "_polyToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21516,
                    "src": "524:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 21521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21518,
                  "name": "CountTransferManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 38960,
                  "src": "487:20:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CountTransferManager_$38960_$",
                    "typeString": "type(contract CountTransferManager)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "487:48:50"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21514,
                  "name": "_securityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 21524,
                  "src": "436:22:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21516,
                  "name": "_polyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 21524,
                  "src": "460:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "435:44:50"
            },
            "returnParameters": {
              "id": 21522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "536:0:50"
            },
            "scope": 21556,
            "src": "424:122:50",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21546,
              "nodeType": "Block",
              "src": "600:122:50",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 21530,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58712,
                            "src": "619:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "619:10:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 21533,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58886,
                              "src": "641:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockCountTransferManager_$21556",
                                "typeString": "contract MockCountTransferManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockCountTransferManager_$21556",
                                "typeString": "contract MockCountTransferManager"
                              }
                            ],
                            "id": 21532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "633:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 21534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "633:13:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "619:27:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        58715,
                        58716
                      ],
                      "referencedDeclaration": 58715,
                      "src": "611:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:36:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21537,
                  "nodeType": "ExpressionStatement",
                  "src": "611:36:50"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21538,
                      "name": "someValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21512,
                      "src": "658:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 21539,
                      "name": "_someData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21526,
                      "src": "670:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "658:21:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21541,
                  "nodeType": "ExpressionStatement",
                  "src": "658:21:50"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21543,
                        "name": "_someData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21526,
                        "src": "704:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21542,
                      "name": "Upgrader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21510,
                      "src": "695:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 21544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "695:19:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21545,
                  "nodeType": "EmitStatement",
                  "src": "690:24:50"
                }
              ]
            },
            "documentation": null,
            "id": 21547,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21526,
                  "name": "_someData",
                  "nodeType": "VariableDeclaration",
                  "scope": 21547,
                  "src": "574:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "573:19:50"
            },
            "returnParameters": {
              "id": 21528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:50"
            },
            "scope": 21556,
            "src": "554:168:50",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21554,
              "nodeType": "Block",
              "src": "762:48:50",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21551,
                        "name": "maxHolderCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39136,
                        "src": "787:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21550,
                      "name": "Upgrader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21510,
                      "src": "778:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 21552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "778:24:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21553,
                  "nodeType": "EmitStatement",
                  "src": "773:29:50"
                }
              ]
            },
            "documentation": null,
            "id": 21555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newFunction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:2:50"
            },
            "returnParameters": {
              "id": 21549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "762:0:50"
            },
            "scope": 21556,
            "src": "730:80:50",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 21557,
        "src": "178:637:50"
      }
    ],
    "src": "0:817:50"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-05T12:37:19.109Z",
  "devdoc": {
    "methods": {
      "changeHolderCount(uint256)": {
        "params": {
          "_maxHolderCount": "is the new maximum amount of token holders\r"
        }
      },
      "configure(uint256)": {
        "params": {
          "_maxHolderCount": "Maximum no. of holders this module allows the SecurityToken to have\r"
        }
      },
      "constructor": {
        "params": {
          "_securityToken": "Address of the security token\r"
        }
      },
      "executeTransfer(address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount to send\r",
          "_from": "Address of the sender\r",
          "_to": "Address of the receiver\r"
        }
      },
      "getTokensByPartition(bytes32,address,uint256)": {
        "details": "returning the balance of token holder against the UNLOCKED partition. \r This condition is valid only when the base contract doesn't implement the\r `getTokensByPartition()` function.  \r"
      },
      "reclaimERC20(address)": {
        "details": "We duplicate here due to the overriden owner & onlyOwner\r",
        "params": {
          "_tokenContract": "The address of the token contract\r"
        }
      },
      "reclaimETH()": {
        "details": "We duplicate here due to the overriden owner & onlyOwner\r"
      },
      "verifyTransfer(address,address,uint256,bytes)": {
        "details": "module.verifyTransfer is called by SecToken.canTransfer and does not receive the updated holderCount therefore\r     verifyTransfer has to manually account for pot. tokenholder changes (by mimicking TokenLib.adjustInvestorCount).\r     module.executeTransfer is called by SecToken.transfer|issue|others and receives an updated holderCount \r     as sectoken calls TokenLib.adjustInvestorCount before executeTransfer.\r",
        "params": {
          "_amount": "Amount to send\r",
          "_from": "Address of the sender\r",
          "_to": "Address of the receiver\r"
        }
      }
    },
    "title": "Transfer Manager for limiting maximum number of token holders\r"
  },
  "userdoc": {
    "methods": {
      "changeHolderCount(uint256)": {
        "notice": "Sets the cap for the amount of token holders there can be\r"
      },
      "configure(uint256)": {
        "notice": "Used to initialize the variables of the contract\r"
      },
      "constructor": "Constructor\r",
      "executeTransfer(address,address,uint256,bytes)": {
        "notice": "Used to verify the transfer transaction and prevent a transfer if it passes the allowed amount of token holders\r"
      },
      "getDataStore()": {
        "notice": "used to return the data store address of securityToken\r"
      },
      "getInitFunction()": {
        "notice": "This function returns the signature of configure function\r"
      },
      "getPermissions()": {
        "notice": "Returns the permissions flag that are associated with CountTransferManager\r"
      },
      "getTokensByPartition(bytes32,address,uint256)": {
        "notice": "return the amount of tokens for a given user as per the partition\r"
      },
      "pause()": {
        "notice": "Pause (overridden function)\r"
      },
      "reclaimERC20(address)": {
        "notice": "Reclaims ERC20Basic compatible tokens\r"
      },
      "reclaimETH()": {
        "notice": "Reclaims ETH\r"
      },
      "unpause()": {
        "notice": "Unpause (overridden function)\r"
      },
      "verifyTransfer(address,address,uint256,bytes)": {
        "notice": "Used to verify the transfer transaction and prevent a transfer if it passes the allowed amount of token holders\r"
      }
    }
  }
}